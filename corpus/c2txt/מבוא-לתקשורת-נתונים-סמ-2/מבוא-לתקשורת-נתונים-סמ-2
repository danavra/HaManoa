<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\הרצאות\מצגת-1--מבוא\L1_Intro.pptx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
Introduction to data communications
 Lecturer: Itamar Cohen
Lecture 1: Introduction
Vs.
Teasing question: ADSL is ?  time faster than a carrier pigeon.
Answer

046880 A. Kolodny    fall 2001
1

Lecture 2, part 1: pkt / circuit switching
packet Vs. circuit switching

היום
היכרות ומנהלה
מבוא ומושגי יסוד
מה עשית השבוע וגו’

046880 A. Kolodny    fall 2001

046880 A. Kolodny    fall 2001
Logistics
ofanan@gmail.com, www.ofanan.com
Grading
Have a look at the syllabus
Appeals for any issue
By mail only
HWs submission instructions
Always improving…
please print only when necessary
… and use 2-sided printings
Course objectives
Learn basics of data communication and computer networks
Current & future trends
Understand HW constraints
Jobs
Network / Data systems engineers
Information Technology
Cyber security
Application developers

Self study


046880 A. Kolodny    fall 2001
3

046880 A. Kolodny    fall 2001

046880 A. Kolodny    fall 2001
Learn how to learn
Repeat the material after every lesson
Don’t leave HWs to the last minute!
Self study
The course’s textbook
Google & Wiki
Reception hours
After the lecture
Coordinate by mail (Mon-Wed).


046880 A. Kolodny    fall 2001
4

046880 A. Kolodny    fall 2001

046880 A. Kolodny    fall 2001
My teaching methodology 
Use paper & pencil
For packets, timing diagrams etc
Simulate
Small, understandable design
Sanity checks
Units
Negative values


* Emulate?

046880 A. Kolodny    fall 2001
5

046880 A. Kolodny    fall 2001

046880 A. Kolodny    fall 2001
Personal word
My motivation
Your feedback & interest
I don’t know everything…
My aim is to help you to
succeed in job interviews
become good engineers
Breaks times



046880 A. Kolodny    fall 2001
6

046880 A. Kolodny    fall 2001

046880 A. Kolodny    fall 2001
"כל האומר דבר בשם אומרו" וגו' – 
A note on the use of these ppt slide
We’re making these slides freely available to all (faculty, students, readers). They’re in PowerPoint form so you see the animations; and can add, modify, and delete slides  (including this one) and slide content to suit your needs. They obviously represent a lot of work on our part. In return for use, we only ask the following: 
If you use these slides (e.g., in a class) that you mention their source (after all, we’d like people to use our book!)
If you post any slides on a www site, that you note that they are adapted from (or perhaps identical to) our slides, and note our copyright of this material.

Thanks and enjoy!  JFK/KWR.

All material copyright 1996-2012
     J.F Kurose and K.W. Ross, All Rights Reserved


See additional references in the end of each ppt

046880 A. Kolodny    fall 2001
7



046880 A. Kolodny    fall 2001

046880 A. Kolodny    fall 2001
Agenda
Acquaintance & administration
What’s the Internet
Network edge
Network core
Optimization criteria
Protocol layers
The Internet: “nuts and bolts” view
Billions of connected computing devices:
hosts = end systems 

Communication links
fiber, copper, radio, satellite

Packet switches: forward packets 
routers and switches
wired
links
wireless
links

















router


















































































































































mobile network
global ISP
regional ISP
home 
network
institutional
       network





































































































































Smartphone

Things
PC
server
wireless
laptop
















































9

ברגים ואומים
* שרת, Server יכול להיות גם מחובר לא ישירות לאינטרנט.
* גם המחשב שלכם יכול להיות שרת
* לא כל רשת חייבת להיות מחוברת לאינטרנט

What’s the Internet (Cont’)
Internet “network of networks”
Interconnected ISPs
Internet Service Providers

protocols control sending, receiving of msgs
e.g., TCP, IP, HTTP, Skype,  802.11

Standards
IETF: Internet Engineering Task Force
Publishes RFC: Request for comments

10


Internet structure: step by step
Question: how to connect millions of local networks?


access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net
…
…
…
…
…
…
11

“Welcome 2 the machine”: compare to the development of autonomous cars

Internet structure: step 1
Full mesh


access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net
…
…
…
…
…
…
…
…
…
…
…
Full Mesh
(Clique): 
O(N2) 
links
12


Internet structure: step 2
Global ISP


access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net
…
…
…
…
…
…

























































global
ISP
13


Internet structure: step 3
Global ISPs (aka tier 1)
AT&T, Sprint, Level3, …


access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net

access
net
…
…
…
…
…
…








ISP 2

























































ISP 1

























































ISP 3

















































14

Step 3: The TIER1 ISPs connect each other, so as to allow global coverage
Step 4: Regional ISPs
Step 5: Finding of lions: Customer, which try to save money, PEER each other 
via IXPs (Internet Exchange Points)
* Finally: Content Provider (e.g., Google, Microsoft,   Akamai) appear
And have their own “nostro” networks
Internet structure: step by step
access
ISP
access
ISP
access
ISP
access
ISP
access
ISP
access
ISP
access
ISP
access
ISP
Regional ISP
Regional ISP
IXP
IXP
Tier 1 ISP
Tier 1 ISP
Google
IXP

15

לספר להם את הסיפור עם youtube שאחת החברות רצתה לפתוח את החוזה העברת נתונים

at center: small # of well-connected large networks
“tier-1” commercial ISPs (e.g., Level 3, Sprint, AT&T, NTT), national & international coverage
content provider network (e.g, Google): private network that connects it data centers to Internet, often bypassing tier-1, regional ISPs


Real-world tier-1 ISP: Sprint



…







to/from customers
peering
 to/from backbone




…


…


…


…




































PoP means: “"קצה דרך באחזקת מעצ
POP: point-of-presence
16


Other Real-world tier-1 ISPs

לספר להם על הבעיה ש-youtube  יצרה
17
Agenda
Acquaintance & administration
What’s the internet
The network edge
Access network
Physical media
The network core
Optimization criteria
Protocol layers
A closer look at network structure:
Network edge
hosts: clients and servers
servers often in data centers
Access networks, communication links
Network core 
interconnected routers
network of networks 












































































































































mobile network
global ISP
regional ISP
home 
network
institutional
       network






































































































































19


	

The network edge
end systems (hosts):
run application programs
e.g. Web, email
at “edge of network”

client/server model
client host requests, receives service from always-on server, eg
Web browser/server
 email client/server

peer-peer model:
 minimal (or no) use of dedicated servers
e.g. Skype, files sharing



















































































































































































































































































client/server



peer-peer

20


Access networks and physical media
Q: How to connect end systems to edge router?
residential access nets
institutional access networks (school, company)
mobile access networks
Keep in mind: 
bandwidth (bits per second) of access network?
shared or dedicated?






























































































































































































































































































































































































































































































































































































































21


Access net: home network


to/from headend or central office


















cable or DSL modem

router, firewall, NAT


wireless access 
point
wireless
devices


often combined 
in single box






















22

UFI
Agenda
Acquaintance & administration
What’s the internet
The network edge
Access network
Physical media
The network core
Optimization criteria
Protocol layers
Access net: 
Digital Subscriber Line (“Phone netw”)






Central Office




































ISP

telephone
network






DSLAM





voice, data transmitted over dedicated link at different freq. 

Asymmetric [down / up] stream rates
Very-high-bitrate DSL (VDSL)
Which is, in fact, also asymmetric.
The de-facto speed is affected by 
Distance to the CO
Gauge of the cable
Electro-Magnetic Interference
How much the costumer paid


DSL
modem
splitter












DSL Access 
Multiplexer


Modem – converts D (from the PC) to Analog. The DSLAM converts it back to digital, multiplexing multiple users.
046880 A. Kolodny    fall 2001
24

046880 A. Kolodny    fall 2001

046880 A. Kolodny    fall 2001
Access net: cable network (Hot)
data, TV transmitted at different 
frequencies over a shared cable 



cable
modem
splitter







































































…






cable headend









Access net: cable network (hot)


cable
modem
splitter







































































…






cable headend











Channels


V
I
D
E
O

V
I
D
E
O
V
I
D
E
O
V
I
D
E
O
V
I
D
E
O
V
I
D
E
O

D
A
T
A

D
A
T
A

C
O
N
T
R
O
L







1
2
3
4
5
6
7
8
9








frequency division multiplexing: different channels transmitted
in different frequency bands

046880 A. Kolodny    fall 2001
26

046880 A. Kolodny    fall 2001

046880 A. Kolodny    fall 2001
Access net: cable network (hot)
Data Over Cable Service Interface Specification
High BW (DOCSIS 3.1: 1/10Gbps up/downstream), but
BW may be divided to multiple heavy users
BW is subject to physical / financial constraints , similar to DSL



data, TV transmitted at different 
frequencies over shared cable 



cable
modem
splitter







































































…






cable headend











































ISP


Cable Modem
Termination System




046880 A. Kolodny    fall 2001
27

046880 A. Kolodny    fall 2001

046880 A. Kolodny    fall 2001
Fiber To The X
 Q: how close to the desktop can the fiber get? 

 A: either to the
Node / Neighborhood
Hybrid Fiber Cable
Cabinet
Building
Home 
Desktop

Enterprise access networks (Ethernet)










































































































Ethernet 
switch

institutional mail,
web servers
institutional router




institutional link to 
ISP (Internet)








































Typically used in companies, universities, etc
Rates: 10M / 100M / 1G / 10Gbps …

Wireless access networks
shared wireless access network connects end system to router
Via Base Station (aka Access Point)
Wireless LANs:
within building (100 ft)
802.11b/g (WiFi)

wide-area wireless access
provided by telco (cellular) operator, 10’s km
3G, 4G, 5G











































































to Internet
to Internet
30


Physical Media: guided media
Twisted pair
aka ביסלי גריל
Why twist?
Made of copper
Either shielded






…or Unshielded


Coaxial cable
Coaxial means: בעל ציר משותף
In aim to decrease outer EMI
Common in cable TV
Physical guided media: 
Fiber optic cable
 Very fast: ~100 Gbps
Standards are named OC-n (Optical Carrier), where OC-1 carries 51.8 Mbps
So the BW of OC-768 is ~40Gbps
 Very low signal attenuation, even for ~100km
 Very expensive
Not necessarily the cables themselves, but – the xmt/rcvrs and switches
Physical unguided media: radio
Signal carried in electromagnetic spectrum
propagation environment effects:
Reflection 
Obstacles
Interference
Can be classified by the distances
Very short distances (keyboard, mouse, earphones)
Medium distances: Wireless Local Area Network
WiFi
Wide are networks
4G, 5G cellular
Satellite
Geostationary: 36K kms above earth
Low-Earth Orbiting
Significant propagation delay

Agenda
Acquaintance & administration
What’s the internet
Network edge
Network core
Packet switching
Circuit switching
Optimization criteria
Protocol layers
Packet switching
Hosts break application-layer messages into packets
Forward packets from one router to the next across links on path from source to destination
Each packet transmitted at full link capacity
Either source routing, or fixing only the next-hop















































































































































































































































































































































































































35






































http://www.adalovelace.com
001100



011001

011001

11011

110101


Ada Lovelace
http://www.adalovelace.com

Animation by: Nick McKeown & 
Balaji Prabhakar
Pros. & Cons.?
Packet switching: transmission rate
Denote: 
packet length L 
transmission rate R
Aka link capacity, link bandwidth
Fixed by the (bottleneck) link
packet
transmission
delay
time needed to
transmit L-bit
packet into link
L (bits)
R (bits/sec)
=
=



046880 A. Kolodny    fall 2001
37

046880 A. Kolodny    fall 2001

046880 A. Kolodny    fall 2001
Packet-switching: 
store-and-forward
Entire packet must arrive at router before it can be transmitted on next link
source









R bps

destination
1
2
3

















L bits
per packet
R bps
38


Packet-switching: 
queuing delay & loss

If arrival rate > xmt rate, packets will queue
Packets may be dropped (lost) if buffer is full






























A
B
C
R = 100 Mb/s
R = 30 Mb/s



D
E
queue of packets
waiting for output link



















39


Forwarding & Routing
Routing: determines source-destination route taken by packets
routing algorithms




Forwarding: move packets from router’s input to appropriate router output
Forwarding table




routing algorithm

local forwarding table
header value
output link

0100
0101
0111
1001
3
2
2
1













































































1
2
3




0111
dest address in arriving
packet’s header











































Agenda
Acquaintance & administration
What’s the internet
Network edge
Network core
Packet switching
Circuit switching
Optimization criteria
Protocol layers
Transportation analogy
Routing alg: WAZE
Fwd. table: what to do in the next interchange
Circuit switching: rails


046880 A. Kolodny    fall 2001
42

046880 A. Kolodny    fall 2001

046880 A. Kolodny    fall 2001
Circuit switching
End-end resources allocated & reserved for “call” between source & dest:
Guaranteed performance
circuit segment idle (and wasted) if not used by call 
no sharing
Used in traditional telephone networks





















































מירי רגב מדברת בטל' עם מתי כספי
046880 A. Kolodny    fall 2001
43

046880 A. Kolodny    fall 2001

046880 A. Kolodny    fall 2001
Circuit switching: FDM & TDM
Freq
Division
Multiplexing

frequency

time






frequency

time











































4 users




Example:
Time
Division
Multiplexing
44

Two simple multiple access control techniques.

Each mobile’s share of the bandwidth is divided into portions for the uplink and the downlink. Also, possibly, out of band signaling.


Packet Vs. circuit switching

Packet switching 
 Great for bursty data
 Resource sharing
 No call setup
 No BW guarantees - excessive congestion possible
 Packet delay and loss
 Protocols needed for reliable data transfer, congestion control

Agenda
Acquaintance & administration
What’s the internet
Network edge
Network core
Optimization criteria
Power
Delay 
Throughput 
Packet loss
Protocol layers
Power saving: motivation
Save power  Less diseases and death from polluting power plants
Save money
Electrical bills
Cooling costs

Battery life
Heat of devices
Inconvenient to the human user
Causes electrical problems
Source: Alcatel-Lucent Eco-Sustainable Networks 
Green networking: industrial projects


046880 A. Kolodny    fall 2001
48

046880 A. Kolodny    fall 2001

046880 A. Kolodny    fall 2001
Big router is not a matchbox
Cisco GSR 12816
Juniper T640

2m

50 cm

60cm
Capacity: 640Gb/s
Power: 5kW
1m


75 cm

50 cm
Capacity: 320Gb/s
Power: 3kW
Agenda
Acquaintance & administration
What’s the internet
Network edge
Network core
Optimization criteria
Power
Delay 
Throughput 
Packet loss
Protocol layers

למי כאן יש רשיון לאופנוע?
046880 A. Kolodny    fall 2001
50

046880 A. Kolodny    fall 2001

046880 A. Kolodny    fall 2001
Four sources of packet delay
dproc – depended upon the network equipment and the concrete packet’s characteristics 
dqueue – depended upon link congestion
dtrans – depended upon pkt size & link rate
dprop – depended upon distance & (hopefully) speed of light
node
processing
queueing
dnodal = dproc + dqueue + dtrans +  dprop






















A
B

propagation

transmission












Delay: notations
Dproc + dqueue – aka Tproc, TD
dtra – aka Ttrans, Txmt, or Tx
dprop – aka Tpd



Mb  this is contrast to Mebibit=2^20 bits
046880 A. Kolodny    fall 2001
52

046880 A. Kolodny    fall 2001

046880 A. Kolodny    fall 2001
Packet delay: Kahoot.it
מעבירים חבילת מידע יחידה מארה"ב לאב"ג, דרך נתב יחיד. נתונים:
Pkt size: 12.5kBytes
Link rates:  100 Mbps
Distance: 20,000 kms
Propagation speed: 2*10^8 mps
Tproc = 1 ms
Tq = 0
כמה זמן עובר מרגע שמתחילים לשדר את החבילה בארה"ב, ועד שהיא מגיעה במלואה ליעד באב"ג?


046880 A. Kolodny    fall 2001
53

046880 A. Kolodny    fall 2001

046880 A. Kolodny    fall 2001
Packet delay: numerical example

dproc + dqueue  100 nsec
dxmt – 12.5kB packet @ 100 Mbps  
dprop – 20k km @ 2*10^8 m/sec  
node
processing
queueing
dnodal = dproc + dqueue + dtrans +  dprop






















A
B

propagation

transmission













Dxmt: 12.5kB / 100 Mbps = 100 kb / 100 Mbps = 1 ms
Dprop: 20k kms = 20*10^6 m = 2*10^7 m  Dprop = 0.1 sec


2*Txmt + Tprop + Tproc + Tq = 2*100kb / 100 Mbps + 20 Mm / 2*10^8 mps + 1 ms = 
= 2 ms + (20 / 200) s + 1 ms = 103 ms.

046880 A. Kolodny    fall 2001
54

046880 A. Kolodny    fall 2001

046880 A. Kolodny    fall 2001
Agenda
Acquaintance & administration
What’s the internet
Network edge
Network core
Optimization criteria
Power
Delay 
Throughput
Packet loss
Protocol layers
Throughput
Throughput: rate (bits/sec) at which bits transferred between sender/receiver







Goodput: rate of the useful data
Eg, the file sent – excluding headers & trailers






























server, with
file of F bits 
to send to client
link capacity
 Rs bits/sec
link capacity
 Rc bits/sec
























server sends bits 
(fluid) into pipe

 pipe that can carry
fluid at rate
 Rs bits/sec
 pipe that can carry
fluid at rate
 Rc bits/sec


Agenda
Acquaintance & administration
What’s the internet
Network edge
Network core
Optimization criteria
Power
Delay 
Throughput 
Packet loss
Protocol layers
Packet loss
Queue (aka buffer) preceding link has finite capacity
Packet arriving to (almost) full queue may be dropped (aka lost, rejected, discarded)
Upon realizing that a packet was lost, the source node / previous node may retransmit it

















A
B
packet being transmitted








packet arriving to
a full buffer is lost
buffer 
(waiting area)



58


Agenda
 Acquaintance & administration
What’s the internet
Network edge
Network core
Optimization criteria
Power
Delay 
Throughput 
Packet loss
Protocol layers
Protocol “Layers”
Networks are complex! 
many “pieces”:
hosts
routers
links of various media
applications
protocols
hardware, software
Question: 
Is there any hope of organizing structure of network?


1-61

Internet Layers: 
a postal service analogy
Application: online purchase
Transport: express / registered / regular
Network: Use  WAZE to find best route
link: Terminal’s gate, interchange exit
physical: Conveyor belt / crane / porters 


application

transport

network

link

physical





1-62
Why layering?
Hierarchical, top-down planning
Divide a complex task to smaller, easier tasks.

Easier maintenance
A change of implementation of layer’s service is transparent to rest of system

Breaking data in segments
Data
The complete packet
Application Header
Presentation Header
Session Header
Transport Header
Network Header
Link Header
Frame Preamble

Data Link Trailer(CRC)
Data
Packet
Packet creation process




























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Data
Data
65
 Introduction 1-65

Internet protocol stack

Why “Stack”?

Application: e.g. e-mail, web, file sharing

Transport: (un)reliable proc.-to-proc. data transfer

Network: end-to-end routing 

Link: transfer between neighboring nodes

Physical: bits “on the wire”


application

transport

network

link

physical





1-67
Physical: See
https://en.wikipedia.org/wiki/Line_code


OSI reference model (by ISO)
OSI: Open Source Interconnection
ISO: International Organization for Standardization
presentation: allow applications to interpret meaning of data, e.g., encryption, compression
session: synchronization. 
Eg: migration
Internet stack “missing” these layers!
these services, if needed, must be implemented in application

application

presentation

session

transport

network

link

physical







1-68
OSI model

1-69
The 5 / 7 layers

1-70
L5
Simple Mail Trans’ Prot’.
Domain Name System.
HyperText Transfer Prot’.
Simple Netw. Mgmt. Prot’.


L4
UDP (User Datagram Prot’) assumes that error checking and correction is either not necessary or performed in the application, avoiding the overhead of such processing at the network interface level. Time-sensitive applications often use UDP because dropping packets is preferable to waiting for delayed packets, which may not be an option in a real-time system.
UDP's stateless nature is also useful for servers answering small queries from huge numbers of clients. Unlike TCP, UDP supports packet broadcast (sending to all on local network) and multicasting (send to all subscribers).
UDP is used for DNS, streaming media (IPTV, VoIP) and online games.

TCP (Transmission Ctrl Prot’).

SCTP (Stream Ctrl Transmission Prot’) – provides reliability, sequencing and cong. ctrl. as in TCP; SCTP is msg-oriented, as is UDP.

L3
I Group Management Prot.
Other Network Layer Protocols:
	IPSec (Secure).
	Routing protocols (BGP, RIP, OSPF).

Why NOT layering?
In practice, the borders between the layers are not definite
The “link layer” of delivery (flight / boat / car) impacts the higher layers
Layering considered harmful
Duplicate functions (eg ECC / Checksum)
Parallel to multiple identical security checks at an airport
Knowledge about other layers may enable optimizations
Eg – is there another branch of the destination company in case of a traffic jam?
Conclusion
Communication networks are imperfect
Many problems stem from “historical reasons”
References
EE384x, Packet Switch Architectures – lectures slides by Nick McKeown & Balaji Prabakhar, spring 2012, Stanford University


 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\הרצאות\מצגת-2.0--שכבת-היישום--מבוא,-HTTP-ו-Web-caching\L2.0_App_n_Web.pptx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
Application Layer
2-1
Introduction to data communications 

Lecturer: Itamar Cohen

Chapter 2: Application Layer (part1) 

Computer Networking: A Top Down Approach 
6th edition 
Jim Kurose, Keith Ross
Addison-Wesley
March 2012
A note on the use of these ppt slides:
We’re making these slides freely available to all (faculty, students, readers). They’re in PowerPoint form so you see the animations; and can add, modify, and delete slides  (including this one) and slide content to suit your needs. They obviously represent a lot of work on our part. In return for use, we only ask the following:


If you use these slides (e.g., in a class) that you mention their source (after all, we’d like people to use our book!)
If you post any slides on a www site, that you note that they are adapted from (or perhaps identical to) our slides, and note our copyright of this material.

Thanks and enjoy!  JFK/KWR

     All material copyright 1996-2012
     J.F Kurose and K.W. Ross, All Rights Reserved
See additional references in the end of this presentation
מבוסס גם על שקפים של ד"ר בועז בן משה, פרופ' אמיר הרצברג, איציק קיטרוסר, שי אולשר, אלכס מיטנק, אליאב מנשה ופיליפ לויס


2


1
Application Layer
2-2
Network apps are everywhere
E-mail
Web
Text messaging
File sharing
Streaming 
	(YouTube, Netflix) 
Voice over IP (e.g., Skype)
Social networking
Search
Gaming
…



How to program them?
How are they so scalable & modular?
What are theirs requirements from the lower-level protocols?

Application Layer
2-3


2
Application Layer
2-3
Chapter 2.0: outline
Motivation & Basic concepts
Client-server / peer-to-peer (P2P)
Processes communication
Requirements from the transport layer
Web


Application Layer
2-4


3
Application Layer
2-4












































































































































































































































































































Creating a network app
write programs that:
run on (different) end systems
communicate over network
e.g., web server software communicates with browser software
no need to write software for network-core devices
network-core devices do not run user applications 
applications on end systems allow for rapid app development




application
transport
network
data link
physical







application
transport
network
data link
physical







application
transport
network
data link
physical





Application Layer
2-5


4
Application Layer
2-5









































































































































































































































































































Client-server architecture
server: 
always-on host
permanent IP address
data centers for scaling
clients:
communicate with server
may be intermittently connected
may have dynamic IP addresses
do not communicate directly with each other


client/server

Application Layer
2-6

intermittently  - חליפות
5
Application Layer
2-6









































































































































































































































































































P2P architecture
no always-on server
arbitrary end systems directly communicate
peers request / provide service from / to other peers
self scalability – new peers bring new service capacity, as well as new service demands
peers are intermittently connected and change IP addresses
complex management





peer-peer

Application Layer
2-7


6
Hybrid of client-server and P2P
Skype
voice-over-IP P2P application
client-server connection: find address of remote party
client-client connection: call (not through server) 

Instant messaging
chatting between two users is P2P
centralized service: client presence detection/location
Application  2-7

Application Layer
2-8
Application Layer
2-8
Chapter 2.0: outline
Motivation & Basic concepts
Client-server / peer-to-peer (P2P)
Processes communication
Requirements from the transport level
Web


Application Layer
2-9


8
Application Layer
2-9
Processes communicating
process: program running within a host
within same host, two processes communicate using  inter-process communication (defined by OS)
processes in different hosts communicate by exchanging messages

client process: the initiator
server process: the responder






Even P2P applications have client processes & server processes


Application Layer
2-10


9
Application Layer
2-10
Sockets
process sends/receives messages to/from its socket
aka Application Programming Interface
socket analogous to door
sending process pushes message out door
receiving process collects the message from the door



Internet

controlled
by OS

controlled by
app developer




transport



application
physical
link
network
process







transport



application
physical
link
network
process







socket





Application Layer
2-11


10
Application Layer
2-11
Addressing processes
to receive messages, process  must have identifier
host device has unique 32-bit IP address
Q: Is it enough for identifying the process?
A: no. many processes can be running on same host

identifier includes IP address and port number 
Example port numbers:
HTTP server: 80
mail server: 25
to send HTTP message to gaia.cs.umass.edu web server:
IP address: 128.119.245.12
port number: 80

Application Layer
2-12


11
Application Layer
2-12
Chapter 2.0: outline
Motivation & Basic concepts
Client-server / peer-to-peer (P2P)
Processes communication
Requirements from the transport level
Web


Application Layer
2-13


12
Application Layer
2-13
App-layer protocol defines
types of messages exchanged
e.g., request, response 
syntax:
what fields in messages & how fields are delineated
message semantics 
meaning of information in fields
rules for when and how processes send & respond to messages
open protocols:
defined in RFCs
allows for interoperability
e.g., HTTP, SMTP
proprietary protocols:
e.g., Skype

Application Layer
2-14


13
Application Layer
2-14
Chapter 2.0: outline
Motivation
Basic concepts
Requirements from the transport level
Web


Application Layer
2-15


14
Application Layer
2-15
What transport service does an app need?
data integrity
some apps (e.g., file transfer, web transactions) require 100% reliable data transfer 
other apps (e.g., audio) can tolerate some loss

timing
some apps (e.g., VoIP, gaming) require low delay
throughput
some apps (e.g., multimedia) require minimum amount of throughput to be “effective”
other apps (“elastic apps” – eg, file transer) make use of whatever throughput they get 
security
encryption, data integrity, …

Application Layer
2-16


15
Application Layer
2-16
Transport service requirements: common apps
application

file transfer
e-mail
Web documents
VoIP/video conf’

Streaming stored 
audio/video
text messaging

data loss

throughput

time sensitive









Application Layer
2-17


16
Application Layer
2-17
Transport service requirements: common apps
application

file transfer
e-mail
Web documents
VoIP/video conf’

Streaming stored 
audio/video
text messaging

data loss

no loss
no loss
no loss
loss-tolerant

loss-tolerant

no loss
throughput

elastic
elastic
elastic (few kbps)
audio: ~10 kbps
Video: ~Mbps
same as above 

elastic
time sensitive

no
no
no
yes, 100’s 
msec
yes, few 
secs
no








Application Layer
2-18


17
Application Layer
2-18
Transport service requirements: common apps
application

file transfer
e-mail
Web documents
VoIP/video conf’

Streaming stored 
audio/video
interactive games
text messaging

data loss

no loss
no loss
no loss
loss-tolerant

loss-tolerant

loss-tolerant

no loss
throughput

elastic
elastic
elastic (few kbps)
audio: ~10 kbps
Video: ~Mbps
same as above 

~10kbps

elastic
time sensitive

no
no
no
yes, 100’s 
msec
yes, few 
secs
yes, ~100’s msec
no









Application Layer
2-19


18
Application Layer
2-19
Internet transport protocols services
TCP service:
reliable transport between sending and receiving process
flow control: sender won’t overwhelm receiver 
congestion control: throttle sender when network overloaded
does not provide: timing, minimum throughput guarantee, security
connection-oriented: setup required between client and server processes

UDP service:
unreliable data transfer between sending and receiving process
does not provide: reliability, flow / congestion control, delay / TP guarantee, security 
	Shortly: WYPIWYG
Q: So why UDPing?
A: 1.Because it’s cheaper  
     2. For Real Time apps



Application Layer
2-20


19
Application Layer
2-20
Internet apps:  application, transport protocols
application

e-mail
remote terminal access
Web 
file transfer
streaming multimedia

Internet telephony

application
layer protocol

SMTP [RFC 2821]
Telnet [RFC 854]
HTTP [RFC 2616]
FTP [RFC 959]
HTTP (e.g., YouTube), 
* RTP [RFC 1889]
* SIP, RTP, 
Proprietary (e.g., Skype)
underlying
transport protocol

TCP
TCP
TCP
TCP
TCP or UDP


TCP or UDP







* SIP (Session Initiation Protocol) is used for initiating a 
connection, which is later managed by RTP Real-time Transfer Protocol


Application Layer
2-21

Telephony & streaming use UDP because they can tolerate some loss, and they like shorter connection setup, less o/h (as in TCP) and a minimal b/w. 
However, many firewalls block (most) UDP pkts, and therefore these apps oven opens also a bkp TCP connection.
20
Securing TCP
TCP & UDP 
no encryption

Secure Sockets Layer (and later, Transport Layer Security) provide encrypted TCP connection
SSL is at app layer
Apps use SSL libraries, which “talk” to TCP
Example: HTTPS – “HTTP over TLS”



Application Layer
2-21

Application Layer
2-22

SSL / TLS: Both sides authenticate each other, and then a session key to encrypt the data. For starting the connection this way (from client side): StartTls.
21
Application Layer
2-22
Chapter 2.0: outline
Motivation
Basic concepts
Requirements from the transport level
Web

Application Layer
2-23


22
Application Layer
2-23
Web
a web page consists of objects (files)
object can be HTML file, JPEG image, Java applet, audio file, etc
web page consists of base HTML-file which includes several referenced objects
each object is addressable by a URL, e.g.,

www.someschool.edu/someDept/pic.gif


host name
path name

Application Layer
2-24


23
Application Layer
2-24
Rabbi Tarfon Ben Leitzan-Tznon
HTTP: HyperText Transfer Protocol
Hypertext – text which includes hyperlinks 

HTML: HyperText Markup Language
Markup – like “markering”: how to present the text
Eg underline, bold, italic
In contrast to WYSIWYGs
Eg WORD, ppt

URL: Uniform Resource Locator
A unique location in the network


Application Layer
2-25


24
Application Layer
2-25
Confused?
URL is the location of the desired page
Eg, www.google.co.il/maps

HTTP is a protocol, which details how the user (client) requests the data, and how the server responds him
Another protocol: ftp

HTML is the language, 
	in which the “text” in the 
    requested webpage is sent

Application Layer
2-26


25
Application Layer
2-26
HTTP overview
client: browser that requests, receives and “displays” Web objects 

server: sends objects in response to clients’ requests

HTTP: Determines how the browser and the web server communicate 

PC running
Firefox browser
server 
running
Apache Web
server
iphone running
Safari browser

HTTP request

HTTP response

HTTP request

HTTP response






























Application Layer
2-27


26
Application Layer
2-27
Chapter 2.0: outline
Motivation
Basic concepts
Requirements from the transport level
Web
Stateless
(non)-persistent
HTTP Basic syntax
Cookies
Scalability


Application Layer
2-28


27
Application Layer
2-28
Stateful Vs. Stateless protocols
HTTP is “stateless”
server maintains no information about past client requests
Great for NUDNIKIM

“state” = past history, e.g.,
Received objects
Authorizations
Shopping charts
 Keeping state is complex
 If server/client crashes, their views of “state” may be inconsistent


Application Layer
2-29


28
Application Layer
2-29
Chapter 2.0: outline
Motivation
Basic concepts
Requirements from the transport level
Web
Stateless
(non)-persistent
HTTP Basic syntax
Cookies
Scalability


Application Layer
2-30


29
Application Layer
2-30
To persist or not to persist?
non-persistent HTTP
at most one object sent over TCP connection
downloading multiple objects requires multiple connections

persistent HTTP
multiple objects sent over a single TCP connection

Application Layer
2-31


30
Application Layer
2-31


Non-persistent HTTP example
User enters URL:
1a. HTTP client initiates TCP connection to HTTP server (process) at www.ofanan.com on port 80

2. HTTP client sends via a TCP connection socket an HTTP request message, requesting for object MitveHaGaz.index
1b. HTTP server at host www.ofanan.com waiting for TCP connection at port 80.  “accepts” connection, notifying client
3. HTTP server receives request message, and sends a response message, containing the requested object


time



www.ofanan.com/MitveHaGaz.index


Application Layer
2-32

(contains text, 
references to 10 
jpeg images)

31
Application Layer
2-32
Non-persistent HTTP (cont.)
5. HTTP client receives response message containing html file, displays and parses html file
6. Steps 1-5 repeated for each of the 10 referenced objects (e.g., figs., videos).
4. HTTP server closes TCP connection. 


time


Application Layer
2-33


32
Application Layer
2-33
Response time
Round Trip Time (definition): time for a small packet to travel from client to server and back
HTTP response time:
one RTT to initiate TCP connection
one RTT for HTTP request and first few bytes of HTTP response to return
file transmission time








time to 
transmit 
file

initiate TCP
connection

RTT

request
file

RTT

file
received
time
time






























Application Layer
2-34


33
Non-persistent HTTP drawbacks
 Long delay
Opens many TCP connections 
 Significant overhead for the operating system
For reducing the response time, the client may open a few TCP connections in parallel, requesting one object in each of them
 But this even further increases overhead, especially at the server side


Application Layer
2-34

Application Layer
2-35
Persistent HTTP
 Only one RTT response time for each referenced object

 Less SW- and network-overhead

What happens if the client “forgets” an open connection?
KeepAlive / TimeOut

By default, HTTP is persistent
Application Layer
2-35

Application Layer
2-36

B4 next slide, ask: How to further improve HTTP’s perf’? 

Persistent HTTP:
server leaves connection open after sending response
subsequent HTTP messages between same client/server sent over open connection


35
Persistent HTTP with pipelining – limitations & problems

Front-of-queue blocking

Broken servers 

Middleboxes

Transparent proxies

 The option to enable pipelining has been removed



Application Layer
2-36
Pic. taken from informationweek

Application Layer
2-37

In-class demonstration – student “in-the-fly” come to a server.
Server is slow – generating a queue. Requires HW. Front-of-Q blocking for another, smaller, client.
R, middleboxes, proxies on the way – creates ooo.
“Broken server”: a server which (un) intentionally ignores pipeline (by meaning / error). See:
 https://www.chromium.org/developers/design-documents/network-stack/http-pipelining

36
HTTP/2 improvements

Server push 

Multiplexing

Headers compression




Application Layer
2-37

Application Layer
2-38


37
Application Layer
2-38
Chapter 2.0: outline
Motivation
Basic concepts
Requirements from the transport level
Web
Stateless
(non)-persistent
HTTP Basic syntax
Cookies
Scalability


Application Layer
2-39


38
Application Layer
2-39
HTTP request message
two types of HTTP messages: request, response
HTTP request message:
ASCII (human-readable format)
request line
(GET, PUT, …)


header
 lines

indicates
end of header
GET /index.html HTTP/1.1\r\n
Host: www-net.cs.umass.edu\r\n
User-Agent: Firefox/3.6.10\r\n
Accept: text/html,application/xhtml+xml\r\n
Accept-Language: en-us,en;q=0.5\r\n
Accept-Encoding: gzip,deflate\r\n
Accept-Charset: ISO-8859-1,utf-8;q=0.7\r\n
Keep-Alive: 115\r\n
Connection: keep-alive\r\n
\r\n

carriage return character
line-feed character


Application Layer
2-40


39
Application Layer
2-40
HTTP request message format
request
line
header
lines



body







method
sp
sp
cr
lf
version
URL





cr
lf
value
header field name





cr
lf
value
header field name


~
~


~
~


cr
lf

entity body

~
~

~
~

Application Layer
2-41


40
Application Layer
2-41
Uploading form input
POST method:
web page often includes a form input
input is uploaded to server in entity body
URL method:
uses GET method
input is uploaded in URL field of request line:

www.somesite.com/animalsearch?monkeys&banana

Application Layer
2-42


41
Application Layer
2-42
HTTP methods
GET

POST
Used for web search, filling a web form etc

HEAD
Asking only for file’s meta-data
Eg, “last-modified”
Used for maintenance and debugging
PUT
uploads file in entity body to path specified in URL field

DELETE
deletes file specified in the URL field

Application Layer
2-43

HEAD meta-info – eg. when was the file of interest lastly modified. 
Put – similar to post but is used for a new URL.
POST- works for existing url.

POST:
Used to modify and update a resource
POST /questions/<existing_question> HTTP/1.1 Host: wahteverblahblah.com Note that the following is an error:
POST /questions/<new_question> HTTP/1.1 Host: wahteverblahblah.com If the URL is not yet created, you should not be using POST to create it while specifying the name. This should result in a 'resource not found' error because <new_question> does not exist yet. You should PUT the <new_question> resource on the server first.
You could though do something like this to create a resources using POST:
POST /questions HTTP/1.1 Host: wahteverblahblah.com Note that in this case the resource name is not specified, the new objects URL path would be returned to you.
PUT:
Used to create a resource, or overwrite it. While you specify the resources new URL.
For a new resource:
PUT /questions/<new_question> HTTP/1.1 Host: wahteverblahblah.com To overwrite an existing resource:
PUT /questions/<existing_question> HTTP/1.1 Host: wahteverblahblah.com
42
Application Layer
2-43
HTTP response message
status line


header
 lines

data, e.g., 
requested
HTML file
HTTP/1.1 200 OK\r\n
Date: Sun, 26 Sep 2010 20:09:20 GMT\r\n
Server: Apache/2.0.52 (CentOS)\r\n
Last-Modified: Tue, 30 Oct 2007 17:00:02 GMT\r\n
ETag: "17dc6-a5c-bf716880"\r\n
Accept-Ranges: bytes\r\n
Content-Length: 2652\r\n
Keep-Alive: timeout=10, max=100\r\n
Connection: Keep-Alive\r\n
Content-Type: text/html; charset=ISO-8859-1\r\n
\r\n
data data data data data ... 

Entity Tag:
Alternative
to “last-mod”

Application Layer
2-44

ETag: using “last-mod.” incurs issues such as: 
 * sync’ between server, $.
 * aging (age is either now-date_value, or age_value, calculated by $s on the path from the server.
 * Storing age value.
ETag is a hash for the “version”, used as an alternative for checking whether an object is stale. See:
https://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html
43
Application Layer
2-44
HTTP response status codes examples
200 OK
request succeeded, requested object later in this msg
301 Moved Permanently
requested object moved, new location specified later in this msg (Location:)
400 Bad Request
request msg not understood by server
404 Not Found
requested document not found on this server
505 HTTP Version Not Supported

Application Layer
2-45


44
Application Layer
2-45
HTTP response status codes
1xx Informational 
2xx Success
3xx Redirection
4xx Client error
Eg bad request, do not found, too many requests sent
5xx Server error
Eg HTTP version not supported


Application Layer
2-46


45
Application Layer
2-46
Chapter 2.0: outline
Motivation
Basic concepts
Requirements from the transport level
Web & HTTP
Stateless
(non)-persistent
HTTP Basic syntax
Cookies
Scalability

Application Layer
2-47


46
Application Layer
2-47
Cookies 
Used for:
User session state
Recommendations
Authorization
Shopping carts
How to keep “state”?
Maintain state at protocol endpoints over multiple transactions
Cookies: http messages carry state

Application Layer
2-48


47
Application Layer
2-48
Cookies’ components
1) cookie header line of HTTP response

2) cookie header line in next HTTP request

3) cookie file kept on user’s host, managed by the browser

4) database at Web server
example:
Susan accesses Amazon for the first time (next slide)

Application Layer
2-49


48
Application Layer
2-49
Cookies: keeping “state” (cont.)
client
server


usual http response msg


usual http response msg
cookie file
one week later:

usual http request msg
cookie: 1678
cookie-
specific
action


access

ebay 8734

usual http request msg
Amazon server
creates ID
1678 for user


create
    entry

usual http response 
set-cookie: 1678 

ebay 8734
amazon 1678

usual http request msg
cookie: 1678
cookie-
specific
action

access

ebay 8734
amazon 1678
backend
database































Application Layer
2-50


49
Application Layer
2-50
Cookies and privacy
cookies help sites to learn a lot about you


Application Layer
2-51


50
Application Layer
2-51
Chapter 2.0: outline
Motivation
Basic concepts
Requirements from the transport level
Web & HTTP
Stateless
(non)-persistent
HTTP Basic syntax
Cookies
Scalability


Application Layer
2-52


51
52

Web Content Delivery

Application Layer
2-53
52


53

Scalability












Application Layer
2-54
53


54

Server Farms

Application Layer
2-55
54


55
Server farms & Data centers
Facebook’s data center in Iowa. picture taken from adweek

Application Layer
2-56
56

Mirrors












Application Layer
2-57
56


57

Web Proxies


















Application Layer
2-58
57


58
Web Proxies
Proxies play both roles
A server to the client
A client to the server
www.cnn.com
www.google.com
Proxy





Application Layer
2-59

Scenario:
Client #1 requests http://www.foo.com/fun.jpg
Client sends “GET fun.jpg” to the proxy
Proxy sends “GET fun.jpg” to the server
Server sends response to the proxy
Proxy stores the response, and forwards to client
Client #2 requests http://www.foo.com/fun.jpg
Client sends “GET fun.jpg” to the proxy
Proxy sends response to the client from the cache


58
59
Web Proxies benefits
 Faster response time to the clients
 Lower load on the Web server
 Reduced BW consumption
web.mit.edu
Proxy




Application Layer
2-60


59
60
Challenges of Transparent Proxies
Must ensure all packets pass by the proxy
E.g., by placing it at the access point to the Internet
or, by a DNS manipulation

Incurs overhead 
Intercept the packets as they fly by
Reconstruct and reorder the server’s responses

May violate privacy
The user may not know the proxy lies in the path
Proxy may be keeping logs of the user’s requests

Application Layer
2-61

Intercept – actually done by DNS giving an adr. of the proxy / CDN, instead of the server.
60
61
Other Functions of Web Proxies
Anonymization
Server sees requests coming from the proxy address
… rather than the individual user IP addresses

Transcoding
Converting data from one form to another
E.g., reducing the size of images for cell-phones

Filtering
Blocking access to sites, based on URL or content


Application Layer
2-62
Cache coherency
The problem: $ should verify that it sends the client up-to-date data
First solution:
	conditional GET 
HTTP request: 	
  If-modified-since: <date>
Server’s response:
  HTTP/1.0 304 Not Modified

HTTP request msg
If-modified-since: <date>


HTTP response
HTTP/1.0 
304 Not Modified
object 
not 
modified
before
<date>


HTTP request msg
If-modified-since: <date>

HTTP response
HTTP/1.0 200 OK
<data>
object 
modified
after 
<date>
client
server






























Application Layer
2-63

ראשון
62
Conditional Get: exercise
A user requests a file from a web server
The file is sent by a single large
Plot a timing diagram for each of the following cases
There’s no proxy server
There’s a proxy server, using Cond. Get, and having the up-to-date file
Now, the file is stale. What’s the change in the diagram? 


Application Layer
2-64

For answering this exercise, consider HW3 (2019), qstn 8.
63
Conditional Get: exercise
For each of the following parameters, write whether increasing it increases / decreases the efficiency of using Cond. Get.
Files size
Header size
User  web server distance 
Proxy server  web server link rate
Web server response time
Proxy processing time
Note: when handling larger files, things are different
Conclusion:  For small files, this mechanism may even decrease performances!
Partial solution: TTL
Dilemma: which $ to access when there’re multiple $s?


Application Layer
2-65


64
1
Initialization: Array of       zero bits.

Insertion: Each of the     elements is hashed     times, the corresponding bits are set.
Query: Hashing the element, checking that all    bits are set.





False positive possible
No false negatives
At least when discarding stale updates


Bloom Filters
0
0
0
0
0
0
0
0
0
0
0
0
1
y
1
1
0
0
0
0
0
0
0
0
0
0
0
0
1
1
z
x
1
1
1
1
1
1
1
1
1
x
1
1
1
w
1
1
1


Application Layer
2-66
65
65


Spell checking 
Cache/Memory
Packet classification
Intrusion detection
Accounting
DNA Classification

Practical examples
Google Chrome
Google's database system BigTable
Facebook's Cassandra
Mellanox’s Infiniband Switch System

Bloom Filters applications

Application Layer
2-67
66
66


Bloom Filters applications: DPI

Deep Packet Inspection

V

V

Suspected
V

Application Layer
2-68

Another example is a common DPI practice, in which each arriving packet is scanned using a Bloom filter. If the packet is not suspected, everything is just great. However, Bloom filter has false positives, meaning that a good packet may be wrongly marked as being malicious. 
In this case, the suspicious packet has to go through a thorough analysis.
The practical result of this common scenario is that the processing time of at least some of the packets is not known immediately upon arrival.
67
Network caching: additional issues
Cache insertion policy?

Cache eviction policy?




Application Layer
2-69

Insertion policy: 
  - push (by a central ctrlr) / pull. 
  - Upon first request / only after multiple requests




Eviction policy:
  - LRU, LFU
68
Content Delivery Networks 
Proprietary, e.g.
Youtube (Google) 
Netflix (partially)

CDN providers:  
Akamai 
OVH 
AWS


Application Layer
2-70


69
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\הרצאות\מצגת-2.1--שכבת-היישום-(המשך)--DNS,-P2P,-FTP,-Mail\‏‏L2.1_App_Cont.pptx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
Introduction to data communications 

Lecturer: Itamar Cohen

Chapter 2: Application Layer (part1I) 

Computer Networking: A Top Down Approach 
6th edition 
Jim Kurose, Keith Ross
Addison-Wesley
March 2012
A note on the use of these ppt slides:
We’re making these slides freely available to all (faculty, students, readers). They’re in PowerPoint form so you see the animations; and can add, modify, and delete slides  (including this one) and slide content to suit your needs. They obviously represent a lot of work on our part. In return for use, we only ask the following:


If you use these slides (e.g., in a class) that you mention their source (after all, we’d like people to use our book!)
If you post any slides on a www site, that you note that they are adapted from (or perhaps identical to) our slides, and note our copyright of this material.

Thanks and enjoy!  JFK/KWR

     All material copyright 1996-2012
     J.F Kurose and K.W. Ross, All Rights Reserved
See additional references in the end of this presentation
מבוסס גם על שקפים של ד"ר בועז בן משה, פרופ' אמיר הרצברג, איציק קיטרוסר, שי אולשר, אלכס מיטנק, אליאב מנשה ופיליפ לויס

Introduction
1-2


1
Chapter 2.0 (reminder)
Motivation & Basic concepts
Requirements from the transport level
Web


Application Layer
2-3


2
Chapter 2.1: Outline
Domain Name System
Architecture
Syntax
Concluding example
P2P
FTP
E-mail


Application Layer
2-4


3
DNS: motivation
Internet hosts and routers are unequivocally identified by theirs IP address.
However, we give them easy-to-remember “names”, e.g., cnn.com 
Q: how to map 
	IP adr  name
Domain Name System:
distributed database 
    hierarchical name servers
application-layer protocol: hosts, servers communicate to resolve names (IP adr  name translation)

Application Layer
2-5


4
why not centralize DNS?
 Single point of failure
 Large traffic volume
  Doesn’t scale



Application Layer
2-6


5
DNS services
DNS services
Hostname  IP adr translation
host and mail server aliasing
alias canonical names
Eg: www.Gmail.com  www.mail.google.com
Load distribution
Replicated web servers: many IP addresses correspond to one name


Application Layer
2-7


6
Load balancing and replicating
Simple approach: different names
www1.cnn.com, www2.cnn.com, www3.cnn.com
But this requires users to select specific replicas
More elegant approach: different IP addresses
Single name (e.g., www.cnn.com), multiple addresses
E.g., 64.236.16.20, 64.236.16.52, 64.236.16.84, …
Authoritative DNS server returns many addresses
Local DNS server selects one of them, or:
Authoritative server may vary the order of addresses

Application Layer
2-8
7


DNS Query in Web Download 
User types or clicks on a URL
E.g., http://www.cnn.com/2019/leadstory.html
Browser extracts the site name
E.g., www.cnn.com
Browser queries the local DNS server to learn IP address
Browser contacts the Web server
Creates and connects socket
Opens TCP
Sends HTTP request

Application Layer
2-9
8

“Browser queries the local DNS server to learn IP address” – 
In practice, the browser / OS look first in their $. 

Does DNS uses UDP / TCP?
DNS requests are usually via UDP. However, TCP is used when DNS servers communicate and dist’ data; and sometimes also by client (e.g., for DNSSec).
DNS Query in Web Download 
User types or clicks on a URL
E.g., http://www.cnn.com/2019/leadstory.html
Browser extracts the site name
E.g., www.cnn.com
Browser calls getaddrinfo to learn IP address
Triggers resolver code to query the local DNS server
Eventually, the resolver gets a reply
Resolver returns the IP address(es) to the browser
The browser contacts the Web server
Creates and connects socket, and sends HTTP request

Application Layer
2-10
9


Multiple DNS Queries
Often a Web page has embedded objects
E.g., HTML file with embedded images
Each embedded object has its own URL
… and potentially lives on a different Web server
E.g., http://www.myimages.com/image1.jpg
Requires learning the address for www.myimages.com


Application Layer
2-11
10


Eliminating Unnecessary DNS Queries
Using a local (on-machine) cache
Caching a recently-used hostnames
Or the (recently-used) webpage itself
Local DNS server caches recent DNS requests


Application Layer
2-12
11


Root DNS Servers
com DNS servers
org DNS servers
edu DNS servers



poly.edu
DNS servers
umass.edu
DNS servers


yahoo.com
DNS servers
amazon.com
DNS servers


pbs.org
DNS servers

DNS database
client wants IP for www.amazon.com ; 1st approx:
client queries root server to find com DNS server
client queries .com DNS server to get amazon.com DNS server
client queries amazon.com DNS server to get  IP address for www.amazon.com
…
…

Application Layer
2-13

Use here the example illustrated in the book
12
Distributed Hierarchical Database

com

edu




org


il

uk




fr


arpa

unnamed root


















bar
west
east
foo
my













ac
cam
usr
in-
addr
12
34
56
generic domains
country domains
my.east.bar.edu
usr.cam.ac.uk
12.34.56.0/24

Application Layer
2-14
13


DNS: Root name servers
Set of 13 fixed IP addresses, most with multiple locations
Use anycast to reach closest server 
“named” ‘A’ to ‘M’
See: http://www.root-servers.org/


Application Layer
2-15

Specifying a single IP adr, but actually may get answer from any of the mirror
14
TLD, authoritative servers
Top-Level Domain (TLD) servers:
responsible for com, org, net, edu etc, and all top-level country domains, e.g.: uk, fr, ca, jp

Authoritative DNS servers: 
organization’s own DNS server(s), providing authoritative hostname to IP mappings for organization’s named hosts 
can be maintained by organization or service provider


Application Layer
2-16


15
Local (default) DNS name server
does not strictly belong to hierarchy
each ISP (residential, company, university) has one
Queries are sent to the local DNS
Acts as a proxy & local cache
Whose translations may be stale

Application Layer
2-17


16
requesting host
cis.poly.edu
gaia.cs.umass.edu
root DNS server







local DNS server
dns.poly.edu
1
2
3
4
5
6
authoritative DNS server
dns.cs.umass.edu
7
8


TLD DNS server
DNS name resolution example (alg’ PUPTIZ)
host at cis.poly.edu wants IP address for gaia.cs.umass.edu
iterated query:
“I don’t know this name. Please ask this server”



















































































































Application Layer
2-18

Exemplify on board using next (hidden) slide’s data
17

Application Layer
2-19


18
4
5
6



3
recursive query:
(“the go-to-SHIN GIMEL Alg”)
puts burden of name resolution on contacted name server
heavy load at upper levels of hierarchy?
requesting host
cis.poly.edu
gaia.cs.umass.edu
root DNS server





local DNS server
dns.poly.edu
1
2
7
authoritative DNS server
dns.cs.umass.edu
8

DNS name 
resolution example
TLD DNS 
server



















































































































Application Layer
2-20


19
DNS: caching, updating records
Name server caches previous mappings
Cached entries timeout (disappear)
Time To Live
TLD servers typically cached in local name servers
thus root name servers not often visited
Update/notify mechanisms for updating stale cache entries [RFC 2136]

Application Layer
2-21


20
Chapter 2.1: Outline
Domain Name System
Architecture
Syntax
Concluding example
P2P
FTP
E-mail


Application Layer
2-22


21
DNS Resource Records
RRs: The TACHLES in DNS reply
RR format: (name, value, type, ttl)

type=A
Name: hostname
Value: IP address
type=NS
Name: domain
Value: hostname of authoritative name server for this domain
Usually accompanied by an additional, type-A, RR






type=CNAME
Value: canonical name
Name: alias for this canonical (the real) name
type=MX
Same as type CNAME, but here name indicates a mailserver

DNS Web tool

Application Layer
2-23

Examples:
(gamad.com, 64.32.16.8, A, 3600s)
(gamad.com, dns1.gamad.com, NS, 3600). Will be accompanied by the RR: (dns1.gamad.com 64.32.16.1, A, 3600s)
CNAME: (ibm.com, servereast.backup2.ibm.com, CNAME, 3600s). Will be accompanied by the RR: (servereast.backup2.ibm.com, 4.3.2.1, A, 3600s)
Why additional type for mail servers? Because the same aliased name may be used for both the mail server and other servers. Eg, walla, google.

You may Try DNSing by Network-Tools: http://network-tools.com/nslook/


22
DNS protocol, messages
query and reply messages, both with same message format
msg header
identification: 16 bit # for query, reply to query uses same #
flags:
query or reply
recursion desired 
recursion available
reply is authoritative









identification
flags
# questions
questions (variable # of questions)
# additional RRs
# authority RRs
# answer RRs
answers (variable # of RRs)
authority (variable # of RRs)
additional info (variable # of RRs)


2 bytes


2 bytes



Application Layer
2-24


23
name, type fields
 for a query
RRs in response
to query
records for
authoritative servers
additional “helpful”
info that may be used









identification
flags
# questions
questions (variable # of questions)
# additional RRs
# authority RRs
# answer RRs
answers (variable # of RRs)
authority (variable # of RRs)
additional info (variable # of RRs)




DNS protocol, messages
2 bytes


2 bytes



Application Layer
2-25


24
DNS Messages
DNS protocol:  send request, receive reply
Single format for requests & replies
Header	Questions	Answers	Authority	Other
ID (16 bits)	Flags
Number of questions	Number of answers
Number of authority	Number of other

Name
Type of Record 

Name
Type of RR
TTL in seconds
Value



RR (Resource Record)


Application Layer
2-26


DNS Queries: Recursive, Iterative





A: www.bob.com ?
Client
Local
Server
Root
Server
ns.com 
132.3.3.4
(auth server for TLD .com)
ns1.bob.com
156.4.5.6 
(auth server
 for bob.com)

A: www.bob.com ?

NS: .com ns.com
A: ns.com 132.3.3.4


NS: bob.com ns1.bob.com A: ns1.bob.com 156.4.5.6

A: www.bob.com ?

www.bob.com A 156.6.6.6


TCP open connection to 156.6.6.6 (www.bob.com)
A: www.bob.com ?
HTTP request to 156.6.6.6 (www.bob.com)
www.bob.com A 156.6.6.6

Application Layer
2-27
Chapter 2.1: Outline
Domain Name System
Architecture
Syntax
Concluding example
P2P
FTP
E-mail


Application Layer
2-28


27
Exmaple: Inserting records into DNS
Example: we’d like to register the domain startup.com 
We should purchase the domain from a DNS registrar 
Registrar – checks that the domain is available and registers it in DNS. Eg mydomain
The Internet Corporation for Assigned Name and Numbers (ICANN) allocates domain names
We should have our own primary and secondary authoritative nameservers 
dns1.startup.com in 128.1.1.1, and
dns2.startup.com in 128.1.1.2
We should have a web server and a mail server
www1.middle-east.startup.com in 128.1.1.3
mail.startup.com in 128.1.1.4



Application Layer
2-29


28
Inserting records into DNS (Cont’)
We should enter to our authoritative nameservers a record for our web server
(startup.com, www1. middle-east.startup.com , NS, 7200s)
(www1.middle-east.startup.com, 128.1.1.3, A, 7200s)
… and for our mail server
(startup.com, mail.startup.com, MX, 7200s)
(mail.startup.com, 128.1.1.3, A, 7200s)

Application Layer
2-30


29
Inserting records into DNS (Cont’)
Our registrars adds to the .com TLD servers the records
(startup.com, dns1.startup.com, NS, 7200s)
(startup.com, dns2.startup.com, NS, 7200s)
(dns1.startup.com, 128.1.1.1, A, 7200s)
(dns2.startup.com, 128.1.1.2, A, 7200s)
This is done by an UPDATE dns command


Application Layer
2-31


30
Attacking DNS: Ddos attacks
DDoS attacks
Bombard root servers with traffic
Mitigations
Local DNS uses cache
Root servers filters traffic
 Not successful to date
Bombard TLD servers
Potentially more dangerous

Another DDoS attack
Send queries with the fake source bgu.ac.il, so that BGU’s server will get plenty of (large) replies



Application Layer
2-32

http://www.youtube.com/watch?v=2ZUxoi7YNgs&feature=related
31
DNS poisoning

Application Layer
2-33

http://www.youtube.com/watch?v=2ZUxoi7YNgs&feature=related
32
Attacking DNS: poisoning
Attacker  target DNS server: A: attacker.com ?
Target DNS server to someone: A: attacker.com ?
Attacker  target DNS server:
NS: facebook.com ns1.attacker.com
A: ns1.attacker.com 66.6.6.6

Mitigations (at the DNS server)
Verify that the reply agrees with the query
A smart attacker may force the DNS to really query for facebook.com
Verify that the source port, Query ID agree with that of the query
Windows uses 2500 DNS source ports for DNS; 
There’re ____ possible QID
User will notice that attacker’s site doesn’t use https
DNSSec: DNS reply must be signed




Application Layer
2-34

http://www.youtube.com/watch?v=2ZUxoi7YNgs&feature=related
33
Chapter 2.1: Outline
Domain Name System
P2P
FTP
E-mail


Application Layer
2-35


34








































































































































































































































































































P2P: motivation
highly-popular apps, eg
file distribution (BitTorrent)
VoIP (Skype) 
Streaming







Application Layer
2-36

Streaming – e.g. Xunlei Kankan

35








































































































































































































































































































 P2P: motivation
Reminder: in P2P - 
no always-on server
arbitrary end systems directly communicate
peers are intermittently connected and change IP addresses




Application Layer
2-37


36
P2P: motivation
Question: how much time to distribute file (size F) from one server to N  peers?
Neglecting propagation and processing delay


us


uN
dN
server
network (with abundant
 bandwidth)
file, size F
us: server upload capacity
ui: peer i upload capacity
di: peer i download capacity

u2


d2
u1


d1


di
ui




































Application Layer
2-38


37
Motivation example for P2P: 
File distribution time using client-server scheme
server transmission: must sequentially send (upload) N file copies: NF/us
client: each client must download file copy
dmin = min client download rate


O(N)
time to  distribute F 
to N clients using 
client-server approach 

 Dc-s > max{NF/us,,F/dmin} 




us


network







di
ui
F
































What scheduling should the server use for obtaining equality?


Application Layer
2-39

Why not sum of d/l times?
- Because the server may u/l fast the slowest-downloading client first. The netw. Equipment on the way will have to store large chunks of the file on-the-fly. While the slow client is still downloading, the server already uploads for further clients, who start downloading as well.
38
Motivation example for P2P: 
File distribution time using P2P scheme
server transmission: must upload at least one copy: F/us 
client: each client must download a copy
min client download time: F/dmin 

time to  distribute F 
to N clients using 
P2P approach 



us


network







di
ui
F
 DP2P > max{F/us,,F/dmin,,NF/(us + Sui)} 

clients: as aggregate must download NF bits
max upload rate (limting max download rate) is us + Sui

… but so does this, as each peer brings its upload capacity

increases linearly in N …

































Application Layer
2-40


39
Client-server vs. P2P: example
client upload rate = u,  F/u = 1 hour,  us = 10u,  dmin ≥ us

Application Layer
2-41


40
P2P: motivation
 Faster download time
 Less HW cost (eg, link’s BW) 
 Better resilience to failures
Transmission is not depended in a single source
 Less traffic fluctuations in the network


Application Layer
2-42


41
BitTorrent: basic terms 
A user sharing a file: seed
File is divided into chunks
Peers usually receive the chunks ooo
Each peer which obtains a chunk, shares it, thus relieving load from the seed
The set of users sharing one file is called a swarm (aka torrent)
Once an additional peer has the entire file, it may
(selfishly) leave, OR
(altruistically) remain, becoming a new seed

Application Layer
2-43


42
BitTorrent: example sceanrio 
tracker: tracks peers 
participating in torrent
All the users here form a Torrent (aka swarm)











Alice arrives,


obtains a list
of peers from tracker,



and begins communicating  with them over TCP






































Application Layer
2-44


43
Alice
Periodically requests and receives from each neighbor a list of the chunks it has
Then, tries to obtain first the rarest chunks 
Why?
BT: rarest first 




















































Application Layer
2-45


44
BT: Tit-and-tat (WYGIWYG)
Alice periodically (e.g., every 10 secs) calculates the rates at which she receives bits from peers
Alice reciprocate her 4 fastest sender peers by sending them chunks
These preferred senders/receivers are said to be unchoked
Every 30 secs, Alice randomly selects additional peer to be optimistically unchoked
Other peers are choked by Alice (do not receive chunks from her)





















































Application Layer
2-46

Tit-and-tat – מידה כנגד מידה
45
BitTorrent: tit-for-tat









(1) Alice “optimistically unchokes” Bob
(2) Alice becomes one of Bob’s top-four providers; Bob reciprocates
(3) Bob becomes one of Alice’s top-four providers
higher upload rate: find better trading partners, get file faster !












A nice applet in Wiki

Application Layer
2-47


46
BT security
The first seed creates a small Torrent Descriptor, which contains a cryptographic hash of the file to be shared
Each chunk is protected by the hash
Any modification done on the original chunk can be detected



Application Layer
2-48
Chapter 2.1: Outline
Domain Name System
P2P
FTP
E-mail


Application Layer
2-49


48


File Transfer Protocol
file transfer

FTP
server


FTP
user
interface
FTP
client
local file
system


remote file
system

user 
at host



transfer file to/from remote host
client/server model
client: side that initiates transfer (either to/from remote)
server: remote host































Application Layer
2-50


49
FTP: Out Of Band control

The client initiates a TCP control connection, which remains open throughout the session
Upon receiving a file transfer command, server opens a TCP data connection (for file) to client
New data connection for every file transfer
FTP server maintains “state”: current directory, earlier authentication
 Significantly constraining # of open TCP connection
FTP
client
FTP
server


TCP control connection,
server port 21
TCP data connection,
server port 20





























FTP / HTTP
* [Out-of | In] Band
* State [full | less]

Application Layer
2-51


50
FTP commands, responses
sample commands:
sent as ASCII text over control channel
USER username
PASS password
LIST return list of file in current directory
RETR filename retrieves (gets) file
STOR filename stores (puts) file onto remote host
sample return codes
status code and phrase (as in HTTP)
331 Username OK, password required
125 data connection already open; transfer starting
425 Can’t open data connection
452 Error writing file

Application Layer
2-52


51
Chapter 2.1: Outline
Domain Name System
P2P
FTP
E-mail


Application Layer
2-53


52
Email
Three major components: 
User agents 
Mail servers 
Simple Mail Transfer Protocol
User Agent
aka “mail reader”
e.g., Outlook, iPhone, Thunderbird, mail client
outgoing, incoming messages stored on server

user mailbox









outgoing 
message queue






















































































mail
server














mail
server














mail
server
















SMTP

SMTP

SMTP


user
agent


user
agent


user
agent


user
agent


user
agent


user
agent

Application Layer
2-54


53
Email: mail servers
mail servers:
mailbox contains incoming messages for user
message queue of outgoing (to be sent) mail messages
Each server is sometimes a SMTP client and sometimes a SMTP server
SMTP client: when sending a mail 
SMTP server: when receiving a mail






















































































mail
server














mail
server














mail
server
















SMTP

SMTP

SMTP


user
agent


user
agent


user
agent


user
agent


user
agent


user
agent

Application Layer
2-55


54
 Simple Message Transfer Protocol
uses TCP 
three phases of transfer
handshaking (greeting)
transfer of messages
closure
command/response interaction 
commands: ASCII text
response: status code and phrase


Application Layer
2-56


55


user
agent
























































Scenario: Alice sends a message to Bob
1) Alice uses UA to compose message “to” bob@someschool.edu
2) Alice’s UA sends message to her mail server; message placed in message queue
3) client side of SMTP opens TCP connection with Bob’s mail server
4) SMTP client sends Alice’s message over the TCP connection
5) Bob’s mail server places the message in Bob’s mailbox
6) Bob invokes his user agent to read message


mail
server














mail
server
















1
2
3
4
5
6
Alice’s mail server
Bob’s mail server


user
agent

Application Layer
2-57

STEP 6) Bob invokes his user agent to read message –commonly does NOT use SMTP (but POP, IMAP, HTTP etc).

56
SMTP Vs. HTTP
Push / Pull
Message body format: only ASCII  / other formats
Always persistent / not always persistent
Multiple objects in one response msg / one object per msg

both have ASCII command/response interaction, status codes

Application Layer
2-58


57
























































Mail access protocols
In the past, users used to log into a mail server
This is not the situation today  A push / pull problem
Solution: mail access protocol, for retrieving the mails from the server
POP: Post Office Protocol 
IMAP: Internet Mail Access Protocol: more features, including manipulation of stored messages on server
Bob doesn’t have to be connected to the internet (but only to its local mail server)

sender’s mail 
server














SMTP

(push)

SMTP

(push)
mail access
protocol
receiver’s mail 
server

















(e.g., POP, 
         IMAP)
(pull)


user
agent


user
agent

Application Layer
2-59

POP3: very simple. The mail data and operations are done on the local PC. This doesn’t support mobility. 
Thus IMAP is needed.

58
























































Web-based email
Eg Gmail, Yahoo!, Walla
Both Alice and Bob have to be connected to the internet
sender’s mail 
server














HTTP

(push /
Pull)

SMTP
HTTP
receiver’s mail 
server

















(e.g., POP, 
         IMAP)
(push /
Pull)



user
agent


user
agent

Application Layer
2-60

POP3: very simple. The mail data and operations are done on the local PC. This doesn’t support mobility. 
Thus IMAP is needed.

59
References
EE384x, Packet Switch Architectures – lectures slides by Nick McKeown & Balaji Prabakhar, spring 2012, Stanford University




2: Application Layer
61


60
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\הרצאות\מצגת-3.0--שכבת-התעבורה---UDP-ויסודות-העברת-נתונים-אמינה\L3.0_Transport_Intro_n_UDP.pptx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
1
Introduction to data communications 

Lecturer: Itamar Cohen

Chapter 3: The transport Layer: UDP
Computer Networking: A Top Down Approach 
6th edition 
Jim Kurose, Keith Ross
Addison-Wesley
March 2012
A note on the use of these ppt slides:
We’re making these slides freely available to all (faculty, students, readers). They’re in PowerPoint form so you see the animations; and can add, modify, and delete slides  (including this one) and slide content to suit your needs. They obviously represent a lot of work on our part. In return for use, we only ask the following:

If you use these slides (e.g., in a class) that you mention their source (after all, we’d like people to use our book!)
If you post any slides on a www site, that you note that they are adapted from (or perhaps identical to) our slides, and note our copyright of this material.

Thanks and enjoy!  JFK/KWR

     All material copyright 1996-2012
     J.F Kurose and K.W. Ross, All Rights Reserved 

מבוסס גם על שקפים של ד"ר בועז בן משה, פרופ' אמיר הרצברג, איציק קיטרוסר, שי אולשר, אלכס מיטנק, אליאב מנשה, ד"ר יורם חדד ופיליפ לויס





2


1
Chapter 3: outline
Reminder: the transport layer
UDP
Principles of reliable data transfer

3


2
Reminder: where are we ?

4
[En|de]capsulation

5
3-5













































































































































































































































































































Transport services and protocols
provide logical communication between app processes running on different hosts
transport protocols run in end systems 
send side: breaks app messages into segments, passes to  network layer
rcv side: reassembles segments into messages, passes to app layer
Common transport protocols
TCP, UDP, SCTP



application
transport
network
data link
physical





logical end-end transport





application
transport
network
data link
physical





6


5
3-6
Transport vs. network layer
network layer: logical communication between hosts
transport layer: logical communication between processes 
relies on, enhances, network layer services
12 kids in Ann’s house sending letters to 12 kids in Bill’s house:
hosts = houses
processes = kids
app messages = letters in envelopes
transport protocol = Ann and Bill who demux to in-house siblings
network-layer protocol = postal service


household analogy:
Data (de)multiplexing

7
Internet transport-layer protocols
reliable, in-order delivery (TCP)
congestion control 
flow control
connection setup
unreliable, unordered delivery: UDP
no-frills extension of “best-effort” IP
services not available: 
delay guarantees
bandwidth guarantees



















































































































































































































































































application
transport
network
data link
physical






network
data link
physical





network
data link
physical





network
data link
physical





network
data link
physical





network
data link
physical





network
data link
physical





application
transport
network
data link
physical




logical end-end transport



8

Chapter 3: outline
Reminder: the transport layer
User Datagram Protocol
Principles of reliable data transfer

9


8
UDP: User Datagram Protocol [RFC 768]
connectionless:
no handshaking between sender, receiver
each UDP segment handled independently
often used for streaming multimedia apps
loss tolerant
rate sensitive
Used also by
Domain Name System
Application layer may add reliability, e.g. by asking to re-send, or by error recovery

Why is there a UDP?
no overhead for connection establishment and state
small header
no congestion control: UDP can blast away as fast as desired



10
UDP properties and purpose

UDP enables a connectionless communication between host
No congestion control, no acks / feedbacks
If the sender doesn’t receive a reply “on time”, it may either try again, or report the upper (application) layer it didn’t receive a reply
Example: host querying a Domain Name Server
If no reply is received, UDP may either querying another server, or report the application that it can’t get a reply
Another example: Real-Time applications
Can’t afford long delays due to congestion control
Can tolerate some data loss
Additional functionality, if needed, can be implemented directly by the application layer

Why UDPing and not FTPing?

Smaller delay
Smaller HW and SW overhead
TCP uses State variables, sending / acks numbers, receive buffers.
TCP uses longer header
No retransmitting after data is not relevant anymore
Eg real time applications

UDP is used also by Simple Network Management Protocol


UDP segment format

Total length: in bytes, including header
Checksum is done over the all 16-b words in the segment
Why to checksum?
Lower layers not always perform error correction
Errors may happen also within the routers


11

Chapter 3: outline
Reminder: the transport layer
UDP
Principles of reliable data transfer
Stop & Wait
Go-Back-N
Selective Repeat

12


11
Automatic Repeat reQuest protocols: Stop & Wait

first packet bit transmitted, t = 0


sender
receiver







RTT 


last packet bit transmitted, t = L / R

first packet bit arrives

last packet bit arrives, send ACK
ACK arrives, send next 
packet, t = RTT + L / R





Utility of link: percentage of time, in which the link is busy (“utilized”). Eg: L/R = 8us, RTT=30ms 
See scenarios in the comments

13

S & W: 
* Corrupted pkt  Use Ack, Nack.
* Corrupted Acks  resend the pkt anyway  problem: 11,00,11 (corrupted Ack for 00) will be understood as 11,00,00  (duplicated pkts).
Seq. #. As we have only 1 pkt “on the fly”, 1 bit is enough. 
No need for Nacks. Send merely Ack for the last pkt which arrived correctly.
Lost pkts / Acks  TimeOut. Too long: low perf’. Too short: many redundant pkt sends and duplicate pkts. Sender should ignore duplicate Acks.
Use Fig. 3.16.

12
Chapter 3: outline
Reminder: the transport layer
UDP
Principles of reliable data transfer
Stop & Wait
Go-Back-N
Selective Repeat

14


13
3-14
Pipelining: increased utilization

first packet bit transmitted, t = 0


sender
receiver





RTT 


last bit transmitted, t = L / R

first packet bit arrives

last packet bit arrives, send ACK
ACK arrives, send next 
packet, t = RTT + L / R























last bit of 2nd packet arrives, send ACK


last bit of 3rd packet arrives, send ACK
n-packet pipelining increases
 utilization by a factor of n!
Utility of link: percentage of time, in which the link is busy (“utilized”). Eg: L/R = 8us, RTT=30ms 

15


14
3-15
Pipelined protocols
pipelining: sender allows multiple, “in-flight”, yet-to-be-acknowledged pkts
range of sequence numbers must be increased
buffering at sender and/or receiver
two generic forms of pipelined protocols: go-Back-N, selective repeat






























































16
3-16
Go-Back-N: sender
k-bit seq # in pkt header
“window” of up to N consecutive unack’ed pkts


ACK(n): ACKs all pkts up to, including seq # n - “cumulative ACK”
Timer(s)* for sent pkts
If an Ack arrives and there’re pkts which were sent, but not yet acked – the timer is restarted 
Upon T.O: retransmit the first non-acked pkt, and all higher seq # pkts in window


17
3-17
GBN in action
send  pkt0
send  pkt1
send  pkt2
send  pkt3
(wait)
sender
receiver

receive pkt0, send ack0
receive pkt1, send ack1
 
receive pkt3, discard, 
           (re)send ack1
rcv ack0, send pkt4
rcv ack1, send pkt5

pkt 2 timeout
send  pkt2
send  pkt3
send  pkt4
send  pkt5





X
loss











receive pkt4, discard, 
           (re)send ack1
receive pkt5, discard, 
           (re)send ack1
rcv pkt2, deliver, send ack2
rcv pkt3, deliver, send ack3
rcv pkt4, deliver, send ack4
rcv pkt5, deliver, send ack5
ignore duplicate ACK

0 1 2 3 4 5 6 7 8 
sender window (N=4)

0 1 2 3 4 5 6 7 8 

0 1 2 3 4 5 6 7 8 

0 1 2 3 4 5 6 7 8 

0 1 2 3 4 5 6 7 8 

0 1 2 3 4 5 6 7 8 

0 1 2 3 4 5 6 7 8 

0 1 2 3 4 5 6 7 8 

0 1 2 3 4 5 6 7 8 

0 1 2 3 4 5 6 7 8 






Youtube show 

Transport Layer
3-18

The timeout event shown in this diagram doesn’t obey the rules in GBN’s FSM (3.20, p.251 in Ed. 7): According to the diagram there, only the oldest pkt (pkt0 in our case) restarts a timer; pkt2 should have no timer. Furthermore, once an Ack arrives (e.g., Ack 0, Ack1), the timer is restarted. These are also TCP’s re-xmt timer’s rules – see RFC 6298:  https://tools.ietf.org/html/rfc6298
17
3-18
Go-Back-N pros. and cons.
 
Easy to implement
Simple code, few variables, small receiver buffer
 
Many unnecessary retransmission
Waste network’s resources
Decrease performances
Solution?
Selective Repeat

19
Chapter 3: outline
Reminder: the transport layer
UDP
Principles of reliable data transfer
Stop & Wait
Go-Back-N. Watch nice movie
Selective Repeat

20

Examples 
1. Window = 1 Mb, RTT = 10 ms.  TP=?  
2. BW = 10 Gbps, RTT = 100 ms.    W=10 Mb.    
U=?   
What’s W for getting U=100%?  How much data will be in flight in this case?

Answers
1. TP = W/RTT = 100 Mbps
2. A. TP = W/RTT = 100 Mbps.   U=TP/BW = 1%
B. W’ = BW*RTT = 1 Gb. This is also the amount of data in flight; and of the buffers of routers on the way and / or the receiver’s reordering buffer!
This is called large BDP (Bandwidth Delay Product).
19
3-20
Selective Repeat
sender can have up to N unack’ed packets in pipeline

Rcvr individually acks each packet

Rcvr maintains a reordering buffer

Sender maintains timer for each unacked packet
when timer expires, retransmit only that packet

21


20
3-21
Selective Repeat



Transport Layer
3-22
3-22
Selective repeat
data from above:
if next available seq # in window, send pkt
timeout(n):
resend pkt n, restart timer
ACK(n) in [sendbase,sendbase+N-1]:
mark pkt n as received
if n is smallest unACKed pkt, advance window base to next unACKed seq # 



sender
pkt n in [rcvbase, rcvbase+N-1]
send ACK(n)
out-of-order: buffer
in-order: deliver all buffered, in-order pkts.  advance window to next not-yet-received pkt
pkt n in [rcvbase-N,rcvbase-1]
ACK(n)
otherwise: 
ignore 



receiver

23
3-23
Selective repeat in action
send  pkt0
send  pkt1
send  pkt2
send  pkt3
(wait)
sender
receiver

receive pkt0, send ack0
receive pkt1, send ack1
 
receive pkt3, buffer, 
           send ack3
rcv ack0, send pkt4
rcv ack1, send pkt5

pkt 2 timeout
send  pkt2





X
loss








receive pkt4, buffer, 
           send ack4
receive pkt5, buffer, 
           send ack5
rcv pkt2; deliver pkt2,
pkt3, pkt4, pkt5; send ack2
record ack3 arrived

0 1 2 3 4 5 6 7 8 
sender window (N=4)


0 1 2 3 4 5 6 7 8 

0 1 2 3 4 5 6 7 8 

0 1 2 3 4 5 6 7 8 

0 1 2 3 4 5 6 7 8 

0 1 2 3 4 5 6 7 8 

0 1 2 3 4 5 6 7 8 

0 1 2 3 4 5 6 7 8 

0 1 2 3 4 5 6 7 8 

0 1 2 3 4 5 6 7 8 


record ack4 arrived
record ack5 arrived

Q: what happens when ack2 arrives?

Transport Layer
3-24
3-24
Too small window: 
dilemma
example: 
seq #’s: 0, 1, 2, 3
window size=3
receiver window
(after receipt)
sender window
(after receipt)



0 1 2 3 0 1 2

0 1 2 3 0 1 2

0 1 2 3 0 1 2



pkt0
pkt1
pkt2

0 1 2 3 0 1 2

pkt0
timeout
retransmit pkt0

0 1 2 3 0 1 2

0 1 2 3 0 1 2

0 1 2 3 0 1 2



X
X
X
will accept packet
with seq number 0

BANG!

0 1 2 3 0 1 2

0 1 2 3 0 1 2

0 1 2 3 0 1 2



pkt0
pkt1
pkt2

0 1 2 3 0 1 2

pkt0

0 1 2 3 0 1 2

0 1 2 3 0 1 2

0 1 2 3 0 1 2


X
will accept packet
with seq number 0



0 1 2 3 0 1 2
pkt3
(a) no problem
receiver can’t see sender side.
receiver behavior identical in both cases!
something’s (very) wrong!
receiver sees no difference in two scenarios!
duplicate data accepted as new in (b)

Q: what relationship between seq # size and window size to avoid problem in (b)?

25
Transport Layer
3-25

26
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\הרצאות\מצגת-3.1--שכבת-התעבורה---TCP\L3.1_TCP.pptx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
3-1
Introduction to data communications 

Lecturer: Itamar Cohen

Chapter 3 (Cont’): TCP
Computer Networking: A Top Down Approach 
6th edition 
Jim Kurose, Keith Ross
Addison-Wesley
March 2012
A note on the use of these ppt slides:
We’re making these slides freely available to all (faculty, students, readers). They’re in PowerPoint form so you see the animations; and can add, modify, and delete slides  (including this one) and slide content to suit your needs. They obviously represent a lot of work on our part. In return for use, we only ask the following:

If you use these slides (e.g., in a class) that you mention their source (after all, we’d like people to use our book!)
If you post any slides on a www site, that you note that they are adapted from (or perhaps identical to) our slides, and note our copyright of this material.

Thanks and enjoy!  JFK/KWR

     All material copyright 1996-2012
     J.F Kurose and K.W. Ross, All Rights Reserved 

מבוסס גם על שקפים של ד"ר יורם חדאד, ד"ר בועז בן משה, פרופ' אמיר הרצברג, איציק קיטרוסר, שי אולשר, אלכס מיטנק, אליאב מנשה ופיליפ לויס





TCP 3-2
Chapter 3: outline
Motivation
TCP highly affects both user’s experience
TCP is a jack of all trades and master of none
Segments & Acks
Reliable data transfer
Flow control
Connection management
Congestion control



TCP 3-3


2
Chapter 3: outline
Motivation
Segments & Acks
Reliable data transfer
Flow control
Connection management
Congestion control



TCP 3-4


3
Byte Stream Service 
To the lower layers, TCP handles data in segments.
To the higher layers TCP handles data as a sequence of bytes and does not identify boundaries between segments

TCP 3-5


Sending and receiving buffers



TCP 3-6

TCP Header


TCP 3-7


6
TCP seq. numbers, ACKs
Sequence #:
 # of first byte in segment’s data
Acknowledgements:
seq # of next byte expected from other side
Cumulative ACK
Q: how receiver handles ooo segments
A: TCP spec doesn’t say, - up to implementation
 Usually they are accepted

3-7
TCP


source port #
dest port #
sequence number
acknowledgement number
checksum






rwnd
urg pointer


incoming segment to sender


A













































sent 
ACKed
sent, not-yet ACKed
(“in-flight”)
usable
but not 
yet sent
not 
usable
window size
 N




sender sequence number space 


source port #
dest port #
sequence number
acknowledgement number
checksum






rwnd
urg pointer


outgoing segment from sender


TCP 3-8
Seq & ACK # example
3-8


User
types
‘C’
host ACKs
receipt 
of echoed
‘C’
host ACKs
receipt of
‘C’, echoes
back ‘C’

simple telnet scenario
Host B
Host A

Seq=42, ACK=79, data = ‘C’

Seq=79, ACK=43, data = ‘C’

Seq=43, ACK=80





TCP 3-9

The seq # is incremented either according to the payload’s size. If SYN or FIN flag is set, the seq # of incremented by 1. Note that when either SYN / FIN is set, the TCP set. Contains no payload.
8
Round Trip Time estimation
How to estimate RTT?
Naïve solution: measure last RTT
Problems 
RTT highly varies over time
Measuring RTT for every segment sent is too costly
Better solution
Average the SampleRTT over a few last samples


3-9

TCP 3-10
RTT estimation: 
Exponential weighted moving average
3-10

EstimatedRTT = (1- )*EstimatedRTT + *SampleRTT
influence of past sample decreases exponentially fast
typical value:  = 0.125
RTT (milliseconds)
RTT: gaia.cs.umass.edu to fantasia.eurecom.fr
sampleRTT
EstimatedRTT




time (seconds)

TCP 3-11
RTT variations
In periods when the RTT highly varies, sender should wait a little further before retransmission
 Estimate both SampleRTT and DevRTT






Youtube lecture about RTT estimation
3-11
DevRTT = (1-)*DevRTT + *|SampleRTT-EstimatedRTT|
(typically,  = 0.25)
TimeoutInterval = EstimatedRTT + 4*DevRTT
estimated RTT
“safety margin”



TCP 3-12
Chapter 3: outline
Motivation
Segments & Acks
Reliable data transfer
Flow control
Connection management
Congestion control


3-12

TCP 3-13


12
Simplified TCP sender events:
Data rcvd from app:
Create segment 
seq # = first data byte in segment
start timer if not already running 
think of timer as for oldest unacked segment
expiration interval: TimeOutInterval 
3-13
Timeout:
retransmit segment that caused timeout
restart timer
 Ack rcvd:
if ack acknowledges previously unacked segments
update what is known to be ACKed
start timer if there are  still unacked segments

TCP 3-14
TCP sender (simplified)
3-14


wait
for 
event

NextSeqNum = InitialSeqNum
SendBase = InitialSeqNum

L
create segment, seq. #: NextSeqNum
pass segment to IP (i.e., “send”)
NextSeqNum = NextSeqNum + length(data) 
if (timer currently not running)
    start timer
                 
data received from application above

retransmit not-yet-acked segment         	with smallest seq. #
start timer
timeout

if (y > SendBase) { 
    SendBase = y 
    /* SendBase–1: last cumulatively ACKed byte */
    if (there are currently not-yet-acked segments)
         start timer
       else stop timer 
     } 
ACK received, with ACK field value y 





TCP 3-15
TCP: retransmission scenarios
3-15
lost ACK scenario



Host B
Host A

Seq=92, 8 bytes of data

ACK=100



Seq=92, 8 bytes of data
X
timeout


ACK=100




premature timeout



Host B
Host A

Seq=92, 8 bytes of data

ACK=100



Seq=92,  8
bytes of data
timeout


ACK=120






Seq=100, 20 bytes of data


ACK=120
SendBase=100
SendBase=120
SendBase=120
SendBase=92





TCP 3-16
15


TCP: retransmission scenarios
3-16
X
cumulative ACK



Host B
Host A

Seq=92, 8 bytes of data

ACK=100



Seq=120,  15 bytes of data

timeout






Seq=100, 20 bytes of data


ACK=120



TCP 3-17
16


TCP ACK generation [RFC 1122, RFC 2581]
3-17
event at receiver

arrival of in-order segment with
expected seq #. All data up to
expected seq # already ACKed

arrival of in-order segment with
expected seq #. One other 
segment has ACK pending

arrival of out-of-order segment
higher-than-expect seq. # .
Gap detected

arrival of segment that 
partially or completely fills gap


TCP receiver action

delayed ACK. Wait up to a some
limit (eg, 1ms) for next segment. 
If no next segment, send ACK

immediately send single cumulative 
ACK, ACKing both in-order segments 


immediately send duplicate ACK, 
indicating seq. # of next expected byte


immediate send ACK, provided that
segment starts at lower end of gap








TCP 3-18
TCP ACK generations rules
If sending data, must include(piggyback) an ACK giving next sequence number expected  reduce traffic
If no data to send, and received only one in-order segment, delay the ACK until another segment arrives or until period of time (e.g. 500ms) has passed prevents extra traffic
If new in order segment, and past in order segment not already ACK , send immediately ACK ( straightforward of 2)
If out of order segment received, send immediately an ACK with next expected SeqNo  leads to fast retransmission
When missing segment arrives, send an ACK  informs sender that missing segments received
If duplicate segment arrives, send immediately ACK  solve pb of lost ACK
3-18

TCP 3-19

TCP fast retransmit
time-out period often relatively long:
long delay before resending lost packet
detect lost segments via duplicate ACKs.
if segment is lost, there will likely be many duplicate ACKs.


3-19
if sender receives 3 ACKs for same data,
resend unacked segment with smallest seq #
Why?

TCP fast retransmit

TCP 3-20
TCP fast retransmit
3-20









X

fast retransmit after sender 
receipt of triple duplicate ACK
Host B
Host A
Seq=92, 8 bytes of data

ACK=100
timeout





ACK=100

ACK=100


Seq=100, 20 bytes of data

Seq=100, 20 bytes of data



TCP 3-21
Chapter 3: outline
Motivation
Segments & Acks
Reliable data transfer
Flow control
Connection management
Congestion control


3-21

TCP 3-22


21
TCP flow control
3-22



application
process

TCP socket
receiver buffers

TCP
code

IP
code















application
OS

receiver protocol stack
application may 
remove data from 
TCP socket buffers …. 

… slower than TCP 
receiver is delivering
(sender is sending)


from sender


receiver controls sender, so sender won’t overflow receiver’s buffer

flow control




TCP 3-23
TCP flow control
Receiver “advertises” its free buffer space in the rwnd field in TCP header 
Sender limits amount of unacked (“in-flight”) data to this value 
Maximal rwnd is limited also by the field’s size in the header 
16b field  Max rwnd =
Can be scaled using Header Options
3-23









buffered data

free buffer space
rwnd







RcvBuffer
TCP segment payloads
to application process
receiver-side buffering

TCP 3-24


TCP 3-25


3-25

TCP 3-26
3-26

TCP 3-27
Flow Ctrl: Receiver side
The RcvBuffer size is set via socket options 
The application may upscale it
The size of the rwnd field in TCP’s Header (16-b) also limits the maximal possible advertized value
TCP Options allow get around this limit
3-27

TCP 3-28
The silly window syndrome 
When the receiver processes the incoming data slowly, it may repeatedly advertise very small receive window to the sender.
This may make the sender sending many tiny segments
Very inefficient
Similar problem may happen when the sending process wants to send many small data chunks.


3-28

TCP 3-29
The silly window syndrome: solutions 
Sender side: Nagle’s algorithm: 
One segment may be sent even if it is small.
For the consecutive segments, however, as long as the sender didn’t receive ACK for the previous (small) segment, the sender will send a new segment only when it has at least MSS data to send.
Receiver side: David Clark’s algorithm
The receiver advertises a new positive window only when
	 window >= Min (MSS, Buffer_size/2)

3-29

TCP 3-30
Chapter 3: outline
Motivation
Segments & Acks
Reliable data transfer
Flow control
Connection management
Establishing a connection
Closing a connection
TCP timers
Congestion control



TCP 3-31


30
Establishing a connection
Before exchanging data, sender/receiver “handshake”
Agree on connection parameters
3-31



Connection state: ESTAB
Connection variables: 
  client-to-server seq #  
  server-to-client seq #   
  rcvBuffer size at
  server,client 
  TCP Options
         




application








Connection state: ESTAB
Connection variables: 
  client-to-server seq #  
  server-to-client seq #   
  rcvBuffer size at
  server,client 
  TCP Options
           




application



































TCP 3-32
2-way handshaking: why isn’t it enough?
3-32
2-way handshake:





Let’s talk

OK
ESTAB
ESTAB


choose x






req_conn(x)

ESTAB
ESTAB



acc_conn(x)






























TCP 3-33
2-way handshaking failure scenario
3-33


retransmit
req_conn(x)


ESTAB


req_conn(x)
half open connection!
(no client!)

client terminates
server
forgets x
connection 
x completes
retransmit
req_conn(x)


ESTAB


req_conn(x)


data(x+1)
retransmit
data(x+1)

accept
data(x+1)
choose x




req_conn(x)

ESTAB
ESTAB



acc_conn(x)






























client terminates



ESTAB

choose x



req_conn(x)
ESTAB


acc_conn(x)


data(x+1)

accept
data(x+1)

connection 
x completes
server
forgets x






























TCP 3-34
2-way handshaking failure scenario
A user asks for a connection
Due to congestion the packet is caught in a traffic jam
The user asks again for the connection
Destination accepts 2nd connection request
User sends info to dest.
Info gets caught in a traffic jam
User sends info again
Dest receives the info
Connection is closed by both parties
The original connection request and user info find their way to the destination.


TCP 3-35

Two issues here: ack by the initiating part (3 way handshake and not 2 way)
And the closing part.
34
TCP 3-way handshake
3-35



SYNbit=1, Seq=x
Randomizes init seq num, x
send TCP SYN msg

ESTAB


SYNbit=1, Seq=y
ACKbit=1; ACKnum=x+1
Randomizes init seq num, y
send TCP SYNACK
msg, acking SYN


ACKbit=1, ACKnum=y+1
received SYNACK(x) 
indicates server is live;
send ACK for SYNACK;
this segment may contain 
client-to-server data
received ACK(y) 
indicates client is live
SYNSENT

ESTAB

SYN RCVD


client state

LISTEN
server state

LISTEN






























TCP 3-36
TCP 3-way handshake: FSM
3-36


closed
L


listen


SYN
rcvd


SYN
sent


ESTAB
Application asks to open a TCP connection

SYN(seq=x)


Application opens server, which listens to requests


SYN(x)


SYNACK(seq=y,ACKnum=x+1)
create new socket for 
communication back to client



SYNACK(seq=y,ACKnum=x+1)



ACK(ACKnum=y+1)



ACK(ACKnum=y+1)

L

TCP 3-37
Chapter 3: outline
Motivation
Segments & Acks
Reliable data transfer
Flow control
Connection management
Establishing a connection
Closing a connection
TCP timers
Congestion control



TCP 3-38


37
TCP: closing a connection
client, server each close their side of connection
send TCP segment with FIN bit = 1
respond to received FIN with ACK
on receiving FIN, ACK can be combined with own FIN
simultaneous FIN exchanges can be handled
3-38

TCP 3-39
TCP: closing a connection
3-39


FIN_WAIT_2

CLOSE_WAIT



FINbit=1, seq=y


ACKbit=1; ACKnum=y+1


ACKbit=1; ACKnum=x+1
 wait for server
close
can still
send data
can no longer
send data

LAST_ACK
CLOSED

TIMED_WAIT


 timed wait 
for 2*Max 
Segment Lifetime


CLOSED

FIN_WAIT_1



FINbit=1, seq=x
can no longer
send but can
 receive data
clientSocket.close()
client state

server state

ESTAB
ESTAB






























TCP 3-40
40

TCP server life cycle

TCP 3-41


TCP’s FSM
41
Transmission Control Block – holds state info for one TCP connection
Ports’ numbers
Buffers’ location in memory
State variables
Windows
Seq #, ack #
Options

TCP 3-42

- http://packetlife.net/blog/2010/jun/7/understanding-tcp-sequence-acknowledgment-numbers
41
TCP Rst
The Rst flag in the header is usually set to 0
Setting it to 1 asks the rcvr to immediately finish the connection
Used for
Case of error / crash 
Prevent stale packets from old connection from re-appearing
A server saying to client “I discard your request for connection”
E.g., as a part of a firewall or ad-blocking
Or of traffic filtering & QoS
Attacks
If the attacker intercepts real TCP packets, it can forge a TCP rst packet, thus maliciously closing the connection
3-42

TCP 3-43

TCP reset used by Comcast and by China censorship:
https://www.eff.org/deeplinks/2007/10/eff-tests-agree-ap-comcast-forging-packets-to-interfere
http://www.nbcnews.com/id/21376597/#.VlANj8fovcs
https://en.wikipedia.org/wiki/TCP_reset_attack#cite_note-5

42


3-43

TCP 3-44
Chapter 3: outline
Motivation
Segments & Acks
Reliable data transfer
Flow control
Connection management
Establishing a connection
Closing a connection
TCP timers
Congestion control



TCP 3-45


44
TCP timers
Retransmission TimeOut
Retransmit a packet after EstRTT + 4DevRTT
Persistence timer
Used for preventing deadlock in the case when the ack increasing the rwnd above 0 is lost
TIME-WAIT
Used during connection termination = 2*Maximum Segment Lifetime 
Keepalive timer
Destined to prevent “zombie” non-active connections
If no segment was sent for a long period, each hosts periodically sends an “empty” TCP packet to its peer
If a few probes are unanswered, the connections is closed

TCP 3-46

Chapter 3: outline
Motivation
Segments & Acks
Reliable data transfer
Flow control
Connection management
Congestion control



TCP 3-47


46


3-47

TCP 3-48


3-48

TCP 3-49


3-49

TCP 3-50

3-50

TCP 3-51

3-51

TCP 3-52



TCP 3-53

Funnel - משפך
52
Principles of congestion control
congestion:
informally: “too many sources sending too much data too fast for network to handle”
different from flow control
manifestations:
lost packets (buffer overflow at routers)
long delays (queuing in router buffers)

3-53

TCP 3-54
Approaches towards congestion control
end-end congestion control:
no explicit feedback from network
congestion inferred from end-system observed loss, delay
This approach obeys the E2E principle
TCP concentrates in this approach
3-54
network-assisted congestion control:
routers provide feedback to end systems
Flag bits indicating congestion
We will later (shortly) study this approach
Two broad approaches towards congestion control:



TCP 3-55
CWND (Cong. Window)
cwnd is dynamic, function of perceived network congestion

3-55
TCP sending rate:
roughly: send cwnd bytes, wait RTT for ACKS, then send more bytes








































last byte
ACKed
sent, not-yet ACKed
(“in-flight”)
last byte sent
cwnd





LastByteSent-
	LastByteAcked
<

cwnd

sender sequence number space 
rate
~
~
cwnd
RTT

bytes/sec


TCP 3-56
Slow Start 
when connection begins, increase rate exponentially until first loss event:
Init: cwnd = 1 MSS
Increment cwnd by MSS for every ACK received
Efectively doubles cwnd every RTT
Upon reaching ssthresh (Slow Start Threshold): switch to congestion avoidance
Youtube lesson

3-56

Host A
one segment
RTT
Host B






time




two segments
four segments






































TCP 3-57

The exact formula is:
Upon reception of an Ack (assume all segments are MSS)
Cwnd += MSS
56
Congestion Avoidance: Additive increase
Each time segment acknowledged cwnd increased by one until congestion detected
3-57

TCP 3-58
The exact formula is:
Upon reception of an Ack (assume all segments are MSS)
Cwnd += MSS * MSS / cwnd. See RFC 5681
https://tools.ietf.org/html/rfc5681

Eg: MSS = 100, Cwnd = 1000. Then  
Cwnd = 1000 + 100 * (100 / 1000) = 1010

Cwnd = 1010 + 100 * (100 / 1010) =~ 1020
…
The exact cwnd values are:
1000 
1010 
1019.901 
1029.706 
1039.417 
1049.038 
1058.571 
1068.017 
1077.381 
1086.662 
1095.865 


Congestion avoidance: AIMD
3-58
Additive Increase: increase  cwnd by 1 MSS every RTT until loss detected
Multiplicative Decrease: cut cwnd in half after loss 


cwnd: TCP sender 
congestion window size
AIMD saw tooth
behavior: probing
for bandwidth













additively increase window size …
…. until loss occurs (then cut window in half)




time

TCP 3-59
Congestion control example
3-59
3 dup-acks
What now?

TCP 3-60


TCP 3-60

TCP 3-61
TCP Reno
Very common; replaces the obsolete TCP Tahoe
Loss indicated by timeout:
SSThresh = max {2MSS, FlightSize/2}
cwnd = 1
Slow-start again
Loss indicated by 3 duplicate ACKs
SSthresh = cwnd/2 
cwnd = Ssthresh + 3 //See RFC 5681
After receiving acks for the lost segments, return to cwnd = SSthresh 
Philosophy: Network is still capable to deliver some segments – no need to Slow-Start again
That’s a Keynesian view

3-61

TCP 3-62
TCP congestion policy summary
* After receiving acks for the lost segments
*

TCP 3-63



3-63

TCP 3-64
TCP Tahoe
TCP 3-64

TCP 3-65
TCP Reno
TCP 3-65

TCP 3-66

כחול – חבילה.
סיאן – Ack שנשלח 
ירוק – גודל חלון.
65
TCP Reno
3-66
timeout
ssthresh = cwnd/2
cwnd = 1 MSS
dupACKcount = 0
retransmit missing segment 



L

cwnd > ssthresh


congestion
avoidance 

cwnd += MSS * (MSS/cwnd)
dupACKcount = 0
transmit new segment(s), as allowed


new ACK
.

dupACKcount++


duplicate ACK


 

fast
recovery 


cwnd = cwnd + MSS
transmit new segment(s), as allowed


duplicate ACK
ssthresh= cwnd/2
cwnd = ssthresh + 3
retransmit missing segment


dupACKcount == 3
timeout
ssthresh = cwnd/2
cwnd = 1 
dupACKcount = 0
retransmit missing segment 



ssthresh= cwnd/2
cwnd = ssthresh + 3
retransmit missing segment


dupACKcount == 3


cwnd = ssthresh
dupACKcount = 0



New ACK

slow 
start
timeout
ssthresh = cwnd/2 
cwnd = 1 MSS
dupACKcount = 0
retransmit missing segment 

cwnd = cwnd+MSS
dupACKcount = 0
transmit new segment(s), as allowed


new ACK


dupACKcount++


duplicate ACK


L
cwnd = 1 MSS
ssthresh = 64 KB
dupACKcount = 0


New
ACK!

New
ACK!

New
ACK!

TCP 3-67
TCP throughput
avg. TCP throughput as function of window size, RTT?
ignore slow start, assume always data to send
W: window size (measured in bytes) where loss occurs
3-67





W
W/2

TCP 3-68
TCP throughput
avg. TCP throughput as function of window size, RTT?
ignore slow start, assume always data to send
W: window size (measured in bytes) where loss occurs
avg. window size (# in-flight bytes) is ¾ W
3-68





W
W/2
avg TCP throughput = 
3
4

W
RTT

bytes/sec

TCP 3-69
TCP Fairness
fairness goal: if K TCP sessions share same bottleneck link of bandwidth R, each should have average rate of R/K
3-69


















TCP connection 1
bottleneck
router
capacity R



TCP connection 2



TCP 3-70
Why is TCP fair?
two competing sessions:
additive increase gives slope of 1, as throughout increases
multiplicative decrease decreases throughput proportionally 
3-70




R
R
equal bandwidth share
Connection 1 throughput
Connection 2 throughput
congestion avoidance: additive increase
loss: decrease window by factor of 2

TCP 3-71
Fairness (more)
Fairness and UDP
multimedia apps often do not use TCP
do not want rate throttled by congestion control
instead use UDP:
send audio/video at constant rate, tolerate packet loss

3-71
Fairness, parallel TCP connections
application can open multiple parallel connections between two hosts
web browsers do this 


TCP 3-72

e.g., link of rate R with 9 existing connections:
new app asks for 1 TCP, gets rate R/10
new app asks for 11 TCPs, gets R/2  ? (I think it should be 9 TCPs)


71
Chapter 3: outline
Motivation
Segments & Acks
Reliable data transfer
Flow control
Connection management
Congestion control
TCP Options and variants


3-72

TCP 3-73


72

3-73

TCP 3-74


3-74

TCP 3-75


3-75

TCP 3-76
TPC variants
Vegas: estimate congestion based on RTT
Compound TCP: enhancement of Vegas, used by some MS OSs
BIC: Binary Increase Cong. Ctrl
Increase cwnd using binary search
CUBIC: enhancement of BIC
Used by default in some Linux & Windows servers
Data Center TCP
See HW 4 


TCP 3-76

TCP 3-77
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\הרצאות\מצגת-4.0--מבוא-לשכבת-הרשת\L4.0_Layer3.pptx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
Introduction to data communications 
Lecturer: Itamar Cohen 

Chapter 4: the network layer
Part 1: packets and routers
Computer Networking: A Top Down Approach 
6th edition 
Jim Kurose, Keith Ross
Addison-Wesley
March 2012

Network Layer
4-1
 Based on slides by J.F Kurose and K.W. Ross, all Rights Reserved	All material copyright 1996-2012



Network Layer
4-2


1
Network Layer
4-2
Introduction
Virtual circuits
Datagram networks	
What’s inside a router
Outline

Network Layer
4-3
Network Layer
4-3
















































































































































































































































































Network layer
transport segment from sending to receiving host 
on sending side encapsulates segments into datagrams
on receiving side, delivers segments to transport layer
network layer protocols in every host, router
router examines header fields in all IP datagrams passing through it





application
transport
network
data link
physical








application
transport
network
data link
physical























network
data link
physical



















network
data link
physical



















network
data link
physical



















network
data link
physical



















network
data link
physical



















network
data link
physical



















network
data link
physical



















network
data link
physical



















network
data link
physical



















network
data link
physical



















network
data link
physical




Network Layer
4-4
Network Layer
4-4
Two key network-layer functions
forwarding: move packets from router’s input to appropriate router output
routing: determine route taken by packets from source to dest. 
routing algorithms

analogy:
routing: process of planning trip from source to dest
forwarding: process of getting through single interchange


Network Layer
4-5
Network Layer
4-5
















































































1
2
3

0111
value in arriving
packet’s header

routing algorithm

local forwarding table
header value
output link

0100
0101
0111
1001
3
2
2
1













































Interplay between routing and forwarding

routing algorithm determines
end-end-path through network

forwarding table determines
local forwarding at this router

Network Layer
4-6
Network Layer
4-6
Introduction
Virtual circuits	
Motivation
Implementation
Datagram networks
What’s inside a router
Outline

Network Layer
4-7
Network Layer
4-7

Network Layer
4-8
Network Layer
4-8
Guaranteed delivery
Preferably within a bounded delay
Guaranteed minimum bandwidth to flow
In-order datagram delivery
Restrictions on changes in inter-packet spacing (jitter)
Security
The Internet guarantees none of these!
“Nice-to-have” network services

Network Layer
4-9
Network Layer
4-9
Introduction
Virtual circuit 	
Motivation
Implementation
ATM
VPN & MPLS
Principles of circuit switching
Datagram networks
What’s inside a router
Outline

Network Layer
4-10
Network Layer
4-10

Network Layer
4-11
Network Layer
4-11
Designed to handle well both high-TP apps and RT apps
Used over backbone optical networks and Integrated Services Digital Networks
Obsolete

Asynchronous Transfer Mode

Network Layer
4-12
Network Layer
4-12
ATM is parallel to the 3 bottom layers in ISO model
ATM may be thought as a hybrid of pkt-switching and circuit-switching
Use small, fixed-size packets (cells)
Like packet swithicng
Use connection setup, which builds a virtual circuit
Like circuit switching



Asynchronous Transfer Mode - principles

Network Layer
4-13
Network Layer
4-13
Network layer service models
Network
Architecture

Internet

ATM

ATM

ATM

ATM
Service
Model

best effort

CBR

VBR

ABR

UBR
Bandwidth

none

constant
rate
guaranteed
rate
guaranteed 
minimum
none
Loss

no

yes

yes

no

no
Order

no

yes

yes

yes

yes
Timing

no

yes

yes

no

no
Congestion
feedback

no (inferred
via loss)
no
congestion
no
congestion
yes

no
Guarantees ?







Network Layer
4-14

Constant Bit Rate
Available Bit Rate: an average or Sustainable Cell Rate is specified. The rate can reach at most a pre-specified Peak Cell Rate, for a bounded interval.
Variable Bit Rate
Unspecified Bit Rate
13
Network Layer
4-14
Introduction
Virtual circuit 	
Motivation
Implementation
ATM
VPN & MPLS
Principles of circuit switching
Datagram networks
What’s inside a router
Outline

Network Layer
4-15
Network Layer
4-15
Motivation: allow enterprise a secure, private connection over a public Wide Area Network
Large distances
Possibly wireless
Use proxy servers to improve privacy
Use tunneling and / or encryption
Tunnel’s termination points 
are located either at
Customer edge
ISP’s edge
Virtual Private Network

Network Layer
4-16
Network Layer
4-16
Security is implemented by either
App layer: Secure Shell (ssh) – which allows security over an unsecure network
Transport layer (at end-hosts): Secure-Socket Layer
Network layer: encapsulate 
	an IP packet within 
	an encrypted IPSec packet

Virtual Private Network: Security

Network Layer
4-17

In addition: Legacy protocols by Cisco, Microsoft

16
Network Layer
4-17
VPN may be routed using Multi Protocol Label Switching
MPLS is good also for
Traffic Engineering
Out-Of-Band control
Centralized SDNs:
	Software 
	Defined 
	Networks
Virtual Private Network: Routing

Network Layer
4-18
Network Layer
4-18
 Improved privacy and security 
As required by VPNs
 No need for expensive, complicated routing algorithms and routing tables
 Easier Traffic Engineering
 Out-Of-Band control
Usages
Virtual Private Networks
Centralized Software Defined Networks
 Requires packets [En | de] capsulation
 Central control is complex, not scalable and subject to failures
 Requires connection setup






Multi Protocol Label Switching

Network Layer
4-19
IP Datagrams on Virtual Circuits: Data Center Networks
Typical traffic pattern in Data Center
Most of the congestion is caused by few long lived flows (elephants) 
Many short lived flows (mice)
Use virtual circuits either for…
all flows
only elephants
Mice use normal IP forwarding
Problem: how to identify elephants?

Network Layer
4-20
Network Layer
4-20
Introduction
Virtual circuit 	
Motivation
Implementation
ATM
VPN & MPLS
Principles of Virtual Circuits
Datagram networks
What’s inside a router
Outline

Network Layer
4-21
Network Layer
4-21
Call setup
call setup, teardown for each call before data can flow
each packet carries VC identifier (not destination host address)
every router on source-dest path maintains “state” for each passing connection
link, router resources (bandwidth, buffers) may be allocated to VC (dedicated resources = predictable service)

“source-to-dest path behaves much like telephone circuit”
performance-wise
network actions along source-to-dest path



Network Layer
4-22
Network Layer
4-22
VC implementation
a VC consists of:
path from source to destination
VC numbers, one number for each link along path
entries in forwarding tables in routers along path
packet belonging to VC carries VC number (rather than dest address)
VC number can be changed on each link.
new VC number comes from forwarding table

Network Layer
4-23
Network Layer
4-23
VC forwarding table












12
22
32
1
2
3
VC number

interface
number

Incoming interface    Incoming VC #     Outgoing interface    Outgoing VC #



1                          12                               3                          22
2                          63                               1                          18 
3                           7                                2                          17
1                          97                               3                           87
…                          …                                …                            …

forwarding table in
northwest router:
VC routers maintain connection state information!
































Network Layer
4-24
Network Layer
4-24





application
transport
network
data link
physical















































Virtual circuits: signaling protocols
used to setup, maintain, teardown VC
used in ATM, frame-relay, X.25
not used in today’s Internet









1. initiate call

2. incoming call
3. accept call

4. call connected
5. data flow begins
6. receive data





application
transport
network
data link
physical



























Network Layer
4-25
Network Layer
4-25
Introduction
Virtual circuit 	
Datagram networks
What’s inside a router
Outline

Network Layer
4-26
Network Layer
4-26
Connection, connection-less service
datagram network provides network-layer connectionless service
virtual-circuit network provides network-layer connection service
analogous to TCP/UDP connection-oriented / connectionless transport-layer services, but:
service: host-to-host
no choice: network provides one or the other
implementation: in network core


Network Layer
4-27
Network Layer
4-27
Datagram networks
no call setup at network layer
routers: no state about end-to-end connections
no network-level concept of “connection”
packets forwarded using destination host address
1. send datagrams





application
transport
network
data link
physical








application
transport
network
data link
physical











































































2. receive datagrams

Network Layer
4-28
Network Layer
4-28


















































1
2
3
Datagram forwarding table








IP destination address in 
arriving packet’s header

routing algorithm

local forwarding table
dest address
output  link

address-range 1
address-range 2
address-range 3
address-range 4
3
2
2
1













































4 billion IP addresses, so rather than list individual destination address
list range of addresses
(aggregate table entries)


Network Layer
4-29
Network Layer
4-29
Datagram Vs Virtual Circuits
Internet (datagram)
data exchange among computers
“elastic” service, no strict timing req. 
many link types 
different characteristics
uniform service difficult
Distributed control
ATM (VC)
evolved from telephony
human conversation: 
strict timing, reliability requirements
need for guaranteed service
Central control

Network Layer
4-30
Source Routing
Alternative to Virtual Circuits and usual packet routing
The idea: list entire path in packet
Driving directions (north 3 hops, east, etc..)
Router processing
Examine first step in directions
Strip first step from packet
Forward to step just stripped off

Receiver
Packet


R2, R3, R


Sender


2
3
4
1
2
3
4
1
2
3
4
1








R2
R3
R1
R3, R

R




Network Layer
4-31
31
Source Routing
Advantages
Switches can be very simple and fast
Disadvantages
Variable (unbounded) header size
Sources must know or discover topology (e.g., failures)

Network Layer
4-32

Typical use
Ad-hoc networks (DSR)
Machine room networks (Myrinet)

31
32
VC / IP address / source routing

Source Routing
Global Addresses
Header Size
Worst
OK – Large address
Router Table Size
None
Number of hosts (prefixes)
Forward Overhead
Best
Prefix matching
Virtual Circuits
Best
Number of circuits
Pretty Good
Setup Overhead
None
None
Error Recovery
Tell all hosts
Tell all routers
Connection Setup
Tell all routers and Tear down circuit and re-route

Network Layer
4-33
Network Layer
4-33
Introduction
Virtual circuits 	
Datagram networks
What’s inside a router
Architecture overview
Input ports
Switching fabric
Output ports
Present & future trends


Outline

Network Layer
4-34
Network Layer
4-34
Router architecture overview
two key router functions: 
run routing algorithms/protocols
forwarding datagrams from incoming to outgoing link

high-seed 
switching
fabric

routing 
processor















router input ports














router output ports
forwarding data plane  (hardware)
routing, management
control plane (software)


forwarding tables computed,
pushed to input ports

Network Layer
4-35
Network Layer
4-35
Introduction
Virtual circuit 	
Datagram networks
What’s inside a router
Architecture overview
Input ports
Switching fabric
Output ports
Present & future trends
Outline

Network Layer
4-36
Network Layer
4-36

line
termination






link 
layer 
protocol
(receive)
lookup,
forwarding


queueing
Input port functions
decentralized switching: 
given datagram dest., lookup output port using forwarding table in input port memory (“match plus action”)
goal: complete input port processing at ‘line speed’
queuing: if datagrams arrive faster than forwarding rate into switch fabric
physical layer:
bit-level reception
data link layer:
e.g., Ethernet,
WiFi

switch
fabric













Network Layer
4-37
Network Layer
4-37
Destination Address Range

11001000 00010111 00010000 00000000
through                                 
11001000 00010111 00010111 11111111

11001000 00010111 00011000 00000000
through
11001000 00010111 00011000 11111111  

11001000 00010111 00011001 00000000
through
11001000 00010111 00011111 11111111  

otherwise
Link Interface


0



1



2


3  







Q: but what happens if ranges don’t divide up so nicely? 
Forwarding table

Network Layer
4-38
Network Layer
4-38



Longest Prefix Matching
Destination Address Range                        
11001000 00010111 00010*** ********* 
11001000 00010111 00011000 *********
11001000 00010111 00011*** *********
otherwise             
DA: 11001000  00010111  00011000  10101010 
examples:
DA: 11001000  00010111  00010110  10100001 
which interface?
which interface?
when looking for forwarding table entry for given destination address, use longest address prefix that matches destination address.
longest prefix matching






Link interface
0
1
2
3

Network Layer
4-39
39
Address Lookup: Binary Tries
Example Prefixes:
a)  00001
b)  00010
c)  00011
d)  001
e)  0101
f)  011
g)  100
h)  1010
i)  1100
j)  11110000























e
f
g
h
i
j
0
1













a
b
c
d












Network Layer
4-40
39


Address Lookup: TCAM
Destination Address Range                        
11001000 00010111 00010*** ********* 
11001000 00010111 00011000 *********
11001000 00010111 00011*** *********
otherwise             






Link interface
0
1
2
3
(Ternary) Content Addressable Memory


Network Layer
4-41
40


Network Layer
4-41
Input port queuing and HoL blocking
Speedup=k: at each cycle:
Each input queue can transfer at most k packets
Each output queue can accept at most k packets
Head-of-the-Line (HOL) blocking: queued datagram at front of queue prevents others in queue from moving forward

































When speedup=1 the green packet experiences HoL blocking 

switch
fabric

Network Layer
4-42
Network Layer
4-42
Introduction
Virtual circuit 	
Datagram networks
What’s inside a router
Architecture overview
Input ports
Switching fabric
Output ports
Present & future trends

Outline

Network Layer
4-43
Network Layer
4-43
Switching fabrics
transfer packet from input buffer to appropriate output buffer
switching rate: rate at which packets can be transfer from inputs to outputs
often measured as multiple of input/output line rate
N inputs: switching rate N times line rate desirable
three types of switching fabrics































memory
Shared
memory































bus













































crossbar




Network Layer
4-44
Network Layer
4-44
Switching via a bus
datagram from input port memory
    to output port memory via a shared bus
bus contention:  switching speed limited by bus bandwidth
32 Gbps bus, Cisco 5600: sufficient speed for access and enterprise routers































bus


Network Layer
4-45
Network Layer
4-45
Switching via interconnection network
Overcome bus bandwidth limitations
Solutions to the scalability problem
Hierarchical Xbar
Fragmenting datagram into fixed length cells, switch cells through the fabric
Sophisticated (perfect / wegihted) matching algorithms















































crossbar


Network Layer
4-46
Network Layer
4-46
Switching fabrics
Transfer packet from input buffer to appropriate output buffer
Most common implementation: Xbar
Speedup=k: at each cycle:
Each input queue can transfer at most k packets
Each output queue can accept at most k packets
By default, speedup=1
A work conserving algorithm: if at some cycle there’s a packet destined to output port j, then at cycle, output port will transmit a packet
Very hard to guarantee
Can mitigate non-conserving cycles using VOQs and / or speedup > 1















































crossbar


Network Layer
4-47
Network Layer
4-47
Introduction
Virtual circuit 	
Datagram networks
What’s inside a router
Architecture overview
Input ports
Switching fabric
Output ports
Present & future trends
Outline

Network Layer
4-48
Network Layer
4-48
Output ports
buffering required when datagrams arrive from fabric faster than the transmission rate
scheduling discipline chooses among queued datagrams for transmission

line
termination




link 
layer 
protocol
(send)
switch
fabric

datagram
buffer


queueing











Datagram (packets) can be lost due to congestion, lack of buffers
Priority scheduling – who gets best performance, network neutrality

Network Layer
4-49
Network Layer
4-49
Output queuing: 
buffer size
The “rule of thumb” (RFC 3439): 
	Buffer size = RTT * BW
Intuition: assume “full TCP window”
e.g., BW = 10 Gpbs, RTT=250ms  Buff 2.5 Gb
Major improvement [Keslassy et. al]: when there’re N flows destined to the same output, buffering equal to 


	is “enough”
RTT  BW
.

N








Network Layer
4-50
Network Layer
4-50
Output queuing: max-min fairness
Consider 4 clients, with demands: 2, 2.6, 4, 5
Capacity: 10
How to allocate the capacity fairly?
A one minute film showing the exact calculation


Network Layer
4-51
Network Layer
4-51
Output queuing: scheduling
Round Robin
Weighted Round Robin
Generalized Processor Sharing (“bitwise RR”)
Weighted Fair Queuing
Deficit Round Robin

Network Layer
4-52
Network Layer
4-52
Introduction
Virtual circuit 	
Datagram networks
What’s inside a router
Architecture overview
Input ports
Switching fabric
Output ports
Present & future trends
Outline

Network Layer
4-53
Router Chassis
Cisco GSR 12816
Juniper T640

2m

50 cm

60cm
Capacity: 640Gb/s
Power: 5kW
1m


75 cm

50 cm
Capacity: 320Gb/s
Power: 3kW

Network Layer
4-54
Router Design
Many trade-offs: power, $$$, throughput, reliability, flexibility
Important bottlenecks on fast path
Longest prefix match
Cross-bar scheduling
Trends: Central control  distributed control 
High-end HW routers
and… back to centralized control 
Software Defined Networks
and… back again to dist’ control
Edge computing
54

Network Layer
4-55


54
Network Processors: motivation
Motivation: Packets should pass through multiple processing stages
IP lookup & forwarding
Header updating
Time To Live
Error Congestion Notification
Re-calculation of Checksum
Filtering 
Deep Packet Inspection
Multi-Protocol Label Switching [en|de]capsulation
[En|de]cryption
Software: too slow
Hardware: not flexible
55

Network Layer
4-56


55
Network Processors
Combination of Software-Hardware
Multi-phase pipelined / parallel processing
Challenges
Variable processing time
Variable gains from packets
Processing-time and gain from packet not necessarily known when it arrives

56

Network Layer
4-57


56
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\הרצאות\מצגת-4.1--IP\L4.1_IP.pptx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
Introduction to data communications 
Lecturer: Itamar Cohen 

Chapter 4: the network layer
Part 2: IP
Computer Networking: A Top Down Approach 
6th edition 
Jim Kurose, Keith Ross
Addison-Wesley
March 2012

Network Layer
4-1
 Based on slides by 
Dr. Yoram Haddad, JCT
J.F Kurose and K.W. Ross, all Rights Reserved
	     All material copyright 1996-2012



Network Layer
4-2


1
Network Layer
4-2


The Internet network layer


forwarding
table






host, router network layer functions:




routing protocols
 path selection
 RIP, OSPF, BGP



IP protocol
 addressing conventions
 datagram format
 packet handling conventions


ICMP protocol
 error reporting
 router signaling

transport layer: TCP, UDP
link layer
physical layer
network
layer



Network Layer
4-3
Network Layer
4-3
IPv4 Header format
IPv4 addressing
ICMP
IPv6
Outline

Network Layer
4-4
IPv4 Header



Network Layer
4-5

DSCP – Differentiated Service Code Point – used for QoS. Replaces the outdated Type of Service.
IHL – Internet Header Length – size of the IP hdr (in 32-b words).
ID – used for identifying fragments of the same seg’.
Flags: reserved; don’t fragment; more fragments.
Prot’: TCP, UDP, DCCP; ICMP, OSPF, IGRP (private intra-AS routing prot’), IP-in-IP (encap’), IGMP, …
4
Network Layer
4-5
Fragmentation & Reassembly
Max Transfer Unit differs among various link types
When needed, a large IP datagram is fragmented 
and reassembled at final destination
IP header bits used to identify, order related fragments















fragmentation: 
in: one large datagram
out: 3 smaller datagrams













reassembly




…
























































…


Network Layer
4-6
Network Layer
4-6


ID
=x
offset
=0
fragflag
=0
length
=4000








ID
=x
offset
=0
fragflag
=1
length
=1500








ID
=x
offset
=185
fragflag
=1
length
=1500








ID
=x
offset
=370
fragflag
=0
length
=1040









one large datagram becomes
several smaller datagrams
example:
4000 byte datagram
MTU = 1500 bytes

1480 bytes in 
data field
offset =
1480/8 
IP fragmentation, reassembly



Network Layer
4-7
Network Layer
4-7
Header format
IPv4 addressing
Subnets and prefixes 
DHCP
NAT
ICMP
IPv6
Outline

Network Layer
4-8



Network Layer
4-8
IPv4 addressing: introduction
IP address: 32-bit identifier for host, router interface 
interface: connection between host/router and physical link
router’s typically have multiple interfaces
host typically has one or two interfaces (e.g., wired Ethernet, wireless 802.11)
IP addresses associated with each interface
223.1.1.1

223.1.1.2
223.1.1.3
223.1.1.4

223.1.2.9


223.1.2.2
223.1.2.1



223.1.3.2
223.1.3.1

223.1.3.27
223.1.1.1 = 11011111 00000001 00000001 00000001




223
1
1
1



















Network Layer
4-9
Network Layer
4-9
Subnets
IP address: 
subnet part - high order bits
host part - low order bits 
what’s a subnet ?
device interfaces with same subnet part of IP address
can physically reach each other without intervening router
network consisting of 3 subnets








223.1.1.1
223.1.1.3
223.1.1.4

223.1.2.9





223.1.3.2
223.1.3.1














subnet


223.1.1.2



223.1.3.27
223.1.2.2
223.1.2.1

Network Layer
4-10
Network Layer
4-10


The mask is the longest prefix (starting from the MSB) which is common to all hosts in the same subnet

subnet mask: /24
Subnet mask
223.1.1.0/24
223.1.2.0/24
223.1.3.0/24







223.1.1.1
223.1.1.3
223.1.1.4
223.1.2.9




223.1.3.2
223.1.3.1














subnet


223.1.1.2



223.1.3.27
223.1.2.2
223.1.2.1




Network Layer
4-11
Address aggregation
4-11

Network Layer
4-12

Address aggregation
4-12

Network Layer
4-13

Longest mask matching
4-13




Network Layer
4-14
Explanation for R2’s Routing table:
First row:
Org 4:	1000_1100 . 0001_1000 . 0000_0111 . 11XX_XXXX

Row 2:
Org 1: 	1000_1100 . 0001_1000 . 0000_0111 . 00XX_XXXX
Org 2: 	1000_1100 . 0001_1000 . 0000_0111 . 01XX_XXXX  
Org 3: 	1000_1100 . 0001_1000 . 0000_0111 . 10XX_XXXX

Row 3: 	“To other networks” at the diagram.

Row 4: 	Default Router.

Longest mask matching
4-14




R4







140.24.6.0/24
R1
R2
R3
R4

Network Layer
4-15
R2’s Routing table
/24 1000_1100 . 0001_1000 . 0000_0110 . XXXX_XXXX, R3, m1
/26 1000_1100 . 0001_1000 . 0000_0111 . 11XX_XXXX, R3, m1
/24 1000_1100 . 0001_1000 . 0000_0110 . XXXX_XXXX, R1, m0
/0   0.0.0.0, R4, m2

R3’s Routing table
/24 1000_1100 . 0001_1000 . 0000_0110 . XXXX_XXXX, -, m1
/26 1000_1100 . 0001_1000 . 0000_0111 . 11XX_XXXX, -, m0
/0   0.0.0.0, R2, m2


Longest mask matching
4-15




R4







140.24.6.0/24
R1
R2
R3
R4

Network Layer
4-16
Explanation for R2’s Routing table:
First row:
Org 4:	1000_1100 . 0001_1000 . 0000_0111 . 11XX_XXXX

Row 2:
Org 1: 	1000_1100 . 0001_1000 . 0000_0111 . 00XX_XXXX
Org 2: 	1000_1100 . 0001_1000 . 0000_0111 . 01XX_XXXX  
Org 3: 	1000_1100 . 0001_1000 . 0000_0111 . 10XX_XXXX

Row 3: 	“To other networks” at the diagram.

Row 4: 	Default Router.

Network Layer
4-16







223.1.1.1

223.1.1.3
223.1.1.4




223.1.2.2
223.1.2.1

223.1.2.6




223.1.3.2
223.1.3.1

223.1.3.27

223.1.1.2



223.1.7.0
223.1.7.1
223.1.8.0
223.1.8.1
223.1.9.1
223.1.9.2
Subnets





























Network Layer
4-17
Classful addressing (obsolete)
In the past, IP addresses were divided to classes, with fixed-size prefixes of 8,16 or 24 bits
E.g. a class with prefix of only 8 bits was huge – allowing ___ devices in it
This led to significant waste of IP addresses, which were allocated to classes, and therefore was replaced by CIDR (see next slide)

Network Layer
4-18
Network Layer
4-18
Classless Inter Domain Routing
CIDR: Classless InterDomain Routing
subnet portion of address of arbitrary length
address format: a.b.c.d/x, where x is # bits in subnet portion of address
11001000  00010111  00010000  00000000
subnet
part
host
part


200.23.16.0/23



Network Layer
4-19
Network Layer
4-19
Header format
IPv4 addressing
Subnets and prefixes 
DHCP
NAT
ICMP
IPv6
Outline

Network Layer
4-20
Network Layer
4-20
IP addresses: how to get one?
Q: How does a host get IP address?

hard-coded by system admin in a file
DHCP: Dynamic Host Configuration Protocol: dynamically get address from as server
“plug-and-play” 



Network Layer
4-21
Network Layer
4-21
DHCP: Dynamic Host Configuration Protocol
Goal: allow host to dynamically obtain an IP address
can renew its lease on address in use
allows reuse of addresses (only hold address while connected/“on”)
support for mobile dynamic users
DHCP informs a new host in the network about its:
IP address
Subnet mask
Default gateway
Address of local DNS server

Network Layer
4-22
21


Network Layer
4-22
DHCP: Dynamic Host Configuration Protocol
goal: allow host to dynamically obtain an IP address
can renew its lease on address in use
allows reuse of addresses (only hold address while connected/“on”)
support for mobile dynamic users
DHCP overview:
host broadcasts “DHCP discover” msg [optional]
DHCP server responds with “DHCP offer” msg [optional]
host requests IP address: “DHCP request” msg
DHCP server sends address: “DHCP ack” msg 


Network Layer
4-23
22


Network Layer
4-23
DHCP client-server scenario

 
223.1.1.0/24
223.1.2.0/24
223.1.3.0/24








223.1.1.1
223.1.1.3
223.1.1.4

223.1.2.9





223.1.3.2
223.1.3.1















223.1.1.2


223.1.3.27
223.1.2.2
223.1.2.1
DHCP
server
arriving DHCP
client needs 
address in this
network



















































Network Layer
4-24
23


Network Layer
4-24
DHCP server: 223.1.2.5
arriving
 client



DHCP discover
src : 0.0.0.0, 68     
dest.: 255.255.255.255,67
yiaddr:    0.0.0.0
transaction ID: 654

DHCP offer
src: 223.1.2.5, 67      
dest:  255.255.255.255, 68
yiaddrr: 223.1.2.4
transaction ID: 654
lifetime: 3600 secs

DHCP request
src:  0.0.0.0, 68     
dest::  255.255.255.255, 67
yiaddrr: 223.1.2.4
transaction ID: 655
lifetime: 3600 secs

DHCP ACK
src: 223.1.2.5, 67      
dest:  255.255.255.255, 68
yiaddrr: 223.1.2.4
transaction ID: 655
lifetime: 3600 secs















































DHCP client-server scenario

Broadcast: is there a DHCP server out there?

Broadcast: I’m a DHCP server! Here’s an IP address you can use 

Broadcast: OK.  I’ll take that IP address!

Broadcast: OK.  You’ve got that IP address!

Transport Layer
3-25
24

Why b/c?
Discover: because the DHCP server’s addr is unknown.
Offer: because the arriving client doesn’t know yet its allocated addresses.
Req: & Ack actually, not necessary. Maybe for informing other hosts and DHCP servers in the network.
Network Layer
4-25
connecting laptop needs its IP address, addr of first-hop router, addr of DNS server: use DHCP





router with DHCP 
server built into 
router
DHCP request encapsulated in UDP, encapsulated in IP, encapsulated in 802.1 Ethernet

Ethernet frame broadcast (dest: FFFFFFFFFFFF) on LAN, received at router running DHCP server
Ethernet demuxed to IP demuxed, UDP demuxed to DHCP 
168.1.1.1































































DHCP
UDP
IP
Eth
Phy





DHCP

DHCP



DHCP





DHCP









DHCP









DHCP
UDP
IP
Eth
Phy





DHCP



DHCP





DHCP









DHCP

DHCP
DHCP: example

Network Layer
4-26
Network Layer
4-26
DCP server formulates DHCP ACK containing client’s IP address, IP address of first-hop router for client, name & IP address of DNS server






encapsulation of DHCP server, frame forwarded to client, demuxing up to DHCP at client
DHCP: example



















router with DHCP 
server built into 
router










































DHCP



DHCP





DHCP









DHCP









DHCP
UDP
IP
Eth
Phy





DHCP


DHCP
UDP
IP
Eth
Phy





DHCP



DHCP





DHCP









DHCP
client now knows its IP address, name and IP address of DSN server, IP address of its first-hop router


Network Layer
4-27
Network Layer
4-27
IP addresses: how to get one?
Q: how does network get subnet part of IP addr?
A: gets allocated portion of its provider ISP’s address space
ISP's block          11001000  00010111  00010000  00000000    200.23.16.0/20 

Organization 0    11001000  00010111  00010000  00000000    200.23.16.0/23 
Organization 1    11001000  00010111  00010010  00000000    200.23.18.0/23 
Organization 2    11001000  00010111  00010100  00000000    200.23.20.0/23 
   ...                                          …..                                   ….                ….
Organization 7    11001000  00010111  00011110  00000000    200.23.30.0/23 


Network Layer
4-28
Network Layer
4-28
IP addresses: how to get one?
Internet Corporation for Assigned Names and Numbers (ICANN) 
Allocates addresses
Assigns domain names, resolves disputes
Manages DNS

Network Layer
4-29
Network Layer
4-29
Header format
IPv4 addressing
Subnets and prefixes 
DHCP
NAT
ICMP
IPv6
Outline

Network Layer
4-30
Network Layer
4-30
Lack of IP addresses
Ease work of ISPs
No need to allocate huge range of addresses, while many of them are actually not in use
Hierarchical work – decreases complexity
Separation between change in local network and changes (inc. even changing ISP) in outside world
Devices inside local net not explicitly addressable, visible by outside world (a security plus)

Network Address Translation: Motivation

Network Layer
4-31
Network Layer
4-31
Network Address Translation
datagrams with source or 
destination in this network
have 10.0.0/24 address for 
source, destination (as usual)
all datagrams leaving local
network have same single source NAT IP address: 138.76.29.7,different source port numbers








10.0.0.1
10.0.0.2
10.0.0.3
10.0.0.4

138.76.29.7


local network
(e.g., home network)
10.0.0/24





rest of
Internet











Network Layer
4-32
Network Layer
4-32





10.0.0.1
10.0.0.2
10.0.0.3

S: 10.0.0.1, 3345
D: 128.119.40.186, 80








1
10.0.0.4

138.76.29.7

1: host 10.0.0.1 
sends datagram to 
128.119.40.186, 80



NAT translation table
WAN side addr        LAN side addr



138.76.29.7, 5001   10.0.0.1, 3345
……                                         ……

S: 128.119.40.186, 80 
D: 10.0.0.1, 3345









4

S: 138.76.29.7, 5001
D: 128.119.40.186, 80








2
2: NAT router
changes datagram
source addr from
10.0.0.1, 3345 to
138.76.29.7, 5001,
updates table




S: 128.119.40.186, 80 
D: 138.76.29.7, 5001









3
3: reply arrives
 dest. address:
 138.76.29.7, 5001
4: NAT router
changes datagram
dest addr from
138.76.29.7, 5001 to 10.0.0.1, 3345 


NAT: network address translation












Network Layer
4-33
Network Layer
4-33
16-bit port-number field: 
~64k simultaneous connections with a single LAN-side address
NAT is controversial:
Routers should only process up to layer 3
End-to-end argument
Address shortage should be solved by IPv6
NAT disturbs app designers, e.g., P2P apps
See next slide
NAT: network address translation

Network Layer
4-34
Network Layer
4-34
NAT traversal problem
client wants to connect to server with address 10.0.0.1
server address 10.0.0.1 local to LAN (client can’t use it as destination addr)
only one externally visible NATed address: 138.76.29.7
solution1: statically configure NAT to forward incoming connection requests at given port to server
e.g., (123.76.29.7, port 2500) always forwarded to 10.0.0.1 port 25000



10.0.0.1
10.0.0.4


NAT 
router
138.76.29.7

client
?










































Network Layer
4-35
Network Layer
4-35
NAT traversal problem
solution 2: Universal Plug and Play (UPnP) Internet Gateway Device (IGD) Protocol.  Allows NATed host to:
learn public IP address (138.76.29.7)
add/remove port mappings (with lease times)



10.0.0.1
NAT 
router












































Network Layer
4-36
Network Layer
4-36
NAT traversal problem
solution 3: relaying (used in Skype)
NATed client establishes connection to relay
external client connects to relay
relay bridges packets between to connections

138.76.29.7
client


2. connection to
relay initiated
by NATed host
1. connection to
relay initiated
by client


3. relaying 
established




NAT 
router












10.0.0.1






























Network Layer
4-37

Why cannot the clients continue communicate directly after the connection is established?
Because NAT not only hide theirs addresses / ports from each other, but also disallows every NATed client accepting sessions initiated from outside.
If A connects B directly, that would be a new session.

שיטות אחרות לחציית NAT הן וריאציות שונות על שתי השיטות שראינו – קרי, קינפוג סטטי של נתב ה-NAT, ושימוש בשרת מקשר. 

36
Network Layer
4-37
NAT traversal problem
solution 4:
Similar to solution 3, but after generating the initial connection, peers communicate directly
Details
Bonus HW: generate animation for your lazy lecturer

138.76.29.7
client


2. connection to
relay initiated
by NATed host
1. connection to
relay initiated
by client


3. relaying 
established




NAT 
router












10.0.0.1






























Network Layer
4-38


37
Network Layer
4-38
Is NAT secure?
Is NAT secure?


Network Layer
4-39

Why cannot the clients continue communicate directly after the connection is established?
Because NAT not only hide theirs addresses / ports from each other, but also disallows every NATed client accepting sessions initiated from outside.
If A connects B directly, that would be a new session.

שיטות אחרות לחציית NAT הן וריאציות שונות על שתי השיטות שראינו – קרי, קינפוג סטטי של נתב ה-NAT, ושימוש בשרת מקשר. עם זאת, ישנה שיטה, שבה השרת רק יוצר את ה"היכרות הראשונית" בין המחשבים שמאחורי ה-NATs – ומשם והלאה הם מתקשרים ישירות, ולא דרך השרת. יתכן, שבפועל זה מסתדר כי השרת "מקנפג" את הקצוות או את נתב ה-NAT בהתאם:
http://www.mindcontrol.org/~hplus/nat-punch.html


38
Network Layer
4-39
IPv4 Header format
IPv4 addressing
Internet Control Message Protocol
IPv6
Outline

Network Layer
4-40
Network Layer
4-40
ICMP: internet control message protocol
Usage
Error reporting
Checking the network
Eg, echo (used by ping)
Layer “3.5“
ICMP msgs carried in IP datagrams
ICMP message 
Type 
Code 
Header & first 8 bytes of the IP datagram causing error
Type  Code  description
0        0         echo reply (ping)
3        0         dest. network unreachable
3        1         dest host unreachable
3        2         dest protocol unreachable
3        3         dest port unreachable
3        6         dest network unknown
3        7         dest host unknown
4        0         source quench (congestion
                     control - not used)
8        0         echo request (ping)
9        0         route advertisement
10      0         router discovery
11      0         TTL expired
12      0         bad IP header


Network Layer
4-41

error reporting: unreachable host, network, port, protocol
echo request/reply (used by ping)

40
Network Layer
4-41
Traceroute and ICMP
source sends a series of UDP segments to dest
first set has TTL =1
second set has TTL=2, etc.
unlikely port number
when nth set of datagrams  arrives to nth router:
router discards datagrams
and sends source ICMP messages (type 11, code 0)
ICMP messages includes name of router & IP address
when ICMP messages arrives, source records RTTs
stopping criteria:
UDP segment eventually arrives at destination host
destination returns ICMP “port unreachable” message (type 3, code 3)
source stops











3 probes
3 probes
3 probes









































Network Layer
4-42
Network Layer
4-42
IPv4 Header format
IPv4 addressing
Internet Control Message Protocol
IPv6
Outline

Network Layer
4-43
Network Layer
4-43
IPv6: motivation
IPv4’s 32-bit address space does not suffice. 
IPv4’s header size and format are too varying and complex  hard for speed processing at HW


IPv6 datagram format: 
fixed-length 40 byte header
no fragmentation allowed

Network Layer
4-44
Network Layer
4-44

IPv6 datagram format
priority:  identify priority among datagrams in flow
flow Label: identify datagrams in same “flow.” 
                    (concept of “flow” not well defined).
next header: identify upper layer protocol for data 









data
destination address
(128 bits)
source address
(128 bits)
payload len
next hdr
hop limit
flow label
pri
ver

32 bits

Network Layer
4-45

Next header – same as “protocol” in IPv4. Usually, it will be TCP / UDP.  However, it may be either merely “options” of IPv4 – that’s a way to have fast-processable-options field.
44
Network Layer
4-45
Other changes from IPv4
checksum: removed entirely to reduce processing time at each hop
options: allowed, but outside of header, indicated by “Next Header” field
ICMPv6: new version of ICMP
additional message types, e.g. “Packet Too Big”
multicast group management functions

Network Layer
4-46

ICMPv6 – contains inside the older IGMP.
45
Network Layer
4-46
Transition from IPv4 to IPv6
not all routers can be upgraded simultaneously
no “flag days”
how will network operate with mixed IPv4 and IPv6 routers? 
tunneling: IPv6 datagram carried as payload in IPv4 datagram among IPv4 routers
















IPv4 source, dest addr 
IPv4 header fields 



IPv4 datagram


IPv6 datagram



IPv4 payload 










UDP/TCP payload
IPv6 source dest addr
IPv6 header fields





Network Layer
4-47
Network Layer
4-47
Tunneling
physical view:

IPv4
IPv4







A
B

IPv6
IPv6





















E

IPv6
IPv6














F
C
D

logical view:
IPv4 tunnel 
connecting IPv6 routers
E

IPv6
IPv6














F
A
B

IPv6
IPv6















Network Layer
4-48
Network Layer
4-48

flow: X
src: A
dest: F


data

A-to-B:
IPv6



Flow: X
Src: A
Dest: F


data
src:B
dest: E

B-to-C:
IPv6 inside
IPv4


E-to-F:
IPv6


flow: X
src: A
dest: F


data

B-to-C:
IPv6 inside
IPv4



Flow: X
Src: A
Dest: F


data
src:B
dest: E
physical view:








A
B

IPv6
IPv6





















E

IPv6
IPv6














F
C
D

logical view:
IPv4 tunnel 
connecting IPv6 routers
E

IPv6
IPv6














F
A
B

IPv6
IPv6














Tunneling
IPv4
IPv4

Network Layer
4-49

שאלת סטודנט:
כשלמדנו על IP V6 וההתמודדות שלו עם העברת החבילות שלו דרך נתבים שלא תומכים בגרסה זו, הוסבר שהנתב עוטף את החבילה במעטפת של IP V4 ושולח אותו דרך הנתבים,
האם החבילה ממשיכה עד ליעדה בתור חבילה במעטפת של V4? או עד שהיא מגיעה לנתב הראשון שתומך בגרסת V6 והנתב מפרק את החבילה וממשיך לנתב אותה בתור V6? וגם איך הנתב יודע איזה כתובת איי פי לשים במעטפת ה V4 כאשר אין מקום ב header של ה V6 שמכיל את המידע הזה?
תשובה:
יש שיטות רבות, מגוונות ומורכבות ליצירת "מנהרה" לצורך העברת חבילת V6 בתוך V4; הן מפורטות ב-RFC 7059:
https://tools.ietf.org/html/rfc7059
בקצרה, את המנהרה יוצרים לרוב מראש. זה עשוי להיות באמצעות קינפוג ידני, או באמצעות Tunnel Setup Protocol – שבאמצעותו הנתבים שבשני קצוות המנהרה מסכימים ביניהם מראש על הקמת המנהרה. בשני המקרים, מאחר שהמנהרה מוקמת מראש ובמתכוון, ברור שיודעים מהי כתובת ה-V4 שיש לציין בסוף המנהרה; וכן ניתן לבחור ביעילות היכן בדיוק להוציא את חבילת ה-V6 מתוך המעטפת של ה-V4, ולהמשיך לנתב הלאה; בפרט, ניתן, למשל, להשתדל למנוע מצב גרוע שבו אותה חבילת V6 נעטפת בתוך V4 לחלק מסויים מהמסלול, יוצאת מהעטיפה, נכנסת שום למעטפת V4 לחלק נוסף מהמסלול וחוזר חלילה. 
בקורס לא נכנסנו לכל הפרטים הנ"ל, והסתפקנו בהיכרות ובתיאור כללי של מנגנון ה"מנהור", שהוא מושג מרכזי ברשתות מחשבים.

48
Network Layer
4-49
IPv6: adoption
Long (long!) time for deployment, use
20 years and counting
think of application-level changes in last 20 years: WWW, Facebook, …
Why?
Source:
 National Institute of Standards and Technology, US Government

Network Layer
4-50


49
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\הרצאות\מצגת-4.2--ניתוב\L4.2_Routing.pptx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
Introduction to data communications 
Lecturer: Itamar Cohen 

Chapter 4: the network layer
Part 3: Routing
Computer Networking: A Top Down Approach 
6th edition 
Jim Kurose, Keith Ross
Addison-Wesley
March 2012

Network Layer
4-1
 Based on slides by 
Dr. Yoram Haddad, JCT
J.F Kurose and K.W. Ross, all Rights Reserved
	     All material copyright 1996-2012



Network Layer
4-2


1
Network Layer
4-2
Routing algorithms
Routing protocols

Outline

Network Layer
4-3
Network Layer
4-3










































u

y

x

w

v

z
2
2
1
3
1
1
2
5
3
5
graph: G = (N,E)

N = set of routers = { u, v, w, x, y, z }

E = set of links ={ (u,v), (u,x), (v,x), (v,w), (x,w), (x,y), (w,y), (w,z), (y,z) }
Graph abstraction

Network Layer
4-4

aside: graph abstraction is useful in other network contexts, e.g., 
P2P, where N is set of peers and E is set of TCP connections

3
Network Layer
4-4
Graph abstraction: costs










































u

y

x

w

v

z
2
2
1
3
1
1
2
5
3
5
c(x,x’) = cost of link (x,x’)
      e.g., c(w,z) = 5

Cost may be
 Always 1
 Proportional to congestion, or to geographical distance
 Inversely proportional to BW
cost of path (x1, x2, x3,…, xp) = c(x1,x2) + c(x2,x3) + … + c(xp-1,xp)  
key question: what is the least-cost path between u and z ?
routing algorithm: algorithm that finds that least cost path

Network Layer
4-5
Network Layer
4-5
Routing algorithm classification
Q: global or decentralized information?
global:
all routers have complete topology, link cost info
“Link State” algorithms
decentralized: 
router knows only physically-connected neighbors, link costs to neighbors
“distance vector” algorithms
Q: static or dynamic?
static: 
routes change slowly

dynamic: 
routes change quickly
periodic update
in response to link cost changes

Network Layer
4-6
Network Layer
4-6
Routing algorithms
Link-state
Distance-vector
Hierarchical routing
Routing protocols

Outline

Network Layer
4-7
Network Layer
4-7
A Link-State Routing Algorithm
Dijkstra’s algorithm
Centralized
All nodes know whole net topology
“link state broadcast”
computes minimal paths from one node (‘source”) to all other nodes
iterative: after k iterations, know least cost path to k dest.’s
notation:
c(x,y): link cost from node x to y;  = ∞ if not direct neighbors
D(v): current value of cost of path from source to dest. v
p(v): predecessor node along path from source to v
N': set of nodes whose least cost path definitively known


Network Layer
4-8
Network Layer
4-8
Dijsktra’s Algorithm
1  Initialization: 
2    N' = {u} 
3    for all nodes v 
4      if v adjacent to u 
5          then D(v) = c(u,v) 
6      else D(v) = ∞ 
7 
8   Loop 
9     find w not in N' such that D(w) is a minimum 
10    add w to N' 
11    update D(v) for all v adjacent to w and not in N' : 
12       D(v) = min( D(v), D(w) + c(w,v) ) 
13    /* new cost to v is either old cost to v or known 
14     shortest path cost to w plus cost from w to v */ 
15  until all nodes in N' 

Edsger Wybe Dijkstra

Network Layer
4-9
Network Layer
4-9






w
3
4






v






x






u



5

3

7

4







y
8






z

2

7


9
Dijkstra’s algorithm: example
Step

N'
D(v)
p(v)
0
1
2
3
4
5
D(w)
p(w)
D(x)
p(x)
D(y)
p(y)
D(z)
p(z)


u





∞ 
∞ 
7,u
3,u
5,u
uw
∞ 
11,w 
6,w

5,u
14,x 
11,w 
6,w




uwx

uwxv
14,x 
10,v 

uwxvy
12,y 

notes:
construct shortest path tree by tracing predecessor nodes
ties can exist (can be broken arbitrarily)





uwxvyz

Network Layer
4-10
Network Layer
4-10
Dijkstra’s algorithm: example (2)
Step
0
1
2
3
4
5
N'
u
ux
uxy
uxyv
uxyvw
uxyvwz
D(v),p(v)
2,u
2,u
2,u
D(w),p(w)
5,u
4,x
3,y
3,y
D(x),p(x)
1,u
D(y),p(y)
∞
2,x
D(z),p(z)
∞ 
∞ 
4,y
4,y
4,y
















































u

y

x

w

v

z
2
2
1
3
1
1
2
5
3
5






Network Layer
4-11
Network Layer
4-11
Dijkstra’s algorithm: example (2) 




































u

y

x

w

v

z
resulting shortest-path tree from u:


v
x
y
w
z
(u,v)
(u,x)
(u,x)
(u,x)
(u,x)
destination
link
resulting forwarding table in u:

Network Layer
4-12
Network Layer
4-12
Dijkstra’s algorithm complexity
n nodes
each iteration: need to check all nodes, w, not in N
Naïve implementation: n(n+1)/2 comparisons: O(n2)
Optimized complexity: O(nlog(n))

Network Layer
4-13
Dijkstra’s algorithm: oscillations
e.g., when link cost equals amount of carried traffic








A






D






C






B
1



1+e
e
0

e

1

1


0
0
initially
4-13

Network Layer
4-14
Dijkstra’s algorithm: oscillations
e.g., when link cost equals amount of carried traffic








A






D






C






B
1



1+e
e
0

e

1

1


0
0
initially


4-14

Network Layer
4-15
Network Layer
4-15
Dijkstra’s algorithm: oscillations
e.g., when link cost equals amount of carried traffic








A






D






C






B
1



1+e
e
0

e

1

1


0
0
initially








A






D






C






B





given these costs,
find new routing….
resulting in new costs






2+e
0
0
0
1+e
1

Network Layer
4-16
Network Layer
4-16
Dijkstra’s algorithm: oscillations
e.g., when link cost equals amount of carried traffic








A






D






C






B
1



1+e
e
0

e

1

1


0
0
initially








A






D






C






B





given these costs,
find new routing….
resulting in new costs






2+e
0
0
0
1+e
1








A






D






C






B





given these costs,
find new routing….
resulting in new costs




0
2+e
1+e
1
0
0

Network Layer
4-17
Network Layer
4-17
Dijkstra’s algorithm: oscillations
e.g., when link cost equals amount of carried traffic








A






D






C






B
1



1+e
e
0

e

1

1


0
0
initially








A






D






C






B





given these costs,
find new routing….
resulting in new costs






2+e
0
0
0
1+e
1








A






D






C






B





given these costs,
find new routing….
resulting in new costs




0
2+e
1+e
1
0
0








A






D






C






B





given these costs,
find new routing….
resulting in new costs




2+e
0
0
0
1+e
1

Network Layer
4-18
Network Layer
4-18
Dijkstra’s algorithm: oscillations
e.g., when link cost equals amount of carried traffic
Mitigate this problem using
More sophisticated link costs
Async’ runs and updates 








A






D






C






B
1



1+e
e
0

e

1

1


0
0
initially








A






D






C






B





given these costs,
find new routing….
resulting in new costs






2+e
0
0
0
1+e
1








A






D






C






B





given these costs,
find new routing….
resulting in new costs




0
2+e
1+e
1
0
0








A






D






C






B





given these costs,
find new routing….
resulting in new costs




2+e
0
0
0
1+e
1

Network Layer
4-19
Network Layer
4-19
Routing algorithms
Link-state
Distance-vector
Hierarchical routing
Routing protocols

Outline

Network Layer
4-20
Network Layer
4-20
Distance vector algorithm 
Bellman-Ford equation (dynamic programming)

let
   dx(y) := cost of least-cost path from x to y
then
   dx(y) = min {c(x,v) + dv(y) }
   

v
cost to neighbor v
min taken over all neighbors v of x
cost from neighbor v to destination y




Network Layer
4-21
Network Layer
4-21
Bellman-Ford example 










































u

y

x

w

v

z
2
2
1
3
1
1
2
5
3
5
clearly, dv(z) = 5, dx(z) = 3, dw(z) = 3
du(z) = min { c(u,v) + dv(z),
                    c(u,x) + dx(z),
                    c(u,w) + dw(z) }
         = min {2 + 5,
                    1 + 3,
                    5 + 3}  = 4
node achieving minimum is next
hop in shortest path, used in forwarding table
B-F equation says:

Network Layer
4-22
Network Layer
4-22
Distance vector algorithm 
Dx(y) = estimate of least cost from x to y
x maintains  distance vector Dx = [Dx(y): y є N ]
node x:
knows cost to each neighbor v: c(x,v)
maintains its neighbors’ distance vectors. For each neighbor v, x maintains 
Dv = [Dv(y): y є N ]



Network Layer
4-23
Network Layer
4-23
key idea: 
from time-to-time, each node sends its own distance vector estimate to neighbors
when x receives new DV estimate from neighbor, it updates its own DV using B-F equation:
Dx(y) ← minv{c(x,v) + Dv(y)}  for each node y ∊ N
under minor, natural conditions, the estimate Dx(y) converges to the actual least cost dx(y) 
Distance vector algorithm 

Network Layer
4-24
Network Layer
4-24
iterative, asynchronous: each local iteration caused by: 
local link cost change 
DV update message from neighbor
distributed:
each node notifies neighbors only when its DV changes
neighbors then notify their neighbors if necessary

wait for (change in local link cost or msg from neighbor)

recompute estimates

if DV to any dest has changed, notify neighbors 




each node:
Distance vector algorithm 

Network Layer
4-25
Network Layer
4-25


x   y   z
x
y
z
0  2   7
∞
∞
∞
∞
∞
∞
from
cost to
from
from


x   y   z
x
y
z
0


x   y   z
x
y
z
∞
∞
∞
∞
∞
cost to


x   y   z
x
y
z
∞
∞
∞
7
1
0
cost to
∞
2   0   1
∞ ∞  ∞
2   0   1
7   1   0







time










x






z
1
2
7






y
node x
table




Dx(y) = min{c(x,y) + Dy(y), c(x,z) + Dz(y)} 
             = min{2+0 , 7+1} = 2

Dx(z) = min{c(x,y) + 
      Dy(z), c(x,z) + Dz(z)} 
= min{2+1 , 7+0} = 3

3
2 
node y
table
node z
table
cost to
from

Network Layer
4-26
Network Layer
4-26


x   y   z
x
y
z
0  2   3
from
cost to


x   y   z
x
y
z
0  2   7
from
cost to


x   y   z
x
y
z
0  2   3
from
cost to


x   y   z
x
y
z
0  2   3
from
cost to


x   y   z
x
y
z
0  2   7
from
cost to
2  0   1
7   1   0
2  0   1
3  1   0
2   0   1
3  1   0
2  0   1
3  1   0
2  0   1
3  1   0









time



x   y   z
x
y
z
0  2   7
∞
∞
∞
∞
∞
∞
from
cost to
from
from


x   y   z
x
y
z
0


x   y   z
x
y
z
∞
∞
∞
∞
∞
cost to


x   y   z
x
y
z
∞
∞
∞
7
1
0
cost to
∞
2   0   1
∞ ∞  ∞
2   0   1
7   1   0







time
node x
table




Dx(y) = min{c(x,y) + Dy(y), c(x,z) + Dz(y)} 
             = min{2+0 , 7+1} = 2

Dx(z) = min{c(x,y) + 
      Dy(z), c(x,z) + Dz(z)} 
= min{2+1 , 7+0} = 3

3
2 
node y
table
node z
table
cost to
from










x






z
1
2
7






y

Network Layer
4-27
Network Layer
4-27
Distance vector: count to infinity
link cost changes:
node detects local link cost change 
bad news travels slow
44 iterations before algorithm stabilizes: see good short film










x






z
1
4
50






y
60

poisoned reverse: 
If Z routes through Y to get to X :
Z tells Y its (Z’s) distance to X is infinite (so Y won’t route to X via Z)
will this completely solve count to infinity problem?

Network Layer
4-28

Three-node instability

4-28

Network Layer
4-29


Three-node instability

4-29

Network Layer
4-30

Network Layer
4-30
Routing algorithms
Link-state
Distance-vector
Hierarchical routing
Routing protocols

Outline

Network Layer
4-31
Network Layer
4-31
Scaling
Give autonomy to networks

Hierarchical routing - motivation

Network Layer
4-32
Network Layer
4-32
Aggregate routers into regions, “autonomous systems” (AS)
ASs number assigned by IANA
Routers in same AS run same routing protocol
“intra-AS” routing protocol
routers in different AS can run different intra-AS routing protocol
gateway routers, at the “edge” the AS, have links to routers in another AS
And therefore should run also a common inter-routing protocol
Hierarchical routing

Network Layer
4-33

Iana is run by icann. See 
http://icannwiki.com/Internet_Assigned_Numbers_Authority#IANA_vs_ICANN

32
Network Layer
4-33









3b






1d






3a






1c
















2a
AS3
AS1
AS2






1a






2c






2b






1b



Intra-AS
Routing 
algorithm

Inter-AS
Routing 
algorithm
Forwarding
table








3c















Interconnected ASes
forwarding table  configured by both intra- and inter-AS routing algorithm
intra-AS sets entries for internal dests
inter-AS & intra-AS sets entries for external dests 

Network Layer
4-34
Network Layer
4-34
Inter-AS tasks
suppose router in AS1 receives datagram destined outside of AS1:
router should forward packet to gateway router, but which one?
AS1 must:
learn which dests are reachable through AS2, which through AS3
propagate this reachability info to all routers in AS1
job of inter-AS routing!




AS3
AS2









3b






3c






3a

AS1












1c






1a






1d






1b






2a










2c






2b
other
networks

other
networks




Network Layer
4-35
Network Layer
4-35
Routing algorithms
Routing protocols
Intra - Autonomous System
Inter- Autonomous Systems

Outline

Network Layer
4-36
Network Layer
4-36
Intra-AS Routing
Also known as interior gateway protocols (IGP)
Most common intra-AS routing protocols:
Routing Information Protocol (simple, obsolete)
OSPF: Open Shortest Path First
IS-IS – similar to OSPF
IGRP: Interior Gateway Routing Protocol (Cisco proprietary)

Network Layer
4-37

IS-IS - Intermediate Sys – Intermediate Sys
36
Network Layer
4-37
OSPF (Open Shortest Path First)
“Open”: publicly available
uses link state algorithm 
LS packet dissemination
Topology map at each node
Route computation using Dijkstra’s algorithm
OSPF advertisement carries one entry per neighbor 
Advertisements flooded to entire AS
Carried in OSPF messages directly over IP (rather than TCP / UDP)
 OSPF should verify itself a reliable transfer

Network Layer
4-38
Network Layer
4-38
OSPF “advanced” features (not in RIP)
Security: all OSPF messages authenticated 
The packet’s content is hashed, using a secret key
Only a trusted source can generate the correct hash
For preventing re-play, the hashed content includes a seq #
Equal Cost Multi Path allowed 
Better load-balancing
For each link, multiple cost metrics for different ToS (e.g., satellite link cost set “low” for best effort ToS; high for real time ToS)
Multicast OSPF adds a multicast support
Hierarchical OSPF in large domains.


Network Layer
4-39
Network Layer
4-39

Hierarchical OSPF



















boundary router
backbone router
area 1
area 2
area 3
backbone
area
border
routers
internal
routers

















































































































Network Layer
4-40
Network Layer
4-40
Two-level hierarchy: local area, backbone.
link-state advertisements only in area 
Each internal node has 
detailed area topology
Partial (only shortest path direction) about other areas
Area border routers: “summarize” distances to nets in own area, advertise to other Area Border routers.
Backbone routers: run OSPF routing limited to backbone.
Boundary routers: connect to other AS’s.

Hierarchical OSPF

Network Layer
4-41

Area identifiers: each area is labeled by a 32-b area identifier, commonly written in a Dot-Decimal-Notation, same as IPv4 addresses.
However, this are NOT IP addresses!
The backbone area is commonly labeled 0.0.0.0
Other areas may be labeled by the IPv4 address of the main router.


40
4-41
Designated Routers
Naively, each router should advertise each update to all other routers in its area.
In order to reduce the traffic overhead, the routers select a designated router - a “master”, which maintains a complete topology table, and multicasts updates to all the other routers.
A Backup DR is elected as well, to be used in case that the DR fails.

Network Layer
4-42
Dissemination – 
פִּזּוּר, הֲפָצָה; זְרִיָּה
Network Layer
4-42
If the [In | E] gress traffic is limited, it is possible to calculate an optimal oblivious algorithm
And then, to use “reverse engineering” for calculating links’ weights, which would lead to this routing

Oblivious routing

Network Layer
4-43

יש שתי גישות עקריות לניתוב. 

גישה אחת היא ניתוב מסתגל. כלומר - אם מזהים עומס, משנים את הניתוב כדי לעקוף את הקישורים או הנתבים העמוסים - כמו WAYZ, לצורך העניין. בעוד שהשיטה הזו היא אינטואיטיבית, ובתאוריה יכולה להיות אופטימלית, בפועל יש לה חסרונות משמעותיים. זאת, משום שכדי ליישמה ביעילות צריך ידע מושלם על העומסים ודרישות התעבורה (מי שולח / מתכוון לשלוח כמה למי) בכל רגע, וכמובן, יכולת חישוב משמעותית, כדי לשנות את הניתוב בהתאם. בפועל, קשה מאוד למדוד את העומס על כל קישור וכל נתב בכל רגע, וקשה עוד יותר לחזות מה יקרה בעתיד. כמו כן, שינויי ניתוב תכופים גורמים לבעיות, כגון הגעה של חבילות שלא לפי הסדר; וכן, זה דורש מהנתבים / מבקר מרכזי לבצע חישובים מורכבים, דבר שמגדיל את זמן השהייה של כל חבילה בתוך הנתב, עד שיודעים איך לנתב אותה.

הפתרון לבעיות הנ"ל היא הגישה של ניתוב "חסר זיכרון" - oblivious. בניתוב זה, קובעים מראש מה יהיה מסלול הניתוב* בין כל שני צמתים, ולא משנים אותו, גם אם המסלול הזה נהיה עמוס. המקרה היחיד שבו משנים מסלול ניתוב, הוא כאשר יש שינוי בטופולוגיה של הרשת (נפילה של קישור / נתב, או הוספת קישור או נתב חדש). זה פותר את כל הבעיות של הניתוב המסתגל, שציינתי למעלה. כמובן, החיסרון הוא, שכך עלולים להיווצר עומסים רגעיים; אך גם על כך ניתן להתגבר, אם מקצים מראש את המשאבים (רוחב הפס של הקישורים) ובוחרים ניתובים באופן חכם. 
כמו כן, ניתוב חסר זיכרון מתאים רק לרשתות שמשתנות לעתים נדירות - למשל, רשת הליבה הקווית של בזק, שלא משתנה כל שתי דקות. זה לא מתאים לרשתות דינמיות, כגון רשתות אלחוטיות, שהטופולוגיה שלהן משתנה כל הזמן.


* בפועל זה לא חייב להיות "מסלול ניתוב" בין כל 2 נקודות, אלא אפשר לקבוע, למשל, ש-50% מהזרימות (flows) בין נקודות A ו-B יעברו במסלול א', ו-50% הנותרים במסלול ב'. כך מצד אחד מפזרים את העומס ברשת; ומצד שני, אין חשש של הגעת חבילות שלא לפי הסדר, כי מה שחשוב הוא רק סדר החבילות בתוך כל זרימה, ולא בין זרימות שונות.


42
43
Oblivious routing in a backbone network

Network Layer
4-44

Slide # doesn’t work!
44
Every node is an ingress/egress point
i












45


Network Layer
4-45
Routing algorithms
Routing protocols
Intra - Autonomous System
Inter- Autonomous Systems
Border Gateway Protocol

Outline

Network Layer
4-46
Network Layer
4-46
Internet inter-AS routing: BGP
BGP (Border Gateway Protocol): the de facto inter-domain routing protocol
“glue that holds the Internet together”
BGP provides each AS a means to:
eBGP: obtain subnet reachability information from neighboring ASs.
iBGP: propagate reachability information to all AS-internal routers.
determine “good” routes to other networks based on reachability information and policy.
allows subnet to advertise its existence to rest of Internet: “I am here”

Network Layer
4-47
Network Layer
4-47

BGP basics
when AS3 advertises a prefix to AS1:
AS3 promises it will forward datagrams towards that prefix
AS3 can aggregate prefixes in its advertisement





AS3
AS2









3b






3c






3a

AS1












1c






1a






1d






1b






2a










2c






2b
other
networks

other
networks

BGP session: two BGP routers (“peers”) exchange BGP messages:
advertising paths to different destination network prefixes (“path vector” protocol) 
exchanged over semi-permanent TCP connections

BGP 
message


Network Layer
4-48
Network Layer
4-48

BGP basics: distributing path information



AS3
AS2









3b






3a

AS1












1c






1a






1d






1b






2a










2c






2b
other
networks

other
networks


using eBGP session between 3a and 1c, AS3 sends prefix reachability info to AS1.
1c can then use iBGP do distribute new prefix info to all routers in AS1
1b can then re-advertise new reachability info to AS2 over 1b-to-2a eBGP session
when router learns of new prefix, it creates entry for prefix in its forwarding table.


eBGP session
iBGP session


Network Layer
4-49
Network Layer
4-49
Path attributes and BGP routes
advertised prefix includes BGP attributes 
prefix + attributes = “route”
two important attributes:
AS-PATH: contains ASs through which prefix advertisement has passed: e.g., AS 67, AS 17 
NEXT-HOP: indicates specific internal-AS router to next-hop AS. (may be multiple links from current AS to next-hop-AS)
gateway router receiving route advertisement uses import policy to accept/decline
e.g., never route through AS x
policy-based routing


Network Layer
4-50
Network Layer
4-50
BGP advertising policy – local preferences

A,B,C are provider networks
X,W,Y are customer (of provider networks)
X is dual-homed: attached to two networks
X does not want to route from B via X to C
.. so X will not advertise to B a route to C




A
B

C
 

W
 

X

Y








legend:
 

customer 
network:
 

provider
 
network
 



Network Layer
4-51
Network Layer
4-51
BGP advertising policy – local preferences
A advertises path AW  to B
B advertises path BAW to X 
Should B advertise path BAW to C?
No way! B gets no “revenue” for routing CBAW since neither W nor C are B’s customers 
B wants to force C to route to w via A
B wants to route only to/from its customers!




A
B

C
 

W
 

X

Y








legend:
 

customer 
network:
 

provider
 
network
 



Network Layer
4-52


51
Network Layer
4-52
BGP route selection
router may learn about more than 1 route to destination AS, selects route based on:
Local preferences (mainly economical): prefer a customer over a peer, and a peer over a provider.
Shortest AS-PATH 
Closest NEXT-HOP router: hot potato routing
(Additional criteria)

Network Layer
4-53
Putting it Altogether:
How Does an Entry Get Into a Router’s Forwarding Table?
Answer is complicated!

Ties together 
Hierarchical routing 
Intra-AS routing (eg OSPF) 
Inter-AS routing (BGP)

Provides nice overview of BGP!


Network Layer
4-54


53
















































































1
2
3

Dest IP

routing algorithms

local forwarding table
prefix
output port

138.16.64/22
124.12/16
212/8
…………..
3
2
4
…




















How does entry get in forwarding table?

entry
Assume prefix is
in another AS.

Network Layer
4-55


54
High-level overview
Router becomes aware of prefix
Router determines output port for prefix
Router enters prefix-port in forwarding table
How does entry get in forwarding table?

Network Layer
4-56


55
Router becomes aware of prefix





AS3
AS2









3b






3c






3a

AS1












1c






1a






1d






1b






2a










2c






2b
other
networks

other
networks


BGP 
message

BGP message contains “routes” 
“route” is a prefix and attributes: AS-PATH, NEXT-HOP,…
Example: route:
Prefix:138.16.64/22 ;  AS-PATH:  AS3  AS131 ;  NEXT-HOP:  201.44.13.125





Network Layer
4-57


56
Router may receive multiple routes





AS3
AS2









3b






3c






3a

AS1












1c






1a






1d






1b






2a










2c






2b
other
networks

other
networks


BGP 
message



Router may receive multiple routes for same prefix
Has to select one route

Network Layer
4-58


57
If both paths have the same local preferences: break ties by selecting shortest AS-PATH
Select best BGP route to prefix
Example:

AS2 AS17  to 138.16.64/22 
AS3 AS131 AS201 to 138.16.64/22 

What if there is still a tie? We’ll come back to that!




select

Network Layer
4-59


58
Find best intra-route to BGP route
Use selected route’s NEXT-HOP attribute 
Route’s NEXT-HOP attribute is the IP address of the router interface that begins the AS PATH. 
Example: 
AS-PATH:  AS2  AS17 ;  NEXT-HOP: 111.99.86.55
Router uses OSPF to find shortest path from 1c to 111.99.86.55





AS3
AS2









3b






3c






3a

AS1












1c






1a






1d






1b






2a










2c






2b
other
networks

other
networks



111.99.86.55


Network Layer
4-60


59
Hot Potato routing
Suppose there’re AS1 may route to AS 9, via peers:
Either via AS2, or via AS3
Both are 2-hops paths
Which path should 1d choose?
Answer: hop potato





AS3
AS2









3b






3c






3a

AS1












1c






1a






1d






1b






2a










2c






2b
other
networks

other
networks



111.99.86.55
Fig. taken from 101fundraising.org

Network Layer
4-61


60
Router identifies port for route
Identifies port along the OSPF shortest path
Adds prefix-port entry to its forwarding table:
(138.16.64/22 , port 4) 




AS3
AS2









3b






3c






3a

AS1












1c






1a






1d






1b






2a










2c






2b
other
networks

other
networks




router
port
1
2
3
4

Network Layer
4-62
Hot Potato Routing
Suppose there two or more best inter-routes.
Then choose route with closest NEXT-HOP
Use OSPF to determine which gateway is closest
Q: From 1c, chose AS3 AS131 or AS2 AS17?
 A: route AS3 AS201 since it is closer 




AS3
AS2









3b






3c






3a

AS1












1c






1a






1d






1b






2a










2c






2b
other
networks

other
networks






Network Layer
4-63
Summary
Router becomes aware of prefix
via BGP route advertisements from other routers
Determine router output port for prefix
Use BGP route selection to find best inter-AS route
Use OSPF to find best intra-AS route leading to best inter-AS route
Router identifies router port for that best route
Enter prefix-port entry in forwarding table
How does entry get in forwarding table?

Network Layer
4-64
Network Layer
4-64
Why different Intra-, Inter-AS routing ? 
policy: 
inter-AS: admin wants control over how its traffic routed, who routes through its net. 
intra-AS: single admin, so no policy decisions needed
scale:
Reduce table size and update traffic
performance: 
intra-AS: can focus on performance
inter-AS: policy may dominate over performance

Network Layer
4-65
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\הרצאות\מצגת-5--שכבת-הקו\L5_Layer2.pptx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
Introduction to data communications 
Lecturer: Itamar Cohen 

Chapter 5: The link layer
Computer Networking: A Top Down Approach 
6th edition 
Jim Kurose, Keith Ross
Addison-Wesley
March 2012

 Based on slides by J.F Kurose and K.W. Ross, all Rights Reserved	All material copyright 1996-2012



Data Link Layer
5-2


1
Link layer services
Error detection & correction
Multiple access protocols
Link layer addressing
Ethernet
Local Area Networks
Outline

Data Link Layer
5-3
Link Layer
5-3
Link layer: Motivation
Deliver a datagram transferred by different link types and protocols, e.g.
Ethernet on cables 
WiFi
Data center networks
transportation analogy:
Trip plan  L3.5’s routing (OSPF, BGP)
Selecting the correct turn in an interchange  L3’s forwarding
Comply the rules of each means of transportation (buy a ticket, sit in train / bus, drive at allowed speed)  L2.

Data Link Layer
5-4
3


Link Layer
5-4
Framing
Adding a header, and possibly a trailer
Reliable transfer, error detection / correction
 Saves E2E re-delivery
 Overhead
 Used mainly in links with high error rate, eg mobile
Node-to-node flow control
Medium access protocol
In the case of shared medium
Half- / full-duplex
Link layer services

Data Link Layer
5-5
Link Layer
5-5

Network Interface Card
Aka network adaptor
Implements link, physical layer
Implemented on HW 
However, interfaces higher layers via SW
Eg, interrupts for arrival of frames, error conditions etc.


controller
physical
transmission



cpu
memory


host 
bus 
(e.g., PCI)



network adapter
card





application
transport
network
link











link
physical











Data Link Layer
5-6
5


Link Layer
5-6
Link layer services
Error detection & correction
Multiple access protocols
Link layer addressing
Ethernet
Local Area Networks
Outline

Data Link Layer
5-7
Link Layer
5-7
Error detection
EDC= Error Detection and Correction bits (redundancy)
D    = Data protected by error checking, may include header fields 

 Error detection is never 100% reliable!
Trade-off: (undetected) error rate / overhead

otherwise

Data Link Layer
5-8
7


Link Layer
5-8
Parity checking
single bit parity: 
detect single bit errors
two-dimensional bit parity:
 detect and correct single bit errors


0
0

Data Link Layer
5-9
8


Link Layer
5-9
Cyclic Redundancy Check
More powerful then Checksum
view data bits, D, as a binary number
choose r+1 bit pattern (generator), G 
goal: choose r CRC bits, R, such that
 <D,R> exactly divisible by G (modulo 2) 
receiver knows G, divides <D,R> by G.  If non-zero remainder: error detected!
can detect all burst errors less than r+1 bits
widely used in practice (Ethernet, 802.11 WiFi, ATM)

Data Link Layer
5-10
9


Link Layer
5-10
CRC example
want:
D.2r XOR R = nG
equivalently:
D.2r = nG XOR R 
equivalently:  
    if we divide D.2r by G, want remainder R to satisfy:
R = remainder[           ]
D.2r
G


1001
101110000

1
01000

D

G

R

r = 3
011
.
.
.

Data Link Layer
5-11
10


Link Layer
5-11
Link layer services
Error detection & correction
Multiple access protocols
Channel partitioning 
TDM & FDM
Random access
Taking turn
Link layer addressing
Ethernet
Local Area Networks
Outline

Data Link Layer
5-12
Link Layer
5-12
Multiple access links, protocols
Two types of “links”:
point-to-point
Broadcast (shared wire or medium)

shared wire (e.g., 
cabled Ethernet)
shared RF
 (e.g., 802.11 WiFi)
shared RF
(satellite) 
humans at a
cocktail party 
(shared air, acoustical)





































































































































































Data Link Layer
5-13
12


Link Layer
5-13
Multiple access protocols
Single shared broadcast channel 
Multiple simultaneous transmissions: interference 
A node receives multiple signals simultaneously: collision 

multiple access protocol
Algorithm that determines when each node can transmit
Communication about channel sharing uses channel itself! 
no out-of-band channel for coordination

Data Link Layer
5-14
13


Link Layer
5-14
Link layer services
Error detection & correction
Multiple access protocols
Channel partitioning 
TDM & FDM
Random access
Taking turn
Link layer addressing
Ethernet
Local Area Networks
Outline

Data Link Layer
5-15
Link Layer
5-15
Time Division Multiple Access
Time is divided to fixed length slot (length = pkt trans time) 
Round Robin
 Unnecessary idle times (not work conservative) 







1
3
4




1
3
4











6-slot
frame




6-slot
frame




Data Link Layer
5-16
15


Link Layer
5-16
Similar to TDMA, but now the channel spectrum is divided into “slots” - frequency bands
 Similar drawback as TDMA: unnecessary unused channels















frequency bands
time








FDM cable
Frequency Division Multiple Access

Data Link Layer
5-17
16


Link Layer
5-17
Link layer services
Error detection & correction
Multiple access protocols
Channel partitioning 
Random access
Taking turn
Link layer addressing
Ethernet
Local Area Networks
Outline

Data Link Layer
5-18
Link Layer
5-18
Random access protocols
Nodes transmit at full channel rate R.
No a priori coordination among nodes
Two or more transmitting nodes ➜ “collision” Random access MAC protocol specifies: 
How to detect collisions
How to recover from collisions

Data Link Layer
5-19
18


Link Layer
5-19
Link layer services
Error detection & correction
Multiple access protocols
Channel partitioning 
Random access
Aloha
CSMA
Taking turn
Link layer addressing
Ethernet
Local Area Networks
Outline

Data Link Layer
5-20
Link Layer
5-20
Slotted ALOHA
Assumptions:
all frames same size
Time is slotted 
Slot: time to transmit a single frame
Nodes are synchronized
Nodes start to transmit only slot beginning 
If multiple nodes transmit simultaneously, all nodes detect collision
Operation:
Nodes try to transmit
if collision happen: node retransmits frame in each subsequent slot with prob. p until success

Data Link Layer
5-21
20


Link Layer
5-21
Pros:
Single active node can continuously transmit at full rate of channel
Highly decentralized: only slots in nodes need to be in sync
Simple

Cons:
When highly active: many collisions  wasting slots
When lowly active: many idle slots
Even when detecting collision at the beginning of the slot, necessary to wait (at least) until the next slot
Requires clock synchronization
Slotted ALOHA

1

1

1

1

2

3

2

2

3

3
node 1
node 2
node 3











C
C
C
S
S
S
E
E
E
Legend 
Collision
Empty
Successful

Data Link Layer
5-22
21


Link Layer
5-22
Probabilistic analysis shows that even when optimizing p (the retransmission probability), the expected maximal % of successfully used slots is 
	1/e =~ 37%
In Unslotted ALOHA, where nodes are not synchronized, the efficiency decreases to 
	1/2e =~ 18%

Slotted ALOHA efficiency

1

1

1

1

2

3

2

2

3

3
node 1
node 2
node 3











C
C
C
S
S
S
E
E
E

Data Link Layer
5-23
22


Link Layer
5-23
Link layer services
Error detection & correction
Multiple access protocols
Channel partitioning 
Random access
Aloha
CSMA
Taking turn
Link layer addressing
Ethernet
Local Area Networks
Outline

Data Link Layer
5-24
Link Layer
5-24
Carrier Sense Multiple Access
CSMA: listen before transmit:
if channel sensed idle: transmit entire frame
if channel sensed busy: defer transmission 

human analogy: don’t interrupt others!

Data Link Layer
5-25
24


Link Layer
5-25
CSMA collisions
collisions can still occur: propagation delay means  two nodes may not hear each other’s transmission
collision: entire packet transmission time wasted
collision probability determined by distance & propagation delay

spatial layout of nodes 















Data Link Layer
5-26
25


Link Layer
5-26
CSMA/CD (collision detection)

spatial layout of nodes 










Data Link Layer
5-27
26


Link Layer
5-27
CSMA/CD (Collision Detection)
CSMA/CD: carrier sensing, deferral as in CSMA
Collisions detected within short time
Colliding transmissions aborted, reducing channel wastage 
collision detection: 
Easy in wired LANs: measure signal strengths, compare transmitted, received signals
Difficult in wireless LANs: received signal strength overwhelmed by local transmission strength 
Human analogy: the polite conversationalist 

Data Link Layer
5-28
27


Link Layer
5-28
Ethernet CSMA/CD algorithm
1. if channel is idle, start transmission. 
2. If NIC detects a collision,  abort regular transmission and send jam signal // so that neighbors will recognize the collision too

4. After aborting, NIC enters binary (exponential) backoff: 
After m-th collision, choose K at random from {0,1,2, …, 2m-1}, and wait K delay units. Delay unit – time of transmitting 512 bits
Increment counter
Return to 1

Data Link Layer
5-29
28


Link Layer
5-29
CSMA/CD efficiency
Tprop = max prop delay between 2 nodes in LAN
ttrans = time to transmit max-size frame



Efficiency goes to 1 as…
tprop goes to 0
or ttrans goes to infinity
Better performance than ALOHA: and simple, cheap, decentralized!

Data Link Layer
5-30
29


Link Layer
5-30
Link layer services
Error detection & correction
Multiple access protocols
Channel partitioning 
Random access
Taking turn
Link layer addressing
Ethernet
Local Area Networks
Outline

Data Link Layer
5-31
Link Layer
5-31





polling: 
Master node “invites” slave nodes to transmit in turn
Typically used with “dumb” slave devices
Eg, Bluetooth’s Piconet
 Doesn’t waste time / slots for inactive users
 Polling overhead &   latency
 Single point of failure (master)
 Doesn’t scale well






master
slaves

poll

data

data
“Taking turns” MAC protocols

Data Link Layer
5-32
31


Link Layer
5-32
Link layer services
Error detection & correction
Multiple access protocols
Link layer addressing
Motivation
ARP
Ethernet
Local Area Networks
Outline

Data Link Layer
5-33
Link Layer
5-33
MAC adr: motivation
An L2 device doesn’t necessarily have a higher-level address 
E.g., Intra-net
Keep the layering model
Eg, so that the network layer could change its addressing (IPv4, IPv6, IPX…) without need to change in the link layer’s addressing
Algorithm Ofanan HaShachechan
Need to remember the previous hop
Not only the final source / target
E.g., for error correction, per-link flow control
Save interrupts to the link-layer protocol (IP) every time a packet is recognized on the (possibly shared) channel



Data Link Layer
5-34
33


Link Layer
5-34
MAC adr Vs. IP adr
Analogy
MAC address: like ID (01234567)
IP address: like postal address (Hertzl 17, J-m)
MAC addresses are flat: cannot use masks / Longest Prefix Matching


Data Link Layer
5-35
34


Link Layer
5-35
MAC address
Aka physical address, LAN address
LAN: Local Area Nework
Burned in the NIC (per-interface)
Originally designed to be permanent, like chassis #
Though, in fact, nowadays it’s reconfigurable
Most common (in Ethernet, WiFi): a 48-bits adr
e.g.: 1A-2F-BB-76-09-AD 
24-bits blocks are allocated to companies by IEEE
Institute of Electrical and Electronics Engineers
Used ‘locally”
Switches know only this address
Not IP address!

Data Link Layer
5-36
35


Link Layer
5-36
MAC addresses example
each adapter on LAN has unique LAN address
adapter





1A-2F-BB-76-09-AD


58-23-D7-FA-20-B0

0C-C4-11-6F-E3-98

71-65-F7-2B-08-53
   LAN
(wired or
wireless)










Data Link Layer
5-37
36


Link Layer
5-37
Link layer services
Error detection & correction
Multiple access protocols
Link layer addressing
Motivation
ARP
Ethernet
Local Area Networks
Outline

Data Link Layer
5-38
Link Layer
5-38
Address Resolution Protocol
ARP table
Mappings for some LAN nodes:
          < IP address; MAC address; TTL>
TTL (Time To Live): time after which address mapping will be forgotten (typically 20 min)
Question: how to determine
interface’s MAC address, knowing its IP address?






1A-2F-BB-76-09-AD


58-23-D7-FA-20-B0

0C-C4-11-6F-E3-98

71-65-F7-2B-08-53
   LAN
137.196.7.23

137.196.7.78


137.196.7.14

137.196.7.88









Data Link Layer
5-39
38


Link Layer
5-39
ARP protocol: same LAN
A wants to send datagram to B
B’s MAC address not in A’s ARP table.
A broadcasts ARP query packet, containing B's IP address 
dest MAC address = FF-FF-FF-FF-FF-FF
all nodes on LAN receive ARP query 
B receives ARP packet, replies to A with its (B's) MAC address
frame sent to A’s MAC address (unicast)

A caches (saves) IP-to-MAC address pair in its ARP table until times out 
soft state: information that times out (goes away) unless refreshed
ARP is “plug-and-play”:
nodes create their ARP tables without intervention from net administrator


Data Link Layer
5-40
39


ARP operation
3-40

Data Link Layer
5-41
Help for the animation:
The animation shows PING (Packet INternet Groper; grope – למשש, לגשש) – an administrative utility for checking the round-trip time to a given IP / URL. PING is performed by ICMP – Internet Control Message Protocol.
Link Layer
5-41
Scenario: A wanna send a datagram to B
A knows B’s IP address
A knows IP address of first hop router, R (how?)
A knows R’s MAC address (how?)
Addressing: routing to another LAN




R
1A-23-F9-CD-06-9B
222.222.222.220
111.111.111.110
E6-E9-00-17-BB-4B
CC-49-DE-D0-AB-7D
111.111.111.112
111.111.111.111
74-29-9C-E8-FF-55








A

222.222.222.222
49-BD-D2-C7-56-2A


222.222.222.221
88-B2-2F-54-1A-0F



B














Data Link Layer
5-42
41






R
1A-23-F9-CD-06-9B
222.222.222.220
111.111.111.110
E6-E9-00-17-BB-4B
CC-49-DE-D0-AB-7D
111.111.111.112
111.111.111.111
74-29-9C-E8-FF-55








A

222.222.222.222
49-BD-D2-C7-56-2A


222.222.222.221
88-B2-2F-54-1A-0F



B













Link Layer
5-42

Addressing: routing to another LAN




IP
Eth
Phy







IP src: 111.111.111.111
   IP dest: 222.222.222.222


A creates IP datagram with IP source A, destination B 
A creates link-layer frame with R's MAC address as dest, frame contains A-to-B IP datagram
MAC src: 74-29-9C-E8-FF-55
   MAC dest: E6-E9-00-17-BB-4B











Data Link Layer
5-43
42






R
1A-23-F9-CD-06-9B
222.222.222.220
111.111.111.110
E6-E9-00-17-BB-4B
CC-49-DE-D0-AB-7D
111.111.111.112
111.111.111.111
74-29-9C-E8-FF-55








A

222.222.222.222
49-BD-D2-C7-56-2A


222.222.222.221
88-B2-2F-54-1A-0F



B













Link Layer
5-43
Addressing: routing to another LAN




IP
Eth
Phy




frame sent from A to R







IP
Eth
Phy


frame received at R, datagram removed, passed up to IP
MAC src: 74-29-9C-E8-FF-55
   MAC dest: E6-E9-00-17-BB-4B










IP src: 111.111.111.111
   IP dest: 222.222.222.222


IP src: 111.111.111.111
   IP dest: 222.222.222.222

Data Link Layer
5-44
43






R
1A-23-F9-CD-06-9B
222.222.222.220
111.111.111.110
E6-E9-00-17-BB-4B
CC-49-DE-D0-AB-7D
111.111.111.112
111.111.111.111
74-29-9C-E8-FF-55








A

222.222.222.222
49-BD-D2-C7-56-2A


222.222.222.221
88-B2-2F-54-1A-0F



B













Link Layer
5-44

Addressing: routing to another LAN



IP src: 111.111.111.111
   IP dest: 222.222.222.222


R forwards datagram with IP source A, destination B 
R creates link-layer frame with B's MAC address as dest, frame contains A-to-B IP datagram
MAC src: 1A-23-F9-CD-06-9B
  MAC dest: 49-BD-D2-C7-56-2A















IP
Eth
Phy






IP
Eth
Phy





Data Link Layer
5-45
44






R
1A-23-F9-CD-06-9B
222.222.222.220
111.111.111.110
E6-E9-00-17-BB-4B
CC-49-DE-D0-AB-7D
111.111.111.112
111.111.111.111
74-29-9C-E8-FF-55








A

222.222.222.222
49-BD-D2-C7-56-2A


222.222.222.221
88-B2-2F-54-1A-0F



B













Link Layer
5-45
Addressing: routing to another LAN
R forwards datagram with IP source A, destination B 
R creates link-layer frame with B's MAC address as dest, frame contains A-to-B IP datagram




IP src: 111.111.111.111
   IP dest: 222.222.222.222


MAC src: 1A-23-F9-CD-06-9B
  MAC dest: 49-BD-D2-C7-56-2A















IP
Eth
Phy






IP
Eth
Phy





Data Link Layer
5-46
45






R
1A-23-F9-CD-06-9B
222.222.222.220
111.111.111.110
E6-E9-00-17-BB-4B
CC-49-DE-D0-AB-7D
111.111.111.112
111.111.111.111
74-29-9C-E8-FF-55








A

222.222.222.222
49-BD-D2-C7-56-2A


222.222.222.221
88-B2-2F-54-1A-0F



B













Link Layer
5-46
Addressing: routing to another LAN
R forwards datagram with IP source A, destination B 
R creates link-layer frame with B's MAC address as dest, frame contains A-to-B IP datagram




IP src: 111.111.111.111
   IP dest: 222.222.222.222


MAC src: 1A-23-F9-CD-06-9B
  MAC dest: 49-BD-D2-C7-56-2A















IP
Eth
Phy





Data Link Layer
5-47
46


Link Layer
5-47
Link layer services
Error detection & correction
Multiple access protocols
Link layer addressing
Motivation
ARP
ARP spoofing
Ethernet
Local Area Networks
Outline

Data Link Layer
5-48
ARP spoofing (aka poisoning)
ARP is NOT authenticated
ARP is stateless: a new reply overwrites an older cache entry, even it hasn’t been expired yet
Attacker can easily associate an IP adr to his MAC adr
Then, the attacker can easily intercept, modify or stop all the traffic
These attacks are limited to within the LAN

Data Link Layer
5-48

Data Link Layer
5-49
ARP Poisoning – Man-In-The-Middle 

Data Link Layer
5-50
ARP Poisoning – Man-In-The-Middle

Data Link Layer
5-51
ARP Poisoning – Man-In-The-Middle


Data Link Layer
5-52
Prevent Arp Poisoning
Static Arp Cache table
 Does not scale
Update ARP entries only after timeout / reply to request
Arpwatch: kind of “Wireshark” for ARP
checks for multiple physical addresses responding to a given IP address
May mail notifications to the network administrator
In IPv6: Neighbor Discovery Protocol replaces ICMP & ARP, and has SEND: SEcure Neighbor Discovery protocol



Data Link Layer
5-53
Attack on Behavior Analysis
Assume node disregards “abnormal” ARP activity, e.g.
If MAC x sends many ARP replies with IP y then node assumes that MAC x is not IP y
Attack:
Attacker spoofs gateway MAC (in Ethernet and ARP headers)
Attacker mimics “bad” behavior for gateway
Node disregards gateway
Attacker sends single reply with its own MAC and gateway IP
53

Data Link Layer
5-54

* Suggested in class by Alex Shulman and Kostya Zhuruev
53
Link Layer
5-54
Link layer services
Error detection & correction
Multiple access protocols
Link layer addressing
Ethernet
Local Area Networks
Outline

Data Link Layer
5-55
Link Layer
5-55
Ethernet
Most common wired LAN technology
Simple & cheap equipment
kept up with speed race



Data Link Layer
5-56
55


Link Layer
5-56
Topology
bus: (obsolete)
Single collision domain 
CSMA / CD
star: prevails today
Star’s center: 
In the past: hub (“dumb” repeater, collisions may happen) 
Today: switch: a “layer 2 router” (packet processing, forwarding)




switch








bus: coaxial cable
star



















Data Link Layer
5-57
56


Link Layer
5-57
Ethernet frame structure



preamble: 
7B with pattern 10101010 , followed by 
	1B Start Frame Delimiter - pattern 10101011 
 used for 
 Synchronize receiver, sender clock rates
 Recognize the beginning of a new packet


dest.
address
source
address
data (payload)
CRC
preamble
type

Data Link Layer
5-58
57


Link Layer
5-58
Ethernet frame: header
Src, dst MAC Adr: 6B each
The NIC accepts only frames with matching destination address, or with broadcast address 
Type: indicates higher layer protocol 
 Mostly IP, but maybe also Novell IPX, AppleTalk, ARP
 Type below 1500 indicated frame length
 Larger frames are indicated by the preamble
CRC: cyclic redundancy check at receiver
error detected: frame is dropped


dest.
address
source
address
data (payload)
CRC
preamble
type

Data Link Layer
5-59
58


Link Layer
5-59
Ethernet: unreliable, connectionless
Connectionless and unreliable 
No handshaking, no Acks
Just like UDP
In the past: unslotted CSMA/CD with binary backoff
Today: collision-free full-duplex

Data Link Layer
5-60
59


Link Layer
5-60
Link layer services
Error detection & correction
Multiple access protocols
Link layer addressing
Ethernet
Local Area Networks
Switch
VLAN

Outline

Data Link Layer
5-61
Link Layer
5-61
Switch
Role
Store & forward Ethernet frames
Transparent
hosts are unaware of presence of switches
Plug-and-play, self-learning
switches do not need to be configured
A pure L2 switch doesn’t have an ARP table! 
See the comments part



Data Link Layer
5-62
61

A pure L2 switch doesn’t have an ARP table! 
שלום
בסיטואציה בה יש host A שרוצה לשלוח הודעה לhost B. כל אחד מהם מחובר למתג, ושני המתגים מחוברים לאותו הנתב. וכמו כן כל טבלאות הARP ריקות.
A צריך לדעת מה כתובת הMAC של B. מה מהבאים הוא נכון?
1. A שולח בקשת ARP עם הMAC המבוקש (של B). ז"א שA שולח בקשת ARP. המתג מעביר אותה הלאה בbroadcast, ורק לאחר שA יודע את הMAC של B (או של הראוטר), הוא שולח את החבילה עצמה.
2. A שולח חבילה ללא MAC לswitch שאליו הוא מחובר. הswitch מבין שהוא אינו יודע את הMAC של היעד, ואז זה שולח בקשת ARP עם IP היעד, ורק לאחר שהוא מקבל את הMAC של B (או של הראוטר) הוא שולח את החבילה המלאה הלאה?
אני שואל מכיוון שראיתי כמה סתירות בכל מיני מקומות - מצד אחד בהרצאה כתוב "המתג אינו יודע היכן יושב B ולאיזה מוצא  עליו להוציא את הFRAME, ולכן שולח בקשת ARP בbroadcast.
מצד שני במבחן מ2010 ראינו תשובה שקיבלה את כל הנקודות שבה התלמיד לגמרי התעלם מפעולת הSWITCH, והHOST שלח את בקשת הARP

If I understand well the scenario, there is a router between A and B. Therefore, it's not accurate to say that A should know B's MAC address for sending him a message. It's more accurate to say, that A should know B's IP adr, and a respective MAC adr.
Therefore, A sends an ARP request with B's IP adr. The switch broadcasts this request. The router answers the ARP's request with its own MAC adr.
Then, A can already send the IP pkt to B. When this pkt reaches the switch, the switch sends it to the router. 
The various replies you mentioned are not exactly contradicting. The replies you saw are correct: if the switch doesn't know to whom it should destined any packet (no matter whether it's ARP, or any other pkt), it broadcasts it to all interfaces (beside the interface from which the pkt arrived). The student is also correct in that sense, that the switch doesn't "send" an APR request; in fact, a pure Layer2 switch doesn't even have an ARP table, but only a forwarding table, which maps MAC adr to interface (but not MAC-to-IP). See, eg, here and here.
https://supportforums.cisco.com/document/68421/overview-layer-2-switched-networks-and-communication
https://supportforums.cisco.com/discussion/10813786/arp-table-layer2-switch

The dest IP is part of the ARP's message. Note that ARP is in layer "2.5" – it's below layer 3, so actually this packet doesn't have an IP header (with fragmentation, offset etc.) at all.

Link Layer
5-62
Switch forwarding table
switch with six interfaces
(1,2,3,4,5,6)  
A
A’
B
B’
C
C’


















1
2
3
4
5
6
Each entry contains
< MAC address of host, output port, time stamp>
Similar to a routing table
The switch is an autodidact
Upon receiving of a frame,  learns the sender’ s location
And records it in its table


Data Link Layer
5-63
62


A
A’
B
B’
C
C’


















1
2
3
4
5
6
Link Layer
5-63
Switch: self-learning
switch learns which hosts can be reached through which interfaces
when frame received, switch “learns”  location of sender: incoming LAN segment
records sender/location pair in switch table

A A’




Source: A
Dest: A’

MAC addr   interface    TTL



Switch table 
(initially empty)
A
1
60

Data Link Layer
5-64
63


Link Layer
5-64
Switch: frame filtering/forwarding
when  frame received at switch:

1. record incoming link, MAC address of sending host
2. index switch table using MAC destination address
3. if entry found for destination
  then {
     if destination on segment from which frame arrived
       then drop frame
           else forward frame on interface indicated by entry
       }   
      else flood  /* forward on all interfaces except arriving
                          interface */
  

Data Link Layer
5-65
64


A
A’
B
B’
C
C’


















1
2
3
4
5
6
Link Layer
5-65
Self-learning, forwarding: example

A A’




Source: A
Dest: A’

MAC addr   interface    TTL



switch table 
(initially empty)
A
1
60

A A’



A A’



A A’



A A’



A A’


frame destination, A’, locaton unknown:
flood

A’ A


destination A location known:
A’
4
60
            selectively send 
on just one link

Data Link Layer
5-66
65


Link Layer
5-66
Interconnecting switches
switches can be connected together
Q: sending from A to G - how does S1 know to forward frame destined to F via S4 and S3?
A: self learning! (works exactly the same as in single-switch case!)



A
B
S1
C












D
E
F
S2
S4
S3
H
I
G







Data Link Layer
5-67
66


Link Layer
5-67
Self-learning - interconnected switches
Scenario: A sends frame to G, G responds to A



A
B
S1
C












D
E
F
S2
S4
S3
H
I
G







Data Link Layer
5-68
67


Link Layer
5-68
Institutional network








to external
network
router
IP subnet
mail server
web server



























































































Data Link Layer
5-69
68


Link Layer
5-69
Switches vs. routers
both have forwarding tables:
Routers: compute tables using routing algorithms, IP addresses
switches: learn forwarding table using flooding, learning, MAC addresses 





application
transport
network
link
physical






network
link
physical




link
physical
switch

datagram



application
transport
network
link
physical





frame


frame

frame

datagram











Data Link Layer
5-70
69


Link Layer
5-70
Switches ‘s and ’s
 Simple 
 Plug & Play
 Processing time is commonly short, because a switch processes only up to L2

 Necessitates topology of a spanning tree
So as to prevent routing loops
 Too large switched, L2 network, requires large ARP table
 Do not suggest the additional functionalities of nowadays router
NAT, DHCP, DNS, firewall, …


Data Link Layer
5-71
70


Link Layer
5-71
Link layer services
Error detection & correction
Multiple access protocols
Link layer addressing
Ethernet
Local Area Networks
Switch
VLAN

Outline

Data Link Layer
5-72


































































































Link Layer
5-72
VLANs: motivation
 In regular LAN, Broadcast traffic (ARP, DHCP, unknown location of destination MAC address) still crosses the entire LAN
 Security/privacy issues
 Inefficient: e.g., if every switch has 10 ports, we need 1 whole switch even for a 3-hosts LAN

Computer 
Science
Electrical
Engineering
Computer
Engineering

Data Link Layer
5-73

The hierarchical structure saves only group traffic. 

72
Link Layer
5-73
VLANs: motivation (Cont’)
In regular network, every time a user changes department, or when any other topological change is required, the network administrator should physically re-cable
Fig taken from 
www.clipartbest.com
Fig taken from 
cablesandchipsnationalpromotions.com

Data Link Layer
5-74
73

The Ethernet header contains optionally a VLAN tagVirtual Local Area Network allows 
Link Layer
5-74
type






2-byte Tag Protocol Identifier
 (value: 81-00), which should 
be unused by the Type field
Tag Control Information: 12 bit VLAN ID field, 
3 bit priority field (like IP TOS) 



Recomputed 
CRC 
802.1Q VLAN frame format
802.1 frame
802.1Q frame

dest.
address
source
address
data (payload)
CRC
preamble

dest.
address
source
address
preamble

data (payload)
CRC
type



Data Link Layer
5-75
Link Layer
5-75


VLANs
port-based VLAN: switch ports grouped (by switch management software) so that single physical switch ……

switch(es) supporting VLAN capabilities can be configured to define multiple virtual LANS over single physical LAN infrastructure.

Virtual Local 
Area Network






1












8
9
16
10
2
7



…



Electrical Engineering
(VLAN ports 1-8)
Computer Science
(VLAN ports 9-15)
15






…












Electrical Engineering
(VLAN ports 1-8)
…




1






8
2
7










9
16
10
15









…



Computer Science
(VLAN ports 9-16)
… operates as multiple virtual switches








Data Link Layer
5-76
Link Layer
5-76


Port-based VLAN






1












8
9
16
10
2
7



…



Electrical Engineering
(VLAN ports 1-8)
Computer Science
(VLAN ports 9-15)
15






…
traffic isolation: frames to/from ports 1-8 can only reach ports 1-8
Dynamic membership: ports can be dynamically assigned among VLANs
router
Forwarding between VLANS: done via routing (just as with separate switches)
In practice, vendors sell a combined switch + router





























Data Link Layer
5-77
 Link Layer
5-77






VLANS spanning multiple switches
trunk port: carries frames between VLANS defined over multiple physical switches
frames forwarded within VLAN between switches carry a VLAN ID
802.1Q protocol adds/removed additional header fields for frames forwarded between trunk ports







1












8
9
10
2
7



…



Electrical Engineering
(VLAN ports 1-8)
Computer Science
(VLAN ports 9-15)
15






…






2
7












3

Ports 2,3,5 belong to EE VLAN
Ports 4,6,7,8 belong to CS VLAN
5
4
6
8

16
1












Data Link Layer
5-78
Appendix: cross-layers issues
Data Center Networks
A day in the life of a web request



Data Link Layer
5-78

Data Link Layer
5-79
Link Layer
5-79
Data center networks 
~100K hosts, closely coupled, in close proximity:
e-business (e.g. Amazon)
content-servers (e.g., YouTube, Akamai, Apple, Microsoft)
search engines, data mining (e.g., Google)

challenges:
multiple applications, each serving massive numbers of clients 
Load balancing
Real time
North-south traffic


A data center of Microsoft

Data Link Layer
5-80
79


Link Layer
5-80










Server racks
TOR switches
Tier-1 switches
Tier-2 switches




























Load 
balancer




























Load 
balancer
















































































































































B
1
2
3
4
5
6
7
8




















A
C







Border router














Access router
Internet
Data center networks 



load balancer: application-layer routing
receives external client requests
directs workload within data center
returns results to external client (hiding data center internals from client)

Data Link Layer
5-81
Link Layer
5-81










Server racks
TOR switches
Tier-1 switches
Tier-2 switches




























Load 
balancer




























Load 
balancer
















































































































































B
1
2
3
4
5
6
7
8




















A
C







Border router














Access router
Internet
Data center netw.: load balancing 
The supermarket alg’
The power of two choices

Data Link Layer
5-82










Server racks
TOR switches
Tier-1 switches
Tier-2 switches




































































































































































1
2
3
4
5
6
7
8










Data center networks: fat tree 
Rich interconnection among switches, racks
increased throughput
increased reliability
Reduce topology to save energy [ElasticTree]
reversing the supermarket

Data Link Layer
5-83










Server racks
TOR switches
Tier-1 switches
Tier-2 switches




































































































































































1
2
3
4
5
6
7
8










Data center networks: dynamic conf’ 
Migration used for
Fixes / maintenance
Bringing VMs of the same client closer to each other
Shutting down parts of the network
Addressing may be based on pseudo-MAC addresses, possibly positional [PortLand]



Data Link Layer
5-84
Appendix: cross-layers issues
Data Center Networks
A day in the life of a web request



Data Link Layer
5-84

Data Link Layer
5-85
Link Layer
5-85
Synthesis: a day in the life of a web request
putting-it-all-together: synthesis!
goal: identify, review, understand protocols (at all layers) involved in seemingly simple scenario: requesting www page
scenario: student attaches laptop to campus network, requests/receives www.google.com 



Data Link Layer
5-86
Link Layer
5-86

A day in the life: scenario

























Comcast network 
68.80.0.0/13














































Google’s network 
64.233.160.0/19 

64.233.169.105
web server
DNS server







































school network 
68.80.2.0/24
web page



browser







































































































Data Link Layer
5-87





router
(runs DHCP)










































Link Layer
5-87
A day in the life… connecting to the Internet
connecting laptop needs to get its own IP address, addr of first-hop router, addr of DNS server: use DHCP



DHCP
UDP
IP
Eth
Phy





DHCP

DHCP



DHCP





DHCP









DHCP









DHCP
UDP
IP
Eth
Phy





DHCP



DHCP





DHCP









DHCP

DHCP
DHCP request encapsulated in UDP, encapsulated in IP, encapsulated in 802.3 Ethernet

Ethernet frame broadcast (dest: FFFFFFFFFFFF) on LAN, received at router running DHCP server
Ethernet demuxed to IP demuxed, UDP demuxed to DHCP 

Data Link Layer
5-88





router
(runs DHCP)










































Link Layer
5-88
DHCP server formulates DHCP ACK containing client’s IP address, IP address of first-hop router for client, name & IP address of DNS server



DHCP
UDP
IP
Eth
Phy





DHCP



DHCP





DHCP









DHCP









DHCP
UDP
IP
Eth
Phy





DHCP



DHCP





DHCP









DHCP

DHCP
encapsulation at DHCP server, frame forwarded (switch learning) through LAN, demultiplexing at client

Client now has IP address, knows name & addr of DNS 
server, IP address of its first-hop router
DHCP client receives DHCP ACK reply
A day in the life… connecting to the Internet

Data Link Layer
5-89





router
(runs DHCP)










































Link Layer
5-89
A day in the life… ARP (before DNS, before HTTP)
before sending HTTP request, need IP address of www.google.com:  DNS



DNS
UDP
IP
Eth
Phy





DNS

DNS



DNS





DNS query created, encapsulated in UDP, encapsulated in IP, encapsulated in Eth.  To send frame to router, need MAC address of router interface: ARP

ARP query broadcast, received by router, which replies with ARP reply giving MAC address of router interface
client now knows MAC address of first hop router, so can now send frame containing DNS query 




ARP query


Eth
Phy



ARP

ARP




ARP reply

Data Link Layer
5-90





router
(runs DHCP)










































Link Layer
5-90



DNS
UDP
IP
Eth
Phy





DNS

DNS



DNS





DNS









DNS







IP datagram containing DNS query forwarded via LAN switch from client to 1st hop router

IP datagram forwarded from campus network into comcast network, routed (tables created by RIP, OSPF, IS-IS and/or BGP routing protocols) to DNS server
demux’ed to DNS server
DNS server replies to client with IP address of www.google.com 
























Comcast network 
68.80.0.0/13













DNS server



















DNS
UDP
IP
Eth
Phy





DNS



DNS





DNS









DNS




























A day in the life… using DNS

Data Link Layer
5-91





router
(runs DHCP)










































Link Layer
5-91


A day in the life…TCP connection carrying HTTP


HTTP
TCP
IP
Eth
Phy





HTTP

to send HTTP request, client first opens TCP socket to web server

TCP SYN segment (step 1 in 3-way handshake) inter-domain routed to web server
TCP connection established!



















64.233.169.105
web server














SYN




SYN


SYN







SYN



TCP
IP
Eth
Phy








SYN


SYN







SYN





SYNACK







SYNACK


SYNACK




SYNACK







SYNACK


SYNACK







SYNACK
web server responds with TCP SYNACK (step 2 in 3-way handshake)









































Data Link Layer
5-92





router
(runs DHCP)










































Link Layer
5-92


A day in the life… HTTP request/reply 


HTTP
TCP
IP
Eth
Phy





HTTP

HTTP request sent into TCP socket
IP datagram containing HTTP request routed to www.google.com
IP datagram containing HTTP reply routed back to client



















64.233.169.105
web server







HTTP
TCP
IP
Eth
Phy




web server responds with HTTP reply (containing web page)

HTTP



HTTP





HTTP










HTTP







HTTP



HTTP





HTTP








HTTP

HTTP



HTTP





HTTP


HTTP








HTTP






web page finally (!) displayed









































Data Link Layer
5-93
Course conclusion
Appreciation
Higher degrees
Blood pipe 




Data Link Layer
5-93

Data Link Layer
5-94
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\חומר-עזר\פתרון-שאלות-הדוגמא---חלק-ראשון\‏‏Intro_Tests_example_19_part1_colored.docx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
hotma						 


הנחיות כלליות
לאורך המבחן נניח כי:
 k=1000,	 M=1,000,000,	 	 G=1,000,000,000.
מהירות ההתפשטות היא 2*10^8 mps. "סיבית"=bit.
גודל המידע המועבר (קובץ, חבילה וכו') נמדד ב-Bytes, KBytes (1000 בתים), וכן הלאה.
רוחב הפס מצויין ב-bps (=Bits per sec), kbps (=1000 bits per sec) וכן הלאה.
lg מציין נסמן log עם בסיס 2. למשל, 
A^b מציין .
בכל שאלה יש תשובה אחת נכונה.
השאלות, הנתונים והתשובות האפשריות משתנים אקראית בין נבחן לנבחן, ולכן ניסיון העתקה, מעבר להיותו עבירת משמעת, לא יאפשר לך לגלות את התשובה הנכונה.

בהצלחה!

תרה ביט היא אחראית ה-IT בחברת הייטק. משיקולי אבטחת מידע, לחברה יש שתי רשתות תקשורת:
רשת פ – שמשמשת רק לתקשורת פנים-ארגונית, ברדיוס של 500 מטר, בתוך אתר החברה בארץ.
רשת ח – שמשמשת לחיבור VPN (Virtual Private Network) עם אתר החברה בסן פרנסיסקו.
תרה קיבלה תקציב שמספיק לקנות לכל רשת נתבים מהירים, שזמני העיבוד שלהם קצרים יותר;  או כבלי תקשורת מהירים, שבהם קצב התפשטות המידע מהיר יותר (קרוב במיוחד למהירות האור). עליה להשתמש בתקציב כדי להקטין בשיעור ניכר ככל האפשר את ההשהיה של חבילה (End To End Delay). 
מה כדאי לתרה לעשות עם התקציב?
לקנות נתבים מהירים לרשת ח, וכבלים מהירים לרשת פ.
לקנות נתבים מהירים לרשת פ, וכבלים מהירים לרשת ח.
לקנות נתבים מהירים לשתי הרשתות.
לקנות כבלים מהירים לשתי הרשתות.

בעקבות הצלחתך המסחררת בקורס "מבוא לתקשורת נתונים" מונית למהנדס/ת הראשי/ת (CTO) של גוגל.
כדי לשפר את חוויית הלקוח, גוגל החליטה להקים רשת פרטית ונפרדת לכל אחד משלושת היישומים הפופולריים שבבעלותה: ג'ימייל, גוגל דרייב, ויוטיוב. בגלל אילוצים טכנולוגיים, עבור כל רשת יש שתי אפשרויות:
FAST: רשת עם השהייה של עד 10 ms מקצה לקצה, אך עם הסתברות מסויימת לאובדן חבילות.
SLOW: רשת עם השהייה של עד 1000 ms מקצה לקצה, אך ללא אובדן של אף חבילה.
באיזה סוג רשת תמליץ להשתמש עבור כל יישום?
FAST עבור יוטיוב וג'ימייל, SLOW עבור גוגל דרייב.
FAST עבור ג'ימייל וגוגל דרייב, SLOW עבור יוטיוב.
FAST עבור יוטיוב, SLOW עבור ג'ימייל וגוגל דרייב.
FAST עבור כל היישומים.
SLOW עבור כל היישומים.
מי אמר שנחלתי הצלחה מסחררת בקורס? אפילו בשאלה הזו בחרתי בתשובה הלא נכונה.

האתר של המחלקה להנדסת מערכות מידע מאוחסן בשרת (web server), שמחובר לאינטרנט בקצב 1Gbps. זמן התגובה של השרת הוא . 
המחלקה הקצתה תקציב לשם קיצור הזמן שלוקח למשתמש לגשת לדף הבית של המחלקה. התקציב מספיק לאחת משתי האפשרויות:
BW: לשפר את קצב החיבור לאינטרנט ל-10 Gbps.
Proc: לקצר את זמן התגובה של השרת ל- .
כדי לפשט, נניח כי גודל בקשת ה-HTTP, וכן גודל ה-headers למיניהם זניח; וכן כי התשובה של השרת כוללת תמיד את כל המידע הדרוש להעלאת דף הבית, ונכנסת תמיד בחבילה אחת. 
מהו הגודל המינימלי של תשובת השרת, שעבורו עדיף לבחור באפשרות BW?
1 kbit
10 kbit
1 Mbit
10 Mbit
אין מספיק נתונים כדי לחשב את התשובה.

A שולח ל-B חבילות מידע באמצעות קשר TCP. נתון כי הקשר מתחיל עם חלון בגודל 1MSS. הקשר מסתיים בפעם הראשונה שהוא מגיע ל-SSthresh. במהלך הקשר לא אובדות חבילות. נסמן בקיצור: SSthresh=S*MSS.
נתון כי לאורך כל הקשר S*MSS < rwnd.
מהי התפוקה של הקשר מ-A ל-B (ב-Bytes / sec) בזמן הנ"ל?
בערך 2*S*MSS / [lg (S) * RTT]
בערך 2*S*MSS / [S^0.5 * RTT]
בערך S*MSS /  RTT
בערך (S^2)*MSS /  RTT

קשר TCP נמצא במשך זמן רב במצב Congestion Avoidance. בנוסף, ידוע כי בכל פעם שגודל החלון מגיע ל-W, הסגמנט האחרון במשלוח אובד.
מנסים את השינוי הבא: בכל פעם שמגיע Ack  תקין, במקום להגדיל את החלון ב-MSS^2/cwnd, כנהוג ב-TCP הרגיל, מגדילים אותו ב-2*MSS^2/cwnd.
מהי ההשפעה של השינוי על שיעור החבילות שאובדות?
לאחר השינוי, שיעור החבילות שאובדות לא משתנה.
לאחר השינוי, שיעור החבילות שאובדות גדל בערך פי 2.
לאחר השינוי, שיעור החבילות שאובדות קטן בערך פי 2.
לאחר השינוי, שיעור החבילות שאובדות גדל בערך פי W/(W-1).


 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\חומר-עזר\פתרון-שאלות-הדוגמא---חלק-שני\‏‏Intro_Tests_example_19_part2_colored.docx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
לנתב בעל 3 כניסות ו-3 יציאות יש בכל כניסה תור, שיכול להכיל 100 חבילות. בכל מחזור מגיעה אל כל כניסה חבילה אחת לכל היותר. בכל מחזור הנתב יכול לשדר מכל יציאה חבילה אחת לכל היותר.
תזכורת: speedup=k פירושו שבכל מחזור כל תור כניסה יכול להוציא לכל היותר k חבילות; וכל תור מוצא יכול לקבל לכל היותר k חבילות. 
לנתב שלנו יש speedup=1.
סמן את ההיגד הנכון.
הנתב משמר עבודה.
הנתב אינו משמר עבודה, אך ניתן להפכו למשמר עבודה באמצעות העלאת ה-speedup ל-3.
הנתב אינו משמר עבודה, אך ניתן להפכו למשמר עבודה באמצעות שימוש ב-2 תורים וירטואליים Virtual Output) Queues) בכל כניסה.
הנתב לעולם אינו זורק חבילות.

תזכורת: "אוסילציות" הן קפיצות גדולות ופתאומיות בכמות התעבורה בקישורים מסויימים.
את שיטת LS (Link State) ניתן לממש באמצעות אלג' דייקסטרה. בשיטה זו כל נתב מכיר את כל הרשת, ושולח לשכניו עדכונים על הקישורים היוצאים ממנו. 
את שיטת DV (Distance Vector) ניתן לממש באמצעות אלג' בלמן-פורד. בשיטה זו, כל נתב מכיר רק את שכניו, ואת המסלולים המינימליים שהם מציעים. 
באיזו משתי השיטות הנ"ל קיים חשש לאוסילציות?
רק בשיטת LS.
רק בשיטת DV.
בשתי השיטות.
בשתי השיטות אין חשש לאוסילציות.


תזכורת: כפי שלמדנו בקורס, בפרוטוקול BGP, שרץ בין מערכות אוטונומיות (ASs) באינטרנט, בחירת המסלולים מתבצעת לפי סדר העדיפויות הבא:
ניתוב דרך לקוח עדיף על פני ניתוב דרך עמית; ניתוב דרך עמית עדיף על פני ניתוב דרך ספק.
מסלול שעובר במספר מינימלי של ASs.
המסלול הזול ביותר בתוך ה-AS.
המחיר בין נתב לנתב הוא תמיד גדול מאפס. מסלול שניתן לפרסם הוא תמיד באורך 1 לפחות.
באיזה מהמקרים הבאים מזימתה של רשת AS666 תצליח בוודאות? 
כאשר AS2 ו- AS666 שתיהן עמיתות של AS1.
כאשר AS2 ו- AS666 שתיהן לקוחות של AS1.
כאשר AS2 היא לקוחה של AS1, ואילו  AS666 היא עמיתה של של AS1.
אף תשובה אינה נכונה.

ברשת שבשרטוט, הנתב הימני מתפקד כ-Network Address Translator. המחשב שכתובתו 10.0.0.1 שולח חבילה מפורט מס' 10 שלו לפורט מס' 20 בשרת שכתובתו 222.2.2.2. השרת עונה למחשב הנ"ל.
נתון, כי טבלאות ה-ARP והניתוב מלאות – כלומר, המחשב, הנתבים והשרת כבר מכירים את כל כתובות ה-IP וה-MAC הנחוצות להם. טבלת ה-NAT של הנתב הימני ריקה.

מהם ערכי השדות של הודעות 1,2,3 מתוך התקשורת המתוארת בשאלה
א. 


נתונה הרשת בסרטוט.
מהי טבלת הניתוב של נתב B במצב כזה של הרשת ?
ג. 




נתון ערוץ תקשורת משותף, שרוחב הפס שלו הוא R.
במערכת ישנם U משתמשים. בכל רגע נתון, A מבין המשתמשים הם "פעילים", כלומר, מעוניינים לשדר על הערוץ. הגודל הממוצע של מידע שמשתמש פעיל מעוניין לשדר הוא L Bytes.
כדי למנוע התנגשויות, משתמשים בבקר מרכזי, שפועל באופן הבא:
1. בתחילת כל מחזור מתקיים סבב (Round Robin), שבו כל אחד מ-U המשתמשים שולח בתורו בקשה בגודל X Bytes, שמציינת מה גודל המידע שברצונו לשדר על הערוץ. 
2. הבקר המרכזי מעבד את הבקשות, ומקצה לכל משתמש פעיל זמן שידור המתאים בדיוק לגודל המידע שהמשתמש ביקש לשלוח. הזמן שלוקח שלב זה הוא זניח.
3. הבקר המרכזי מודיע לכל המשתמשים יחד, באמצעות הערוץ המשותף, מהם זמני השידור שהוקצו. הזמן הדרוש למשלוח המידע הזה הוא Tc . 
4. כל אחד מהמשתמשים שולח את המידע שלו בדיוק בזמן שהוקצה לו, והמחזור מסתיים.

1. תזכורת: תפוקה היא קצב המעבר של סיביות כלשהן שהמשתמשים משדרים. מהי התפוקה במערכת? 
R*(A*L+ U*X) / [A*L + U*X + R*Tc] 

2. תזכורת: Goodput הוא קצב המעבר של סיביות מידע. מהו ה-Goodput במערכת?
R*(A*L)/[A*L + U*X + R*Tc] 

3. תזכורת: נצילות (utilization) היא שיעור הזמן שבו עובר מידע בערוץ. מהי הנצילות של הערוץ?
 A*L / [A*L + U*X + R*Tc]


כיצד ניתן לחסוך בנייר כדי לצמצם את כריתת העצים?
א. להדפיס תמיד רק משני צדי הדף.
ב. אם מצאנו ליד המדפסת דפים מיותרים שהודפסו רק מצד אחד – להשתמש בהם.
ג. לצמצם את הפונט והפורמט כדי למעט את מספר הדפים בכל הדפסה, כפי שנעשה במבחן הזה.
ד. כל התשובות נכונות.



 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\חומר-עזר\שאלות-דוגמא-למבחן\Intro_Tests_example_19_part1_UNcolored.docx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
hotma						 


הנחיות כלליות
לאורך המבחן נניח כי:
 k=1000,	 M=1,000,000,	 	 G=1,000,000,000.
A^b מציין .
מהירות ההתפשטות היא 2*10^8 mbps. "סיבית"=bit.
רוחב הפס מצויין ב-bps (=Bits per sec), kbps (=1000 bits per sec) וכן הלאה.
lg מציין נסמן log עם בסיס 2. למשל, 
בכל שאלה יש תשובה אחת נכונה.
השאלות, הנתונים והתשובות האפשריות משתנים אקראית בין נבחן לנבחן, ולכן ניסיון העתקה, מעבר להיותו עבירת משמעת, לא יאפשר לך לגלות את התשובה הנכונה.

בהצלחה!

תרה ביט היא אחראית ה-IT בחברת הייטק. משיקולי אבטחת מידע, לחברה יש שתי רשתות תקשורת:
רשת פ – שמשמשת רק לתקשורת פנים-ארגונית, ברדיוס של 500 מטר, בתוך אתר החברה בארץ.
רשת ח – שמשמשת לחיבור VPN (Virtual Private Network) עם אתר החברה בסן פרנסיסקו.
תרה קיבלה תקציב שמספיק לקנות לכל רשת נתבים מהירים, שזמני העיבוד שלהם קצרים יותר;  או כבלי תקשורת מהירים, שבהם קצב התפשטות המידע מהיר יותר (קרוב במיוחד למהירות האור). עליה להשתמש בתקציב כדי להקטין בשיעור ניכר ככל האפשר את ההשהיה של חבילה (End To End Delay). 
מה כדאי לתרה לעשות עם התקציב?
לקנות נתבים מהירים לרשת ח, וכבלים מהירים לרשת פ.
לקנות נתבים מהירים לרשת פ, וכבלים מהירים לרשת ח.
לקנות נתבים מהירים לשתי הרשתות.
לקנות כבלים מהירים לשתי הרשתות.

בעקבות הצלחתך המסחררת בקורס "מבוא לתקשורת נתונים" מונית למהנדסת הראשית (CTO) של גוגל.
כדי לשפר את חוויית הלקוח, גוגל החליטה להקים רשת פרטית ונפרדת לכל אחד משלושת היישומים הפופולריים שבבעלותה: ג'ימייל, גוגל דרייב, ויוטיוב. בגלל אילוצים טכנולוגיים, עבור כל רשת יש שתי אפשרויות:
FAST: רשת עם השהייה של עד 10 ms מקצה לקצה, אך עם הסתברות מסויימת לאובדן חבילות.
SLOW: רשת עם השהייה של עד 1000 ms מקצה לקצה, אך ללא אובדן של אף חבילה.
באיזה סוג רשת תמליצי להשתמש עבור כל יישום?
FAST עבור יוטיוב וג'ימייל, SLOW עבור גוגל דרייב.
FAST עבור ג'ימייל וגוגל דרייב, SLOW עבור יוטיוב.
FAST עבור יוטיוב, SLOW עבור ג'ימייל וגוגל דרייב.
FAST עבור כל היישומים.
SLOW עבור כל היישומים.
מי אמר שנחלתי הצלחה מסחררת בקורס? אפילו בשאלה הזו בחרתי בתשובה הלא נכונה.



האתר של המחלקה להנדסת מערכות מידע מאוחסן בשרת (web server), שמחובר לאינטרנט בקצב 1Gbps. זמן התגובה של השרת הוא . 
המחלקה הקצתה תקציב לשם קיצור הזמן שלוקח למשתמש לגשת לדף הבית של המחלקה. התקציב מספיק לאחת משתי האפשרויות:
BW: לשפר את קצב החיבור לאינטרנט ל-10 Gbps.
Proc: לקצר את זמן התגובה של השרת ל- .
כדי לפשט, נניח כי גודל בקשת ה-HTTP, וכן גודל ה-headers למיניהם זניח; וכן כי התשובה של השרת כוללת תמיד את כל המידע הדרוש להעלאת דף הבית, ונכנסת תמיד בחבילה אחת. 
מהו הגודל המינימלי של תשובת השרת, שעבורו עדיף לבחור באפשרות BW?
1 kbit
10 kbit
1 Mbit
10 Mbit
אין מספיק נתונים כדי לחשב את התשובה.

A שולח ל-B חבילות מידע באמצעות קשר TCP. נתון כי הקשר מתחיל עם חלון בגודל 1MSS. הקשר מסתיים בפעם הראשונה שהוא מגיע ל-SSthresh. במהלך הקשר לא אובדות חבילות. נסמן בקיצור: SSthresh=S*MSS.
נתון כי לאורך כל הקשר S*MSS < rwnd.
מהי התפוקה של הקשר מ-A ל-B (ב-Bytes / sec) בזמן הנ"ל?
בערך 2*S*MSS / [lg (S) * RTT]
בערך 2*S*MSS / [S^0.5 * RTT]
בערך S*MSS /  RTT
בערך (S^2)*MSS /  RTT

קשר TCP נמצא במשך זמן רב במצב Congestion Avoidance. בנוסף, ידוע כי בכל פעם שגודל החלון מגיע ל-W, הסגמנט האחרון במשלוח אובד.
מנסים את השינוי הבא: בכל פעם שמגיע Ack  תקין, במקום להגדיל את החלון ב-MSS^2/cwnd, כנהוג ב-TCP הרגיל, מגדילים אותו ב-2*MSS^2/cwnd.
מהי ההשפעה של השינוי על שיעור החבילות שאובדות?
לאחר השינוי, שיעור החבילות שאובדות לא משתנה.
לאחר השינוי, שיעור החבילות שאובדות גדל בערך פי 2.
לאחר השינוי, שיעור החבילות שאובדות קטן בערך פי 2.
לאחר השינוי, שיעור החבילות שאובדות גדל בערך פי W/(W-1).

יוסף קנה מכונית. כיצד הצליח יוסף לחסוך אלפי שקלים בשנה, וגם לתרום לאיכות הסביבה?
העדיף מכונית קטנה יותר, ואולי אפילו עם גיר ידני. 
הוציא חפצים מיותרים מהמכונית.
הקפיד להדליק את המכונית רק אחרי שכולם חגורים, השמשות מנוגבות וכו', ולכבות אותה מיד בתום הנסיעה.
החליט, שהמכונית זה לא מזגן לקיץ או סאונה לחורף, והקפיד לכבות אותה בכל פעם שהוא עומד מסיבה כלשהי שלא ברמזור.
הפסיקה "לרנדל" ולחפש חניה במשך שעות רק כדי לחסוך 30 מטרים של הליכה ברגל, והתחילה לחנות בחניה הסבירה הראשונה שהיא מוצאת, עוד לפני היעד.הפסיקה "לרנדל" ולחפש חניה במשך שעות רק כדי לחסוך 30 מטרים של הליכה ברגל, והתחילה לחנות בחניה הסבירה הראשונה שהיא מוצאת, עוד לפני היעד. יוספה התחילה להגיע למקומות קרובים לבית ברגל, ולמקומות שאליהם יש תחבורה ציבורית סבירה – באוטובוס או ברכבת. 
הפסיק "לרנדל" ולחפש חניה במשך שעות רק כדי לחסוך הליכה של 30 מטרים, והתחיל לחנות בחניה הסבירה הראשונה שהוא מוצא, עוד לפני היעד.
התחיהתחיל להגיע למקומות קרובים לבית ברגל, באוטובוס וברכבת.
(בשאלה זו בלבד, כל התשובות נכונות).


 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\חומר-עזר\שאלות-דוגמא-נוספות-למבחן\‏‏Intro_Tests_example_19_part2_UNcolored.docx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
לנתב בעל 3 כניסות ו-3 יציאות יש בכל כניסה תור, שיכול להכיל 100 חבילות. בכל מחזור מגיעה אל כל כניסה חבילה אחת לכל היותר. בכל מחזור הנתב יכול לשדר מכל יציאה חבילה אחת לכל היותר.
תזכורת: speedup=k פירושו שבכל מחזור כל תור כניסה יכול להוציא לכל היותר k חבילות; וכל תור מוצא יכול לקבל לכל היותר k חבילות. 
לנתב שלנו יש speedup=1.
סמן את ההיגד הנכון.
הנתב משמר עבודה.
הנתב אינו משמר עבודה, אך ניתן להפכו למשמר עבודה באמצעות העלאת ה-speedup ל-3.
הנתב אינו משמר עבודה, אך ניתן להפכו למשמר עבודה באמצעות שימוש ב-2 תורים וירטואליים Virtual Output) Queues) בכל כניסה.
הנתב לעולם אינו זורק חבילות.

תזכורת: "אוסילציות" הן קפיצות גדולות ופתאומיות בתעבורה.
את שיטת LS (Link State) ניתן לממש באמצעות אלג' דייקסטרה. בשיטה זו כל נתב מכיר את כל הרשת, ושולח לשכניו עדכונים על הקישורים היוצאים ממנו. 
את שיטת DV (Distance Vector) ניתן לממש באמצעות אלג' בלמן-פורד. בשיטה זו, כל נתב מכיר רק את שכניו, ואת המסלולים המינימליים שהם מציעים. 
באיזו משתי השיטות הנ"ל קיים חשש לאוסילציות?
רק בשיטת LS.
רק בשיטת DV.
בשתי השיטות.
בשתי השיטות אין חשש לאוסילציות.


תזכורת: כפי שלמדנו בקורס, בפרוטוקול BGP, שרץ בין מערכות אוטונומיות (ASs) באינטרנט, בחירת המסלולים מתבצעת לפי סדר העדיפויות הבא:
ניתוב דרך לקוח עדיף על פני ניתוב דרך עמית; ניתוב דרך עמית עדיף על פני ניתוב דרך ספק.
מסלול שעובר במספר מינימלי של ASs.
המסלול הזול ביותר בתוך ה-AS.
המחיר בין נתב לנתב הוא תמיד גדול מאפס. מסלול שניתן לפרסם הוא תמיד באורך 1 לפחות.
באיזה מהמקרים הבאים מזימתה של רשת AS666 תצליח בוודאות? 
כאשר AS2 ו- AS666 שתיהן עמיתות של AS1.
כאשר AS2 ו- AS666 שתיהן לקוחות של AS1.
כאשר AS2 היא לקוחה של AS1, ואילו  AS666 היא עמיתה של של AS1.
אף תשובה אינה נכונה.




ברשת שבשרטוט, הנתב הימני מתפקד כ-Network Address Translator. המחשב שכתובתו 10.0.0.1 שולח חבילה מפורט מס' 10 שלו לפורט מס' 20 בשרת שכתובתו 222.2.2.2. השרת עונה למחשב הנ"ל.
נתון, כי טבלאות ה-ARP והניתוב מלאות – כלומר, המחשב, הנתבים והשרת כבר מכירים את כל כתובות ה-IP וה-MAC הנחוצות להם. טבלת ה-NAT של הנתב הימני ריקה.

מהם ערכי השדות של הודעות 1,2,3 מתוך התקשורת המתוארת בשאלה
א. 

ב. 

ג.

ד. 




נתונה הרשת בסרטוט.
מהי טבלת הניתוב של נתב B במצב כזה של הרשת ?
א. 
ב.
ג. 
ד.



נתון ערוץ תקשורת משותף, שרוחב הפס שלו הוא R.
במערכת ישנם U משתמשים. בכל רגע נתון, A מבין המשתמשים הם "פעילים", כלומר, מעוניינים לשדר על הערוץ. הגודל הממוצע של מידע שמשתמש פעיל מעוניין לשדר הוא L Bytes.
כדי למנוע התנגשויות, משתמשים בבקר מרכזי, שפועל באופן הבא:
1. בתחילת כל מחזור מתקיים סבב (Round Robin), שבו כל אחד מ-U המשתמשים שולח בתורו בקשה בגודל X Bytes, שמציינת מה גודל המידע שברצונו לשדר על הערוץ. 
2. הבקר המרכזי מעבד את הבקשות, ומקצה לכל משתמש פעיל זמן שידור המתאים בדיוק לגודל המידע שהמשתמש ביקש לשלוח. הזמן שלוקח שלב זה הוא זניח.
3. הבקר המרכזי מודיע לכל המשתמשים יחד, באמצעות הערוץ המשותף, מהם זמני השידור שהוקצו. הזמן הדרוש למשלוח המידע הזה הוא Tc . 
4. כל אחד מהמשתמשים שולח את המידע שלו בדיוק בזמן שהוקצה לו, והמחזור מסתיים.

1. תזכורת: תפוקה היא קצב המעבר של סיביות כלשהן שהמשתמשים משדרים. מהי התפוקה במערכת? 
דמיינו שיש כאן 4 אפשרויות...

2. תזכורת: Goodput הוא קצב המעבר של סיביות מידע. מהו ה-Goodput במערכת?
דמיינו שיש כאן 4 אפשרויות...

3. תזכורת: נצילות (utilization) היא שיעור הזמן שבו עובר מידע בערוץ. מהי הנצילות של הערוץ?
דמיינו שיש כאן 4 אפשרויות...

כיצד ניתן לחסוך בנייר כדי לצמצם את כריתת העצים?
א. להדפיס תמיד רק משני צדי הדף.
ב. אם מצאנו ליד המדפסת דפים מיותרים שהודפסו רק מצד אחד – להשתמש בהם.
ג. לצמצם את הפונט והפורמט כדי למעט את מספר הדפים בכל הדפסה, כפי שנעשה במבחן הזה.
ד. כל התשובות נכונות.




 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\מבוא\סילבוס\Syllabus_19.docx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>

372-1-3041 - מבוא לתקשורת נתונים - Introduction to Data Communications

מבנה הקורס:  הרצאה: 3, תרגיל 1, סה"כ: 4 ש"ש

נקודות זכות: 3.5

תאור הקורס: קורס יסוד במערכות תקשורת, המקנה היכרות עם מודל השכבות של הרשת, פרוטוקולי תקשורת מרכזיים, והאתגרים המרכזיים שעימם מתמודדים כיום בתעשייה ובמחקר.

מטרות הקורס: הקניית ידע בסיסי בתקשורת נתונים ורשתות מחשבים. ייסקרו מודלים בסיסיים של תקשורת מחשבים וטכנולוגיות תקשורת ויוצגו שימושי תקשורת ורשתות קיימות ואילוצי חומרה ותוכנה.

תנאי קדם:
37211021 – "מבוא להסתברות וסטטיסטיקה". 37211117 – "מערכות הפעלה". 37212501 – "מבנה מערכות מחשוב".

דרישות הקורס והרכב הציון:
תרגילי בית (חלקם תיאורטיים וחלקם מעבדות) – 25% מהציון הסופי. חובה להגיש את כל התרגילים – מי שלא מגיש תרגיל ללא אישור נכשל בקורס.
בחינה – 75% מהציון הסופי. ציון עובר בבחינה הוא תנאי למעבר הקורס.

רשימת קריאה (בבליוגרפיה):
Computer Networking: A Top-Down Approach, J. Kurose and K. Ross, Addison-Wesley, 5-th Edition, 2010 (ISBN: 9780131365483) Library: TK 5105.875 .I57K88 2010  



תכנית המפגשים:






 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגולים\תרגול-1---פתרון\תרגול-1---פיתרון.pdf </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
 
 2: רשת ברוחב פס של 1ל יתרגMbps  המכילהN  משתמשים. כל אחד מהמשתמשים משדר בקצב קבוע
 מהזמן. 02%כאשר הוא פעיל. כל משתמש פעיל רק  R=256Kbps)בת"ל( של 
 של משתמשים בהם ניתן לתמוך בו זמנית? Mמהו המס' המקסימלי  .א
 
𝐶
𝑅
=
2𝑀𝑏𝑝𝑠
256𝐾𝑏𝑝𝑠/𝑢𝑠𝑒𝑟
=
2048𝐾𝑏𝑝𝑠
256𝐾𝑏𝑝𝑠/𝑢𝑠𝑒𝑟
= 8 𝑢𝑠𝑒𝑟𝑠 
 מהי התפוקה הממוצעת? .ב
 20% ∗ (256𝐾𝑏𝑝𝑠 ∗ 8) = 20% ∗ 2𝑀𝑏𝑝𝑠 = 0.4𝑀𝑏𝑝𝑠 
 פעילים כעת? 02מתוך  8מה ההסתברות שבדיוק  .ג
 𝑃(𝑋 = 8) = (40
8
) ∗ 0.28 ∗ 0.832 = 0.156 
 מה ההסתברות שהדרישה עולה על קיבולת הערוץ? .ד
 𝑃(𝑋 > 8) = ∑ (40
𝑖
) ∗ 0.2𝑖 ∗ 0.8(40−𝑖)40𝑖=9 
 ה הממוצעת של הערוץ?מהי התפוק .ה
 ∑ (40
𝑖
) ∗ 0.2𝑖 ∗ 0.8(40−𝑖) ∗ 𝑅 ∗ 𝑖8𝑖=0 + ∑ (
40
𝑖
) ∗ 0.2𝑖 ∗ 0.8(40−𝑖) ∗ 𝐶40𝑖=9 = 1.75𝑀𝑏𝑝𝑠 
 
  4בתים משודרת בקצב של  022: הודעה שאורכה 0תרגילMbps  ק"מ. כמה זמן יעבור עד  0על קו שאורכו
 שההודעה תגיע ליעדה?
 Tproc = 0, Tqueue = 0 .א
 = Ttrans .ב
𝐿
𝑅
=
500[𝐵]
4[𝑀𝑏/𝑠𝑒𝑐]
=
(500∗8)[𝑏]
(4∗220)[𝑏/𝑠𝑒𝑐]
=
500∗8
4∗220
[𝑠𝑒𝑐] = 0.95[𝑚𝑠] 
 = Tprop .ג
𝑑
𝑠
=
2[𝐾𝑚]
2∗108[𝑚/𝑠𝑒𝑐]
=
2000[𝑚]
200000000[𝑚/𝑠𝑒𝑐]
= 0.00001[𝑠𝑒𝑐] = 0.01[𝑚𝑠] 
𝑇  .ד = 𝑇𝑡𝑟𝑎𝑛𝑠 + 𝑇𝑝𝑟𝑜𝑝 = 0.95[𝑚𝑠] + 0.01[𝑚𝑠] = 0.96[𝑚𝑠] 
 
  מחשבים 3תרגיל :A ו-B 2חבילה בגודל  מתחילים לשדרKB .כ"א 
 10MbpsR=2.5Mbps, RB=3Mbps, RAR=נתון: 
 10KmRC=1Km, DBR=2Km, DARD=נתון: 
 0.2msProcD=נתון: 
𝐴  .א → 𝑅 = 0 + 0 +
2𝐾𝐵
3𝑀𝑏𝑝𝑠
+
2𝐾𝑚
2∗108𝑚𝑝𝑠
=
16𝐾𝑏
(3∗1024)𝐾𝑏
𝑠𝑒𝑐 +
1
105
𝑠𝑒𝑐 = 5.208𝑚𝑠 + 0.01𝑚𝑠 
𝐵  .ב → 𝑅 = 0 + 0 +
2𝐾𝐵
2.5𝑀𝑏𝑝𝑠
+
1𝐾𝑚
2∗108𝑚𝑝𝑠
= 6.25𝑚𝑠 + 0.005𝑚𝑠 = 6.255𝑚𝑠 
𝑅(1)  .ג → 𝐶 = (5.218) + 0.2 + 0 +
16𝐾𝑏
10240𝐾𝑏
𝑠𝑒𝑐 +
10𝐾𝑚
2∗108𝑚𝑝𝑠
= 
 = 5.218 + 0.2 + 1.5625 + 0.05 = 𝟕. 𝟎𝟑𝟎𝟓𝒎𝒔 
𝑅(2) .ד → 𝐶 = (6.255) + 0.2 + [5.218 + 1.5625 + 0.2 − (6.255 + 0.2)] + 1.5625 + 0.05 
 = 6.255 + 0.2 + 0.5255 + 1.5625 + 0.2 = 𝟖. 𝟓𝟗𝟑𝒎𝒔 
  
 
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגולים\תרגול-10\Practice10.pptx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
 Introduction to Computer       Networks
Practice #10
Hasidi Netanel
Today:


 Link State.
 Distance Vector.






Application
Transport
Network
Link
Physical

Routing Algorithms
The purpose of a routing algorithm is to find a “good” path from source router to destination router. 
Need to consider also policy issues.
A global routing algorithm computes the least-cost path between a source and destination using complete, global knowledge about the network (such as link state).
In a decentralized routing algorithm, the calculation of the least-cost path is carried out in an iterative, distributed manner. (such as distance vector)




3

Link State
Is a global algorithm – every node has the net topology and link costs known to all nodes.
Computes least cost paths from one node (‘source”) to all other nodes.
Iterative: after k iterations, know least cost path to k destination.


כיצד מחשב האלגוריתם את המסלול הקל ביותר מקודקוד D (למשל) לכל שאר הצמתים ברשת?

ייצוג של הרשת כגרף. הקודקודים הם הראוטרים והצלעות זה המחיר במעבר
4

Distance Vector
Each node maintains a Vector which estimate the distances to all other nodes.
It’s Distributed - each node receives some information from one or more of its directly attached neighbors, performs a calculation, and then distributes the results of its calculation back to its neighbors.
It is iterative - the process continues on until no more information is exchanged between neighbors.
Is asynchronous in that it does not require all of the nodes to operate in lockstep with each other.
When a node x receives new DV estimate from neighbor, it updates its own DV using B-F equation: 



IF there was a change in the DV, the node send it’s new DV to it’s neighbors.
An iteration can also caused by local link cost change. 


Distribued- כל נתב מקבל אינפורמציה מכל השכנים הקרובים אליו, הוא מבצע חישוב ואז מחזיר את החישוב שלו לשכנים.
iterative- התהליך הוא איטרטיבי. ממשיכים בחישובים עד להתכנסות
5

Distance Vector



Initiation Stage:



6

Distance Vector



C and B send their DV, causing a DV update of node A.



7

Distance Vector



C send its DV to D and F, causing their DV update.



8

Distance Vector



After first iteration.



9

Distance Vector



After second iteration.

מדוע באיטרציה השנייה f "מכיר" את b ?

G שלח ל B וגרם לו להכיר את f, לפני האיטרציה הראשונה הוא לא הכיר אותו.
G שלח ל D וגרם לו להכיא את B, כך D מגלה ל F באיטרציה השניה על B
10

Distance Vector



מי שולח את הוקטור שלו בעקבות העדכון?
GNTF – Good News Travels Fast:
We decrease an edge and see that after 2 iterations distances converge.


גם A וגם C
11

Distance Vector



GNTF – Good News Travels Fast:
After second iteration.


לחפש בטבלאות שהשתנו רק את הצמתים ששלחו את הוקטור כאילו שהם גרמו לשינוי.
12

Distance Vector



GNTF – Good News Travels Fast:
After second iteration.



13

Distance Vector



BNTS– Bad News Travels Slow.
Known as Routing Loop Problem.



14

Distance Vector

BNTS– Bad News Travels Slow.
Can lead to Count to infinity problem - occurs when a node is removed from the network and the “gateway” to the removed node believes it can still reach it via a neighbor (who unknowingly is using himself as the access route). 




15

Distance Vector



BNTS– Bad News Travels Slow.
Solutions:
Split Horizon with Poisoned reverse:  If Z routes through Y to get to X: tells Y its (Z’s) distance to X is infinite (so Y won’t route to X via Z) . Doesn't always solve the count to infinity problem 
Defining Infinity (RIP defines 16 as an infinity) – when reaching to this number we can conclude that the node isn’t reachable.




כש-Z רוצה לשלוח הודעה ל-X דרך Y אז נגיד ל-Y שהמרחק בין Z ל-X הוא אינסוף. כך שבעצם נדאג ש-Y לא ינתב את ההודעה ל-X דרך Z.
16
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגולים\תרגול-11\Practice11.pptx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
 Introduction to Computer       Networks
Practice #11
Hasidi Netanel
Today:


 Link Layer Services.
 Link Layer Addressing.
 ARP.






Application
Transport
Network
Link
Physical

The Link Layer

Link - communication channel that connect adjacent nodes along communication path .
Link layer has responsibility of  transferring frames from one node to physically adjacent node over a link.
Link layer is implemented in a network adapter (NIC- Network Interface Card) as a combination of hardware, software and firmware.




3

Link Layer Services

Link Access.
Reliable Delivery. 
Flow Control. 
Error Detection.
Error Correction.
Half/Full Duplex.


(A services that repeat in transport layer, why?
We can ask this question in both directions).
Netanel Hasidi - למה השירותים חוזרים: 
למה לחזור כל פעם להתחלה אם העברה לא היתה אמינה (הרי בטרנספורט זה מ end to end)
למה אז צריך שוב ב4? מי אמר שכל פורטוקול ב2 מוודא העברה אמינה (למשל wifi לא מוודא)
בנוסף יתכנו איבודים בשכבת הרשת (עקב עומסים בנתבים למשל)! זה כבר עבר את שכבה 2
בנוסף שכבת התעבורה מסדרת את החיבלות לשכבה 5 – שירות שלא קיים בשכבה 2 וזה חלק מ העברה אמינה.

למה השירותים חוזרים: 
למה לחזור כל פעם להתחלה אם העברה לא היתה אמינה (הרי בטרנספורט זה מ end to end)
למה אז צריך שוב ב4? מי אמר שכל פורטוקול ב2 מוודא העברה אמינה (למשל wifi לא מוודא)
בנוסף יתכנו איבודים בשכבת הרשת (עקב עומסים בנתבים למשל)! זה כבר עבר את שכבה 2
בנוסף שכבת התעבורה מסדרת את החיבלות לשכבה 5 – שירות שלא קיים בשכבה 2 וזה חלק מ העברה אמינה.
Carrier Sense Multiple Access (או CSMA), הוא אלגוריתם אקראי שנועד להגדיר את אופן הגישה לשכבת הקו. לפני תחילת השידור מוודא האלגוריתם שערוץ התקשורת פנוי ואין תחנה אחרת שכבר משדרת באותו מתחם התנגשות. אם שתי תחנות מתחילות לשדר במקביל, האלגוריתם אינו מזהה כי קרתה התנגשות אלא מסתמך על מנגנוני בקרת השגיאות של שכבת התעבורה כדי לקבל את החבילות שנשלחו.


4

Link Layer Addressing

MAC Address – 48 bit address, burned in NIC (unique identifier assigned to network interfaces).
Portable address. Ex: 
Switch:
keeps a record of the MAC addresses of all the devices connected to it.
examine incoming frame’s MAC address, selectively forward frame to one or more outgoing links.
Transparent - hosts are unaware of presence of switches.
One Switch isn’t aware of other switches.
Plug & play - switches do not need to be configured  (self learning).



שומר על הרשומות של mac addresses שמחוברים אליו
הוא בוחן את המסגרות שמגיעות אליו ובוחר לאיזה פורט שלו לשלוח אותם
הוא שקוף, כלומר המשתמשים לא יודעים על קיומו של הסוויץ'.
לא אכפת להם מקיומם של סוויצ'ים אחרים
אין צורך לקנפג אותם, הם לומדים בעצמם. מתחילים מטבלה ריקה.
5

Link Layer Addressing


“Forward Table” for switches
Remember: switches are dumb.

Layer 2 switches (bridges) have a MAC address table that contains a MAC address and port number. Switches follow this simple algorithm for forwarding packets:
When a frame is received, the switch compares the SOURCE MAC address to the MAC address table. If the SOURCE is unknown, the switch adds it to the table along with the port number the packet was received on. In this way, the switch learns the MAC address and port of every transmitting device.
The switch then compares the DESTINATION MAC address with the table. If there is an entry, the switch forwards the frame out the associated port. If there is no entry, the switch sends the packet out all its ports, except the port that the frame was received on (Flooding).
Note that the switch does not learn the destination MAC until it receives a frame from that device.

6

Link Layer Addressing




7

ARP (Address Resolution Protocol)
Each host and Router has ARP Table which contains the mapping                                                .
 TTL (Time To Live) – the time the mapping will be forgotten (typically 20 min).
ARP tables are “plug & play”.
ARP Query – (“what is the MAC address of an IP a.b.c.d”?) 
 when node wants to send datagram to another node and it doesn’t know it’s destination MAC address, it sends Broadcast message with MAC address destination of all ‘F’. 
The other node replies with a unicast answer contains it’s MAC address.


Is used to map interface’s MAC addresses, knowing its IP address.
Remember: it’s not the hosts and routers that have link layer address, but rather their adapters (network interfaces), therefore a node can have multiple addresses.



8



נתונה הרשת הבאה, ונתון כי צומת A רוצה לפתוח התקשרות TCP עם WS (TCP 3 handshake).
כמה מסגרות ישודרו במהלך התהליך?
הנחות לסעיף א':
אין איבודים של חבילות.
זו התעבורה היחידה ברשת.
מחשב A יודע את כתובת ה IP של WS.
טבלאות ה ARP מלאות.
טבלאות המיתוג מלאות.
טבלאות הניתוב מלאות.
Q.


9



נתונה הרשת הבאה, ונתון כי צומת A רוצה לפתוח התקשרות TCP עם WS (TCP 3 handshake).
כמה מסגרות ישודרו במהלך התהליך?
הנחות לסעיף ב':
אין איבודים של חבילות.
זו התעבורה היחידה ברשת.
מחשב A יודע את כתובת ה IP של WS.
טבלאות ה ARP מלאות.
טבלאות המיתוג ריקות.
טבלאות הניתוב מלאות.
Q.


11



נתונה הרשת הבאה, ונתון כי צומת A רוצה לפתוח התקשרות TCP עם WS (TCP 3 handshake).
כמה מסגרות ישודרו במהלך התהליך?
הנחות לסעיף ג':
אין איבודים של חבילות.
זו התעבורה היחידה ברשת.
מחשב A יודע את כתובת ה IP של WS.
טבלאות ה ARP ריקות.
טבלאות המיתוג ריקות.
טבלאות הניתוב מלאות.
Q.


13



נתונה הרשת הבאה, ונתון כי צומת A רוצה לפתוח התקשרות TCP עם WS (TCP 3 handshake).
כמה מסגרות ישודרו במהלך התהליך?
הנחות לסעיף ד':
אין איבודים של חבילות.
זו התעבורה היחידה ברשת.
מחשב A לא יודע את כתובת ה IP של WS.
טבלאות ה ARP ריקות.
טבלאות המיתוג ריקות.
טבלאות הניתוב מלאות.
מחשב A יודע את ה URL של WS.
מחשב A יודע את ה IP של ה DNS.
Q.


15
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגולים\תרגול-12---פתרון\תרגול-12---פיתרון.pdf </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
Scanned by CamScanner
Scanned by CamScanner
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגולים\תרגול-12\Practice12.pptx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
 Introduction to Computer       Networks
Practice #12
Hasidi Netanel
Today:


 MAC Protocols.






Application
Transport
Network
Link
Physical



MAC (Multiple Access Protocols)
nodes are capable of transmitting frames at the same time.
When this happens, all of the nodes receive multiple frames at the same time, which cause the frames to collide.
Collide messages can’t be interpreted correctly at the receivers.
Therefore all frames involved in the collision are lost and the channel is wasted.
MAC responsibility is to ensure useful work of the channel, which done through coordination of the transmissions of the active nodes.
Human analogy: 
“Give everyone a chance to speak.”
“Don’t speak until you are spoken to.”
“Don’t monopolize the conversation.”
“Don’t interrupt when someone is speaking.”
“Don’t fall asleep when someone is talking.”

פרוטוקול אשר מאפשר למספר לקוחות לגשת לערוץ תקשורת משותף מכונה פרוטוקול גישה מרובה.
= כאשר לתחנה יש מידע לשדר, התחנה תשדר על כל רוחב הפס. 
= כאשר שתי תחנות או יותר משדרות בו זמנית יש התנגשות
כשיש התנגשות- כל המידע הולך לאיבוד


4

Random Access Protocols
A transmitting node always transmits at full rate.
When there is a collision, each node involved in the collision retransmits (not necessarily right away) its frame until its frame gets through without collision.


Pure ALOHA
Unslotted, no synchronization, everyone can transmit whenever it wants.
Collision probability increase.
If no collision  node can send new frame in the next slot.
If collision  node retransmits the frame immediately (with prob. P) or wait time = 1 frame 		            transmission time (with prob. 1-P) and so on.

כאשר לתחנה יש מידע לשדר, התחנה תשדר על כל רוחב הפס. 
כשיש התנגשות כל node שמעורב בהתנגשות שולח שוב (לא בהכרח בחריץ הבא) עד שהמסגרת תגיע בסוף ליעדה
- אין חריצי זמן, כל אחד יכול לשדר מתי שהוא רוצה. ככה יש הסתברות גבוהה יותר להתנגשויות.

-
5

Random Access Protocols
A transmitting node always transmits at full rate.
When there is a collision, each node involved in the collision retransmits (not necessarily right away) its frame until its frame gets through without collision.


Slotted ALOHA
Time divided into slots (assume all frames consist exactly L bits).
Every node can transmit at each slot but only at the beginning of the slot.
If no collision  node can send new frame in the next slot.
If collision  node retransmits the frame in the next slot (with prob. P).

- הגדרה של חריצים 
הרעיון הכללי מאחורי ALOHA הוא פשוט: כל משתמש יכול לשדר על הערוץ מתי שהוא חפץ. במידה ויש התנגשות, המסגרות ששודרו נהרסו ויש לשדרם שנית במועד מאוחר יותר. מועד השידור החוזר נקבע בצורה אקראית כדי למנוע התנגשויות חוזרות. התנגשויות ניתנות לגילוי לאחר השידור, מאחר שכל התחנות מאזינות אחת לשנייה. בנוסף, מניחים שהערוץ נטול רעשים, כלומר נפילת חבילה מתרחשת רק בעקבות התנגשות עם חבילה אחרת.
עקב סנכרון זה נמנעות התנגשויות רבות ותפוקת הערוץ עולה משמעותית ממה שראינו ב-ALOHA הקלאסי, כי עכשיו הודעה שמגיעה לשידור תחכה עד להגעה לחריץ הבא ולא תתנגש בהודעות המשודרות בחריץ הנוכחי.
6

CSMA (Carrier Sense Multiple Access)



Human analogy: “don’t interrupt others ! “.
Before transmitting, we check if the channel is empty.
Even if we can’t sense transmission it doesn’t mean there is no transmission ! 
Consider A starts transmit at time t0.
Consider B starts transmit at time t0 + Tprop – Epsilon.
Only at time t0 + Tprop, B can sense the transmission of A.
Distance & propagation delay play role in the collision probability.
Wait until there is data to send.
Sense the channel:
If the channel is busy, wait random time and go back to 2.
If the channel is clear  start transmitting.
If there wasn’t collision  back to 1.
If there was collision  draw random time and go back to 2.


• שיפור לפרוטוקול Aloha הישן כדי למזער את מספר ההתנגשויות. 
שידור מסגרות רק לאחר וידוי שהערוץ אינו בשימוש. • במידה והערוץ בשימוש התחנה תמתין לשקט כדי לשדר
התחנה מגרילה פרק זמן אקראי, ורק אחריו מקשיבה שוב
7
CSMA (Carrier Sense Multiple Access)




8

CSMA/CD (Collision Detection)

If we know that there was a collision we don’t need to continue the transmission (packet in any case goes to “garbage”). 
Someone else talking  stop talking !
Wait until there is data to send.
Sense the channel:
If the channel is busy, wait random time and go back to 2.
If the channel is clear  start transmitting.
If there wasn’t collision  back to 1.
If there was collision  Stop transmission.
			    Send Jam Signal (48 bit).
			    Wait random time and go back to 2.


This can be likened to what happens at a dinner party, where all the guests talk to each other through a common medium (the air). Before speaking, each guest politely waits for the current speaker to finish. If two guests start speaking at the same time, both stop and wait for short, random periods of time (in Ethernet, this time is measured in microseconds). The hope is that by each choosing a random period of time, both guests will not choose the same time to try to speak again, thus avoiding another collision.
9

Binary Exponential Backoff
What is the time each node need to wait until trying to transmit the frame again?
A node chooses the value of K at a random from the set {0,1,2,…,2^n -1}, where n is the number of the collision.
Wait Time = K * T , where T is the time it requires to send 512 bits.
So for n = 1 we get {0,1}
	n = 2 we get {0,1,2,3}
             n = 3 we get {0,1,2,3,4,5,6,7} and so on.
The limit is n = 10.
In this technique we get less chance to collision again when there were a lot of collisions before (we draw a number from bigger set as n grows !).


10


Q.1
נתונים שלושה צמתים בערוץ בו משתמשים בפרוטוקול slotted ALOHA. בהנחה וכל הצמתים רוצים לשדר בכל עת ו p היא ההסתברות שצומת תשדר בכל slot שהוא:

א. מה ההסתברות שצומת כלשהי תוכל לשדר בהצלחה פאקט?
ב. מה הefficiency המקסימלי במקרה כזה?


11



Q.2


12



Q.2
N=2


13
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגולים\תרגול-1\Practice1_.pptx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
 Introduction to Computer       Networks
Practice #1
Hasidi Netanel
What is the Objective of Networking?




 Enable communication between applications on different computers. 
 Two computers are said to be interconnected if they are able to                    exchange information.



The Internet is a collection of interconnected networks.


End systems are connected together by a network of communication links.


End systems access the internet thorough ISPs.




2
2 ways to share:
Circuit Switching

All resources (e.g. communication links) needed by call dedicated to that call for duration


A call has three phases:
	1. Establish circuit from end-to-end (“dialing”).
	2. Communicate.
	3. Close circuit (“tear down”).





“Wasteful” – dedicated circuits are idle during silent periods.  


It’s the method used by telephone network.


Packet Switching
Used in the Internet
Data is sent in Packets (header contains control info, e.g., source and destination addresses)



Per-packet routing
At each node the entire packet is received, stored, and then forwarded (store-and-forward)
Packets in a flow may not follow the same path
No resources are allocated 
Header
Data
Queuing and loos:
if arrival rate (in bits) to links exceeds transmission rate of link for a period of time:
      - packet will queue, wait to be transmitted on link.
      - packets can be dropped (lost) if memory (buffer) fills up. 



4
Differences Between Circuit & Packet Switching
Circuit-switching	Packet-Switching
Guaranteed capacity	No guarantees (best effort)
Capacity is wasted if data is bursty	More efficient
Before sending data establishes a path	Send data immediately
All data in a single flow follow one path	Different packets might follow different paths
No reordering; constant delay; no pkt drops	Packets may be reordered, delayed, or dropped
Q1
256kbps
Q1
Types of Delay
Processing Delay – the time to examine the packet and determine where to direct it.
Queuing Delay- the time that packet can wait if the traffic is heavy and other packets are also waiting to be transmitted.
Transmission Delay- the amount of time it requires to push all the packet’s bits into the link.
  depends on the Bandwidth (R) and      the length of the packet (L)
  

Types of Delay
Propagation Delay- the time since all the bits pushed into the link till all the packet propagate to the end of the link.
  depend on the physical medium of the link (fiber optics, twisted pair..) and on its range.



Q2
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגולים\תרגול-2\Practice2_.pptx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
 Introduction to Computer       Networks
Practice #2
Hasidi Netanel
Q3
Why layering?
We use the concept of layers in our daily life. 
 let us consider two friends who communicate through postal mail. The process of sending a letter to a friend would be complex if there were no services available from the post office. 

change of implementation of layer’s service transparent to rest of system.
Using explicit structure allows identification & relationship of complex system’s pieces.
A protocol is an agreement between the communicating parties on how communication is to proceed.


Protocols are set of rules.
A protocol defines the format and the order of messages exchanged between two or more communicating entities as well as the actions taken on the transmission and/or receipt of a message or other event.



Questions a protocol can answer:
   1. What do you want to do? (Application).
   2. Where are you going? (Addressing).
   3. How do you get there? (Media types).
   4. Did you get there? (Acknowledgments, Error checking).



Protocols
To reduce their design complexity, most networks are organized as a stack of layers or levels, each one built upon the one below it.
The purpose of each layer is to offer certain services to the higher layers, shielding those layers from the details of how the offered services are actually implemented.


Protocol Layering
Encapsulation
	the process of each layer at the sending computer adding its own header information, in the form of meta-data to the actual payload (the data from the layer above). Ex: the network layer inserts a header with source and destination IPs.
The Application Layer
Responsibility:
Enables users to access the network.
Providing user interfaces and services.
Providing understandable language between two applications on multiple end systems.

Issues:
appropriate selection of “type of service”.
Data encryption, conversion and compression.
Authentication. 

Responsibilities:
provides  virtual end-to-end links between peer processes- delivering messages from one process to another.

Issues:
error detection.
reliable communication.
packets reordering.
end-to-end flow control.


The Transport Layer
User - Error control
GOAL: message will reach destination despite packet loss, corruption and duplication
ACTIONS: retransmit lost packets; detect, discard, and retransmit corrupted packets; detect and discard duplicated packets
User - Multiplexes multiple applications to the same end-to-end connection
adds an application-specific identifier (port number) so that receiving end-system can hand in incoming packet to the correct application
User - Flow control
match transmission rate to rate currently sustainable on the path to destination, and at the destination itself
Responsibilities:
Pass packets from one local Network to another- from the source host to the destination host.
fragmentation & reassembly
translation between different network types.

Issues:
path selection between end-systems (routing).
Error reporting (status messages).
The Network Layer
The Data Link Layer 

Responsibility:
Connect machines on the same networks.
Framing (dividing data into chunks) and moving it from one hop (node) to another.
Controls how data is placed into the media and is received from the media- who can transmit, when and for how long.

Issues:
Reliable Delivery
Flow Control
Error Detection
Error Correction
Half/Full Duplex

10110110101

01100010011

10110000001





Responsibility:
Encode binary digits into signals and transmit it over a communication channel.

Issues:
mechanical and electrical interfaces
time per bit
distances

The Physical Layer

Messages
Application Layer

Segments
Transport Layer

Datagrams
Network Layer

Frames
Data Link Layer
Transfer Units Types
Protocols Examples
Example Wireshark
An end-system processes up to which layer?

A router processes up to which layer?

A link-layer switch processes up to which layer?
Data-Link: communication between machines on the same network (two adjacent nodes).

Network: communication between machines on possibly different networks.

Transport: communication between processes (running on machines on possibly different networks).

Keep in mind
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגולים\תרגול-3---פתרון\תרגול-3---פיתרון-.pdf </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
 
 
  
 : 2תרגיל 
  (א
𝐼𝑛𝑡𝑒𝑟𝑛𝑒𝑡 𝐷𝑒𝑙𝑎𝑦 = 2 [𝑠𝑒𝑐] 
𝐴𝑐𝑐𝑒𝑠𝑠 𝐷𝑒𝑙𝑎𝑦 =
100 𝐾𝑏
5 𝑀𝑏𝑝𝑠
+ 0.5 = 0.5195 [sec] 
𝐿𝐴𝑁 𝐷𝑒𝑙𝑎𝑦 =  
100 𝐾𝑏
100 𝑀𝑏𝑝𝑠
= 0.00098 
𝑇𝑜𝑡𝑎𝑙 𝐷𝑒𝑙𝑎𝑦 = 2 + 0.5195 + 0.00098 = 2.52048 [𝑠𝑒𝑐] 
  (ב
𝐼𝑛𝑡𝑒𝑟𝑛𝑒𝑡 𝐷𝑒𝑙𝑎𝑦 = 2 [𝑠𝑒𝑐] 
𝐴𝑐𝑐𝑒𝑠𝑠 𝐷𝑒𝑙𝑎𝑦 =
100 𝐾𝑏
20 𝑀𝑏𝑝𝑠
+ 0.5 = 0.50488 [sec] 
𝐿𝐴𝑁 𝐷𝑒𝑙𝑎𝑦 =  
100 𝐾𝑏
100 𝑀𝑏𝑝𝑠
= 0.00098 
𝑇𝑜𝑡𝑎𝑙 𝐷𝑒𝑙𝑎𝑦 = 2 + 0.50488 + 0.00098 = 2.50586 [𝑠𝑒𝑐] 
 
 - (ג
𝐼𝑛𝑡𝑒𝑟𝑛𝑒𝑡 𝐷𝑒𝑙𝑎𝑦 = 2 [𝑠𝑒𝑐] 
𝐴𝑐𝑐𝑒𝑠𝑠 𝐷𝑒𝑙𝑎𝑦 = (
100 𝐾𝑏
5 𝑀𝑏𝑝𝑠
+ 0.5) ∗ 0.3 + 0.5 ∗ 0.7 = 0.500586 [sec] 
𝐿𝐴𝑁 𝐷𝑒𝑙𝑎𝑦 =  
100 𝐾𝑏
100 𝑀𝑏𝑝𝑠
+ 
100 𝐾𝑏
100 𝑀𝑏𝑝𝑠
∗ 0.3 = 0.001274 
𝑇𝑜𝑡𝑎𝑙 𝐷𝑒𝑙𝑎𝑦 = 2 + 0.500586 + 0.001274 = 2.50186 [𝑠𝑒𝑐] 
 
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגולים\תרגול-3\Practice3_.pptx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
 Introduction to Computer       Networks
Practice #3
Hasidi Netanel
Today:


 Network Applications Architectures (Client Server vs. P2P).
 Http protocol.
 Web Cache (Proxy Server).








Application
Transport
Network
Link
Physical

Client-Server
There is an always-on host called Server, which services requests from many other hosts, called Clients.



Client hosts can be either sometimes-on or always-on.

Servers are powerful computers and clients rely on Server for resources such as files, devices and even processing power.


P2P (Peer to Peer)
There is minimal (or no) reliance on always-on infrastructure servers.



There is direct communication between pairs of intermittently connected hosts, called peers.

The peers communicate without passing through a dedicated server.

P2P architecture is self-scalability- one does not only requesting service but also adds service capacity to the system by distributing files to other peers.


Distribute Files - Client-Sever :


Minimum Time Required to the Server to send one copy of the file    



Minimum Time Require to one Client to download the file   



Total time Require to distribute the files   





5

Distribute Files – P2P :


Minimum Time Required to the Server to send the first copy of the file    



Minimum Time Require to the slowest Client to download the file   



Minimum time distributing the files    



Minimum total time Require to distribute the files   


)
Q1

)
C-S:
P2P:

HTTP Protocol
HTTP defines how Web clients request Web pages from Web servers and how servers transfer Web pages to clients.


HTTP is implemented in two programs: a client program and a server program. The client program and server program, executing on different end systems, talk to each other by exchanging HTTP messages.
HTTP uses TCP as its underlying transport protocol.
HTTP Request Message
HTTP Response Message

הוא פרוטוקול תקשורת שנועד להעברת דפי HTMLואובייקטים שהם מכילים (כמו תמונות, קובצי קול, סרטוני פלאש וכו') ברשת האינטרנט וברשתות אינטראנט. הפרוטוקול פועל בשכבת היישום של מודל ה-OSI ובשכבת היישום של מודל TCP/IP. שרתי HTTP הם שרתי התוכן המרכזיים ברשת האינטרנט ודפדפנים הם תוכנות הלקוח הנפוצות ביותר לפרוטוקול HTTP.
9

Web Cache (Proxy Server)
Is a network entity that satisfies HTTP requests on the behalf of an origin Web server.


The Web cache has its own disk storage and keeps copies of recently requested objects in this storage.
A user’s browser can be configured so that all of the user’s HTTP requests are first directed to the Web cache.
Once a browser is configured, each browser request for an object is first directed to the Web cache.
What is good for: 
It stores common objects near to the client and reduce the network traffic which allow more quick services. Also it reduce the Web traffic in the internet as a whole.

שדה entity tag 
An ETag is an opaque identifier assigned by a web server to a specific version of a resource found at a URL. If the resource representation at that URL ever changes, a new and different ETag is assigned.
10

Web Cache (Proxy Server)
The browser establishes a TCP connection to the Web cache and sends an HTTP request for the object to the Web cache.
The Web cache checks to see if it has a copy of the object stored locally. If it does, the Web cache returns the object within an HTTP response message to the client browser.
If the web cache does not have the object it opens a TCP connection to the origin server and sends an HTTP request for the object.
The origin server sends the object to the web cache which stores a copy on its local storage.
The web cache then send the object within an HTTP response message to the client browser.
The Process:




11

File Distribution Delays
Internet Delay – the amount of time it takes from when the router on the Internet side of the access link forwards an HTTP request until it receives the response.

Access Delay – the time it takes to transfer files from the internet to the local network.
LAN Delay - the time it takes to transfer files from the local network to the local host. 
Note : all those delays including all the delays we’ve studied in practice #1.
Q2


B+0.5 sec כאשר
B  זמן השידור T trans. ב LAN אין 0.5


B+0.5 sec כאשר
B  זמן השידור T trans  . ב LAN אין 0.5
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגולים\תרגול-4\Practice4-.pptx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
 Introduction to Computer       Networks
Practice #4
Hasidi Netanel
Today:


 Persistent & Non-Persistent Http.
 The Connection between Application & Transport Layers.
 DNS Hierarchy
 Wireshark. 








Application
Transport
Network
Link
Physical

Persistent & Non-Persistent Http
RTT (Round Trip Time)

is the time it takes for a small packet to travel from client to server and then back to the client.     
The RTT includes packet-propagation delays, packet queuing delays in intermediate routers and switches, and packet-processing delays

Persistent & Non-Persistent Http
Non Persistent Http
A connection which only one object sent per tcp connection.
Downloading multiple objects required multiple connections
Initiate tcp connection, transfer object and then close the connection.
Connection field = close.
Execution Time = 


Persistent & Non-Persistent Http
Persistent Http
multiple objects can be sent over single TCP connection between client and server.
Initiate tcp connection only at the beginning, transfer objects and then close the connection.
Default field in http 1.1 . 
Connection field = Keep-Alive.
Execution Time = 
RTT + 

 The Connection between Application & Transport 
Layers
Data integrity – some apps need 100 % reliable transfer, some can tolerate some loss.



Timing – low delay.

Throughput. 

Security – encryption.

The Transport Layer provide logical communication between app processes running on different hosts.


Services on application layer may need

Reliable Transfer.



Flow Control.

Congestion Control.

Connection Setup.

Transport layer can provide

Not Provide:

Delay guarantees.
Bandwidth guarantees.


Throughput- the max rate the application can process the data.
Flow control – prevents the receiver from being overwhelmed by the data.
Congestion control - prevents the network from getting congested.
6

 The Connection between Application & Transport 
Layers
Port Number - A port number is a way to identify a specific process to which an Internet or other network message is to be forwarded.
Socket - A network socket is one endpoint in a communication flow between two programs running over a network.
Socket contains 4 tuples – source IP, Dest. IP, source Port, Dest. Port.


 The Connection between Application & Transport 
Layers
Two clients, using the same destination port to communicate with the same web server application.

Checksum
Provide error detection.

0101010101010101
1000111100001100

1




0101010101010101
1000111100001100

1



checksum

No errors
Sender
Receiver
Checksum:


9

Checksum
Provide error detection.

0101010101010101
1000111100001100

1




0101010101010111
1000111100001100

1



checksum

Error Detection !
Sender
Receiver



Checksum:


10

Checksum
Provide error detection.

0101010101010101
1000111100001100

1



Checksum:

0101010100010101
1000111101001100

1



checksum

No error Detection !
But there is an Error!
Sender
Receiver

TCP Checksum is a 16-bit field in TCP header used for error detection. It is computed over the TCP segment (might plus some padding) and a 12-byte TCP pseudo header created on the fly. 
UDP Checksum calculation is similar to TCP Checksum computation. It’s also a 16-bit field of one’s complement of one’s complement sum of a pseudo UDP header + UDP datagram. 
11



Wireshark
Wireshark is a free and open source network protocol analyzer that enables users to interactively browse the data traffic on a computer network.
it is used to analyze the structure of different network protocols and has the ability to demonstrate encapsulation. 

Wireshark
Source IP

Time sent

Dest. IP

Packet Length

Details of selected Protocol Header

properties in Hexadecimal
Some data can be encrypted

Listing of captured packets


Wireshark
You can filter packets by their top layer protocol name
You can use the filter expression editor

Wireshark
כמה שכבות לוקחות חלק בפאקטות 9,10,12,13,14?

וכמה לוקחות חלק ב 11,15,16?

מדוע בקשת הדף היא האחרונה בסדרת חבילות זו?


21

Wireshark
האם בקשת דף האינטרנט הצליחה ומה סוג התוכן שאתם מבחינים בו?

Wireshark
מה התוכן של הודעה זו?
איזה שכבה משרתת סוג תוכן זה?
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגולים\תרגול-5---פתרון\פתרון-תרגול-5---עדכני.pdf </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
Solution- 
  
Given- 
• Bandwidth = 1 Mbps 
• Distance = 2 x 36504 km = 73008 km 
• Propagation speed = 3 x 108 m/sec 
• Efficiency (η) = 25% = 1/4 
• Go back N is used where N = 127 
  
Calculating Transmission delay- 
  
Let the packet size be L bits. 
We know- 
Transmission delay (Tt) 
= Packet size / Bandwidth 
= L / 1 Mbps 
= L μsec 
  
Calculating Propagation delay- 
  
We know- 
Propagation delay (Tp) 
= Distance / Speed 
= (73008 x 103 m) / (3 x 108 m/sec) 
= 24336 x 10-5 sec 
= 243360 μsec 
  
Calculating value of ‘ß’- 
  
We know- 
ß = Tp / Tt 
ß = 243360 μsec / L μsec 
ß = 243360 / L 
  
Calculating Packet Size- 
  
We know, Efficiency (η) = N / (1+2ß) 
  
Substituting the values, we get- 
1/4 = 127 / (1 + 2 x 243360 / L) 
1/4 = 127 x L / (L + 486720) 
L + 486720 = 508 x L 
507 x L = 486720 
L = 960 bits 
L = 120 bytes 
  
 
 
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגולים\תרגול-5\Practice5_.pptx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
 Introduction to Computer       Networks
Practice #5
Hasidi Netanel
Today:


 ARQ Protocols.








Application
Transport
Network
Link
Physical

What is Reliable Data Transfer?
Reliable Channel

With a reliable channel, no transferred data bits are corrupted or lost, and all are delivered in the order in which they were sent.
It is the responsibility of a reliable data transfer protocol to implement this service abstraction.


ערוץ אמין הוא ערוץ שבו הביטים מגיעים כפי שהם נשלחו – החבילות לא מגיעות תקולות.
וכולם מגיעים בסדר שבו הם נשלחים.
3

ARQ (Automatic Repeat reQuest)    Protocols
We know now the channel isn’t reliable so we need to find a way that allows the receiver to let the sender know what has been received correctly, and what has been received in error and thus requires repeating. 
If the information didn’t received properly, it must be send again.
Reliable data transfer protocols based on this technique (retransmission) knows as ARQ protocols.
We can estimate the protocol based on Utilization, 




4

Stop & Wait ARQ
Send one packet and wait for ACK.
If the ACK has arrived, send another packet.
If the ACK has lost, sent the packet again.

Stop & Wait ARQ

Stop & Wait ARQ
Without loss
With loss

Pr(loss packet) = p
זאת אומרת, הסת' לשידור מוצלח היא 1-p.

utilization : fraction of time sender is busy sending
התוחלת- מספר הפעמים הממוצע שנשדר חבילה

7

ARQ Protocols
Rather than operate in a stop-and-wait manner, the sender is allowed to send multiple packets without waiting for acknowledgments.
The sender and receiver sides of the protocols may have to buffer more than one packet.
Pipelining technique


 GBN (Go Back N) ARQ
The sender is allowed to transmit multiple packets (when available) without waiting for an acknowledgment, but is constrained to have no more than some maximum allowable number, N, of unacknowledged packets in the pipeline.
An acknowledgment for a packet with sequence number n will be taken to be a cumulative acknowledgment, indicating that all packets with a sequence number up to and including n have been correctly received at the receiver.
If a timeout occurs, the sender resends all packets that have been previously sent but that have not yet been acknowledged.

 GBN (Go Back N) ARQ

 GBN (Go Back N) ARQ

Without loss




11

 SR(Selective Repeat) ARQ
Retransmit only what is really need !
The SR receiver will acknowledge a correctly received packet (individually) whether or not it is in order.
Out-of-order packets are buffered until any missing packets are received, at which point a batch of packets can be delivered in order to the upper layer.

 SR(Selective Repeat) ARQ
תרגיל:
קו לווייני בעל רוחב פס BW 1Mbps מחבר שתי תחנות קרקעיות.
המרחק בין כל תחנה קרקעית ללוויין הוא 36504km ומהירות האות s=3*10^8.
מה צריך להיות גודל הפקטה לניצול 25% מהחיבור הלווייני בפרוטוקול Go Back N כאשר  N=127.
נתונים
BW = 1 Mbps
d = 2 x 36504 km = 73008 km
S= 3 x 108 m/sec
Efficiency (η) = 25% = 1/4
N = 127

 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגולים\תרגול-6\Practice6_.pptx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
 Introduction to Computer       Networks
Practice #6
Hasidi Netanel
Today:


 Odd parity exercise
UDP
TCP








Application
Transport
Network
Link
Physical
Odd parity
ערוץ שידור משתמש בקוד לזיהוי שגיאות odd parity. נתון שאורך כל הודעה D הוא 4 ביטים ואורך הקוד לתיקון שגיאות EDC  הוא ביט יחיד. 
ההסת' לשידור כל אחד מהקלטים היא אחידה.
א. כמה הודעות חוקיות אפשריות?


ב. ההסת' שביט יתהפך במהלך השידור היא 0.01. מה ההסתברות x שהמקלט קלט בצורה תקינה D’=0000, בהינתן שהמשדר שידר D=0100?
כל הודעה מורכבת מ-4 ביט (ללא EDC) לכן-    הודעות חוקיות
כדי שהמשדר ישדר בצורה תקינה 0100 יש צורך בעוד ביט EDC’=1. כלומר סה"כ שודר 01001. בשידור זה 3 ביטים נקלטו במקלט בצורה תקינה ואילו 2 בצורה לא תקינה. לכן:



3

Connectionless Transport: UDP
Does just about as little as a transport protocol can do

Provide a multiplexing/demultiplexing service in order to pass data between network layer and the current application level process (plus some light error detection service).
Is Connectionless

no handshaking between UDP sender, receiver. 
each UDP segment handled independently of others. 
Is “best effort”

The application is almost directly talking with the network layer therefore packet can be lost and deliver out of order to the application.

Multiplexing – collection of the letters
Distribute the letters - Demultiplexin אוליי אפשר לפרט כאן יותר מה זה ערוץ אמין ובאילו אמצעים משיגים זאת

A connectionless protocol is a form of data transmission in which an IT signal goes out automatically without determing whether the receiver is ready, or even whether a receiver exists
לא מבטיח העברת מידע אמינה- לא בסדר הנכון, לא שלמות המידע.
לא שומר connection state כמו בtcp – אין באפרים, אין קונצ'סטשיין

4

Connection Oriented: TCP
Pipelined technique. 
Cumulative Acks.
Single retransmission timer.
Checksum.
Retransmissions triggered by:

TCP creates reliable service using:

Timeout events.
Duplicate Acks.


5

Connection Oriented: TCP
Typical Header size = 20 B.
Window size – is used for flow control, indicate the number of bytes that a receiver is willing to accept.
ACK bit – is used if the segment contains an acknowledgment for a segment that has been successfully received.
SYN bit - Sent in the first packet when initiating a connection.
RST bit - The flag causes the receiver to reset the connection.
FIN bit - Used for closing a connection. Both sides need to send a FIN.


TCP Segment Format



6

Connection 
Oriented:
   TCP
TCP connection establishment
and Termination



7


10

TCP ACK Rules
If (no data to send & receive only one in-order ACK)
If (need to send data)
Send also an ACK giving next seq. N expected (piggyback).   Reduce traffic.
Delay Ack until another ack arrives || until period of time has passed.  Prevents extra traffic.
If (new in-order segment has arrived & didn’t send ack for the packet before)
Send immediately Ack. (straightforward of 2).
If (out-of-order segment received)
Send immediately ack (its next seq. num expected)  leads to Fast Retransmission. 
If (missing segment arrives)
Fills a gap. solve the problem of lost segment.
Send Ack (probably a cumulative ack)  informs sender that missing segment finally received.  
If (segment arrives many times)
Send immediately ack. 
Solve the problem of lost ack.
Creates a gap.

1. אם צריך לשלוח מידע – ישלח גם את המידע וגם ack שיגיד מהי החבילה הבאה שלה הוא מצפה(בכך הוא מפחית את התעבורה)
2. אם אין מידע לשלוח וגם יש לו לשלוח רק אק אחד -> להשהות את האק עד שחבילה אחרת מגיעה או עד שזמן מסויים עבר)
3. אם סגמנט חדש הגיע ולא שלחת ack  על הפקטה הקודמת- שלח ack מיידי
4.אם התקבל סגמנט לא בסדר הנכון- שלח אק מיידי ותגיד את הסגמנט שאתה מחכה לו ( בעצם 3 dup acks)
5. אם הגיע סגמנט חסר – תשלח אק ותגיד שהוא הגיע.
הבדלים בין 4 ל5
4 יוצר gap
5 סותם אותו
11

TCP ACK Rules
ציין ליד כל אחד מהפאקטות איזה מס' חוק הוא מייצג?
?
?
?
?
?
?

1,  1   2  1   1   3
12

TCP ACK Rules
?
?

4    5

4. אם התקבל סגמנט לא בסדר הנכון- שלח אק מיידי ותגיד את הסגמנט שאתה מחכה לו ( בעצם 3 dup acks)
5. אם הגיע סגמנט חסר – תשלח אק ותגיד שהוא הגיע.

13

TCP ACK Rules
Fast Retransmission- in order to save timeout we use 3 dup. ack rule. When we received 3 ack on the same segment we send immediately the requested segment and don’t wait for the timeout.



14

TCP ACK Rules
?

6
אם סגמט מגיע מס׳ פעמים – שלח ACK מיד.
15
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגולים\תרגול-7---פתרון\תרגול-7---פיתרון.pdf </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>

 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגולים\תרגול-7\Practice7.pptx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
 Introduction to Computer       Networks
Practice #7
Hasidi Netanel
Today:


TCP Flow Control
 TCP Congestion Control








Application
Transport
Network
Link
Physical
תרגיל 1
נתון:
המחשבים A ו B מנהלים TCP Session – פורט 302 ב A ו 80 אצל B. 
ידוע כי ה Sequence number  ההתחלתי של A הוא 100, של B הוא 200.
B לא שלח מידע ל A אבל כבר קיבל מ A 126 בתים.
B שולח ACK על כל סגמנט
A כעת שולח שני סגמנטים, הראשון עם 70 בתים של מידע, השני עם 50 בתים של מידע.
מהו ה Sequence number של שני הסגמנטים ש A שלח?
ה Seq של הבית הראשון היה 101.
126 בתים כבר נשלחו, כלומר בתים מספר 101 עד 226
ה Seq של הבית הבא הוא 227, כלומר זהו ה seq של הסגמנט הראשון
ה Seq השני הוא 297.
מהו פורט המקור והיעד של שני הסגמנטים?
מקור: 302, יעד: 80

תרגיל 1
נתון:
המחשבים A ו B מנהלים TCP Session – פורט 302 ב A ו 80 אצל B. 
ידוע כי ה Sequence number  ההתחלתי של A הוא 100, של B הוא 200.
B לא שלח מידע ל A אבל כבר קיבל מ A 126 בתים.
B שולח ACK על כל סגמנט
A כעת שולח שני סגמנטים, הראשון עם 70 בתים של מידע, השני עם 50 בתים של מידע.
אם הסגמנט הראשון יגיע לפני השני, מה יהיה ערך ה sequence ו ack של ה ack ש B ישלח ל A לאחר קבלת הסגמנט הראשון?
B לא שלח מידע עד עכשיו
ה Seq שלו נשאר עם הערך של הבית הראשון של המידע – 201.
ב ACK, הוא "יבקש" את הסגמנט הבא – 297.
מה יהיו ערכי הפורטים בACK ש B שלח?
מקור – 80, יעד - 302

TCP Flow Control
sender won’t overflow receiver’s buffer by transmitting too much, too fast.


Window can be
closed (by sender) when data is sent and ack’d.
opened (by receiver) when data is read
receive side of TCP connection has a receive buffer:
TCP “lie” about the real buffer size for a situation where it overflow. 
receiver advertises a window rwnd (RcvWin) with each acknowledgement.

כשהשולח והמקבל מנהלים ביניהם שיחה הם שולחים אחד לשני את גודל החלון האפשרי ביניהם.

5
TCP Flow Control
“Window Closes”
“Window Opens”


6
TCP Congestion Control
Congestion occurs when load on the network greater than capacity of the network, e.g. “too many sources sending too much data too fast for network to handle”.  
Different from Flow Control the network can’t handle, not the end point. 
Keep in mind!
Students used to be confused
TCP Congestion Control
Slow Start

Slow start is used if cwnd < ssthresh.
Slow start named because it starts with the congestion window cwnd = 1 MSS .
increase rate exponentially. cwnd is doubled for every RTT received.

initial rate is slow but ramps up exponentially fast

TCP Congestion Control
Congestion Avoidance – Additive increase

Congestion Avoidance is used if                 cwnd  >= ssthresh. 
Increase the value of cwnd by just a single MSS every RTT.


TCP Congestion Control
Congestion Detection

We react differently to congestion detection
packet loss detected by a timeout  go into slow start ( cwnd = 1 MSS ).
packet loss detected by Dup ACKs  go into fast recovery (cwnd = cwnd /2).
In both cases threshold dropped to half (multiplicative decrease) sstresh = cwnd / 2.
In fast recovery we increase the value of cwnd by 1 for every dup ack received.

Recall from the previous practice that Fast retransmission is when we want to send the lost packet before the timeout, therefore it is called “Fast Recovery”
10

TCP Window Size
TCP separates receiver congestion from network congestion, and uses window flow controls for each


rwnd: receiver window opened (by receiver) when data is read.
cwnd: congestion window
TCP must not send data with a higher sequence number than the sum of the highest acknowledged sequence number and min(cwnd, rwnd).


12
Q2
מחשב מסוים משדר קובץ בגודל של 1MB על גבי סגמנטי TCP בעלי MSS = 1460 בתים.
כמו כן ידוע כי ערך הסף (Threshold) לחלון ה congestion control הוא 128 סגמנטים בחלון.

א. כמה סגמנטים אמורים להישלח?
ב. נתון כי בחלון 11 קרתה תקלה רגעית באחד הנתבים- תקלה שגרמה לכל הסגמנטים בחלון הזה להיזרק. בסיום החלון השולח הגיע ל Timeout מבלי שקיבל אישור על אף אחד מהסגמנטים הללו. למעט מקרה זה נתון כי כל שאר הסגמנטים שנשלחו הגיעו בהצלחה כמו גם כל האישורים עליהם (ACKs).
מלא את הטבלה הבאה עד לשורה בה כל הסגמנטים הנדרשים עברו בהצלחה.
Total Segment Sent	#Segments Per Window	Window number
1	1	1
….	….	….
		

יש טיימר אחד , כל פעם הוא עומד על הפאקט האחרון שלא נשלח עליו ack
13
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגולים\תרגול-8\Practice8-.pptx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
 Introduction to Computer       Networks
Practice #8
Hasidi Netanel
Today:


 Subnets 







Application
Transport
Network
Link
Physical
כתובת IP- כתובת בת 4 אוקטטות (8 ביטים בכל אחת) המזהה את הנתב או ה host.
223.1.1.1 = 11011111 00000001 00000001 00000001




223
1
1
1
Interface- היציאה הפיסית ("הרגל") היוצרת את החיבור בין הראוטר ל host. לנתב יכולות להיות כמה "רגליים". לכל רגל כתובת משלה. כל interface מפריד בין ה subnets.
Interface I
Interface II
Interface III
Subnet- קבוצה של מחשבים שחולקים אותו prefix מסוים של כתובת ip. ניתן להעביר מידע בין מחשבים באותו ה subnet ללא מעורבות של נתב.
Classful Routing- יש 5 מחלקות (סוגים) של הקצאת כתובות המוגדרים היטב (A,B,C,D,E), לכל אחת יש את טווח הכתובות שלה.
Classless Routing- מס' הכתובות אזל, נאלצו לעשות שינוי => CIDR- לכל תת רשת יש prefix מסוים זהה. הרישום מתבצע בצורה a.b.c.d /x כאשר x היא "מסכת הרשת" (subnet mask) שאומרת כמה ביטים שייכים לאותו רצף.
Interface I
Interface II
Interface III
גודל subnet מקסימלי (מס' כתובות חופשיות)-

2 כתובת הן שמורות- אחת לכתובת ה subnet ואחת לכתובת broadcast.
טיפ: באמצעות "משקל" הביט משמאל למסיכה (subnet increment number) נוכל לדעת מה כתובת ה subnet הבא ולהקל בחישוב. בדוגמא הזו "הקפיצות" יהיו ב 2.
Q1
א. מה כתובת הרשת של host שכתובתו 150.123.45.80
ומסכת רשת של 255.255.255.192

192 2 bits of ‘1’ /26
150.123.45.80  A.B.C.01|010000  subnet address: 150.123.45.64 /26
ב. מה מס' המחשב ב subnet?  80-64 = 16

ג. מה מס' המחשבים המקסימלי ברשת? 


Q2
א. ניתנת לכם כתובת 222.85.64.0 /24
עליכם לחלק את ה subnet לתתי רשתות בנות: 15 hosts , 28 hosts, 10 hosts

S2: 15+2 = 17  5 bit needed  A.B.C.001|… /27
S1: 28+2 = 30  5 bit needed  A.B.C.000|… /27
S3: 10+2 = 12  4 bit needed  A.B.C.0100|.. /28
S3	S2	S1	
222.85.64.64/ 28
	222.85.64.32 / 27
	222.85.64.0 / 27	Subnet Add.
222.85.64.79	222.85.64.63	222.85.64.31	Subnet Broadcast
222.85.64.65 - 222.85.64.78
	222.85.64.33 -222.85.64.62
	222.85.64.1 - 222.85.64.30
	Host Ranges
ב. מס' כתובות מבוזבזות\לא מנוצלות:

 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגולים\תרגול-9\Practice9.pptx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
 Introduction to Computer       Networks
Practice #9
Hasidi Netanel
Today:


 IP Header.
 IP Fragmentation.
 ICMP.
 DHCP.
 NAT.







Application
Transport
Network
Link
Physical

IP Header
Identification-                   datagram number (analogues to sequence number in TCP).
Time to live-                                         number of hops until the destination. If this field gets to zero and have not reached destination- we throw the datagram.
Fragmentation offset-                     if the datagram was fragmented, its indicated the data offset (multiply by 8).
Flags-				     indicate if there are more fragmented datagrams in the current datagram identification.                    





3

IP Header
Protocol-                              analogous to the role of the port number field in the transport layer segment. used only when an IP datagram reaches its final destination. The value of this field indicates the specific transport-layer protocol to which the data portion of this IP datagram should be passed.




This field represents the transport layer protocol that handed over data to IP layer. This field comes in handy when the data is demultiplex-ed at the destination as in that case IP would need to know which protocol to hand over the data to.
4

IP Fragmentation
Not all link-layer protocols can carry network-layer packets of the same size. Therefore the network layer must fragment datagrams before the Link Layer can carry those packets.
MTU (Maximum Transfer Unit) -                                         The maximum amount of data that a link-layer frame can carry. For example, Ethernet frames can carry up to 1,500 bytes of data, whereas frames for some wide-area links can carry no more than 576 bytes.
Fragments are reassembled only at the final destination.




5
Q1
נתונה datagram בגודל 4096 בתים, אשר מגיעה לערוץ בו ה MTU הינו 1500 בתים.
הניחו שמספר הזיהוי של החבילה היא 21.
עבור כל פרגמנט שיווצר רשמו את השדות הבאים ב  header
 {identification_Number, length, offset, flag}



6
ICMP
IP does not provide any clue to where datagrams were get lost.
ICMP is a helper protocol that supports IP with facility for:                                            Error reporting & Simple queries.
ICMP does not correct errors, it simply reports them. 
ICMP always reports error messages to the original source.
Checksum – not consider the IP header. 

שולחים הודעות שגיאה/ הודעות בקרה על הרשת באמצעותו, לדוגמא ping, traceroute 
7
ICMP

Type 0 – used to ping

8
ICMP
IP does not provide any clue to where datagrams were get lost.
ICMP is a helper protocol that supports IP with facility for:                                            Error reporting & Simple queries.
ICMP does not correct errors, it simply reports them. 
ICMP always reports error messages to the original source.
Checksum – not consider the IP header. 
Example: Timestamp – request: type=13, replay: type=14.
Example: Echo (ping) – request: type=8, replay: type=0,code=0.


9



לפנייך פלט של תוכנה Wireshark:

א. מאיזה שכבה התהליך החל ? (אפליקציה, תעבורה, רשת , לא ניתן לדעת).
ב. למי שייכת הכתובת 212.179.16.98 ? (נתב, מחשב\שרת , לא ניתן לדעת).
ג. ב. למי שייכת הכתובת 81.218.31.185 ? (נתב, מחשב\שרת , לא ניתן לדעת).
ד. כמה נתבים יש בדרך עד שההודעה מגיעה ליעדה (אם בכלל)?
Q2


10

DHCP
A protocol that allow host to dynamically obtain its IP address from network server when it joins network.
Plug & Play – refer to the ability of the protocol to connecting a host into a network automatically. 
DHCP Message Types:
DHCP Discover. (send within UDP packet to port 67).
DHCP Offer. (Broadcast message).
DHCP Request. (also Broadcast).
DHCP Ack.
IP address lease time – the amount of time for which the IP address will be valid.
Transaction ID – to identify each request (there can be more than one DHCP server within a network).





פרוטוקול תקשורת המשמש להקצאה של כתובות IP ייחודיות למחשבים ברשת מקומית (LAN). בנוסף לכתובת ה-IP,שרת DHCP בדרך כלל יספק למחשב גם נתונים כמו ה-Subnet mask, כתובת שרת ה-DNS וכתובת שער הגישה(Gateway), כך שהמחשב יוכל להתחיל לתפקד ברשת ללא צורך בנתונים נוספים.

כדי לפרסם לשאר ה DHCP-ים במידה וקיימים כי לא נבחרה הכתובת שהם הציעו.
בעקרון בקשת הDHCP request נשלחת בצורת broadcast כדי לאפשר לשאר השרתים לדעת:
1)שהclient נמצא בתהליך עם שרת מסוים.
2)שהם עדיין יכולים להציע לclient מספר IP משלהם כי עדיין לא סיים את התהליך עם השרת ששלח DHCP offer. אסביר בהרחבה את סעיף זה:
יתרון נוסף לשליחת הDHCP request כהודעת broadcast הוא לעדכן את שאר המשתמשים ברשת על הצטרפות הclient.
11

NAT (Network Address Translation)
A Technique used to translate public network address to private network address. 
Allow us to use one set of IP addresses for internal traffic and a second set of addresses for external traffic.
NAT serves these purposes:
Provide type of firewall – hiding internal IP address.
Enable a company to connect multiple machines to one IP address allocated by ISP instead buy a set of addresses.




חיבור מחשבים רבים הנמצאים באותה ברשת המקומית לרשת האינטרנט באמצעות כתובת IP אחת בלבד
 יישום זה שימושי לצורך צמצום כתובות ה-IP בעולם, שהרי במקום שלכל מחשב תינתן כתובת IP חיצונית, כל המחשבים מיוצגים ככתובת אחת בלבד.
12

NAT (Network Address Translation)
Advantages:
Need to buy just one IP address from ISP that can serve the whole local network.
Can change local addresses without notifying the outside world.
Can change ISP without change addresses of internal devices (the opposite from above).
Provide security- internal device addresses are not explicitly addressable.
Disadvantages:
Belongs to the network layer but do transport layer work .
Cant deliver encrypted packets (IPsec).
What happened if someone from outside wants to initiate the connection (traversal Problem).





יתרונות-
אפשר לקנות כתובת ip אחת שתשרת את כל הרשת המקומית
2. אפשר לשנות את הכתובת המקומית בלי לעדכן את כל העולם
אפשר לשנות את ה-isp בלי לשנות את הכתובות של הרכיבים שבתוך
מאפשר אבטחה

Solution: static configuring, UPnP, Relaying

13
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגילי-בית\הגשת-תרגיל-בית-2\200878627_204736961.pdf </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
  יניב לידן 200878627 מגישים:
 דן אברהם 204736961             
  2 תרגיל בית –תקשורת נתונים 
1.    
𝑝𝑎𝑔𝑒 𝑠𝑖𝑧𝑒 = 50𝐾𝐵, 𝑝𝑖𝑛 𝑠𝑖𝑧𝑒 = 250𝐾𝐵, 𝑅𝑇𝑇 = 400𝑚𝑠 , 𝑙𝑖𝑛𝑒 𝑠𝑝𝑒𝑒𝑑 = 100𝑀𝑏𝑝𝑠 
  א.   
A. HTTP non-persistence: 
𝑇 = 2 ∗ 𝑅𝑇𝑇 + + 𝑛 ∗ 2𝑅𝑇𝑇 + =  
= 800𝑚𝑠 + 0.0039065𝑠𝑒𝑐 + 𝑛(800𝑚𝑠 + 0.01953125) =  
= 0.8039065𝑠𝑒𝑐 + 0.81953125𝑛  
B. HTTP persistence: 
𝑇 = 2𝑅𝑇𝑇 + + 𝑛 + 𝑅𝑇𝑇 = 0.8039065𝑠 + 0.01953125𝑛  
C. HTTP persistence with piplining: 
𝑇 = 3 ∗ 𝑅𝑇𝑇 + + 𝑛 = 1.2𝑠𝑒𝑐 + 0.00390625 + 0.01953125𝑛 =  
= 1.20390625 + 0.01953125𝑛  
  גדול .A  ב.  
    B. קטן  
  :C-Sנחשב עבור  א.   .2
𝑁 = 30, 𝐹 = 1𝐺𝐵 = 2 𝑏, 𝜇 = 100𝑀𝐵/𝑠𝑒𝑐 = 100 ∗ 2  𝑏/𝑠𝑒𝑐, 
min(𝑑 ) = 4 𝑀𝐵/𝑠𝑒𝑐 = 2  𝑏/𝑠𝑒𝑐  
 ∗ = ∗
∗
=
∗
= 307.2 𝑠𝑒𝑐, 
( )
= = 2 = 256 𝑠𝑒𝑐  
max
( )
,
∗
= 307.2 𝑠𝑒𝑐  
  :P2Pנחשב עבור    
𝐹 = 2 𝑏,  𝜇 = 10 𝑀𝐵\𝑠𝑒𝑐 =  10 ∗ 2  𝑏\𝑠𝑒𝑐, min(𝑑 ) = 2 𝑏/𝑠𝑒𝑐, 𝑁 = 30,  
∑𝜇 = 20 ∗ 5 + 10 ∗ 2 = 120 𝑀𝐵/𝑠𝑒𝑐 = 120 ∗ 2  𝑏/𝑠𝑒𝑐  
=
∗
= 102.4 𝑠𝑒𝑐  
( )
= = 256 𝑠𝑒𝑐  
  יניב לידן 200878627 מגישים:
 דן אברהם 204736961             
∗
∑
=
∗
∗ ∗
=
∗
∗
=
∗
= 236.307 𝑠𝑒𝑐  
max ,
( )
,
∗
∑
= 256 𝑠𝑒𝑐  
  .P2P-ולכן עדיף לדן לשתף ב C-Sמהיר יותר מאשר  P2Pנראה כי 
  
ם נשפר את מהירות העלאת הנתונים של השרת נוכל . א𝜇-ההגורם המשפיע הינו  C-Sב ב. 
  לקבל זמן מהיר יותר לשיתוף הקובץ.
min (𝑑-הגורם המשפיע ביותר הינו ה P2Pב  אם נשפר את מהירות הורדת הנתונים של  .(
  הקבצים. ףותר נוכל לקבל זמן מהיר יותר לשיתוהחברים האיטיים בי
  
  א.  .3
𝐷 = 2𝑠, 𝐷 = 10 ∗ 𝑋 , 𝑋 = 100 ∗ ∗ ∗
∗
= 100
∗
∗
= = 1.0416  
𝐷 = 1.0416 ∗ 10 = 10.8506 𝑚𝑠, 𝐷 =  10 ∗ 𝑋  ,  
𝑋 = 100 ∗
∗ ∗
∗
=  100 ∗ =  21.3333 ,  
𝐷 = 21.3333 ∗ 10 = 4551.1111  
𝐷 = 𝐷 + 𝐷 + 𝐷 = 2000 + 10.8506 + 4551.1111 = 6561.9617𝑚𝑠 = 6.5619 𝑠  
  ב.   
𝐷 = 0.65 ∗ 2𝑠 = 1.3𝑠 , 𝑋 = 100 ∗ ∗ ∗
∗
∗ 0.65 = 13.8666 
𝐷 = 10 ∗ 𝑋 = 10 ∗ 13.8666 = 1922.8444𝑚𝑠  
𝑋 = 100 ∗
∗ ∗
∗
∗ 0.65 ∗ 2 +
∗ ∗
∗
∗ 0.35 = 1.7187  
𝐷 = 10 ∗ 𝑋 = 29.541𝑚𝑠  
𝐷 = 𝐷 + 𝐷 + 𝐷 = 1300 + 1922.8444 + 29.541 = 3252.3854𝑚𝑠 = 3.2523𝑠  
שלוש אם היינו מגדילים את ההסתברות לפגיעה אז ההשהיה הכוללת הייתה קטנה כיוון ש ג.
  היו קטנות יותר בעקבות השיפור וכך היינו מקצרים את הזמן.ההשהיות 
) מרחקים ארוכיםשל ים במקר(במיוחד של האינטרנט כן, מכיוון שהדבר יקצר את ההשהיה ד. 
  ולכן יחסוך בזמן (ובכסף).ואת כמות הפניות לספקי אינטרנט אחרים 
  
  , ולא ימצא את הקובץ.1, העלות תהייה 0זיכרון הוא ייגש לא.   .4
  והוא ימצא את הקובץ., 2n+1הוא ייגש לכל הזיכרונות, העלות תהייה ב.   
  והוא ימצא את הקובץ. 2העלות תהייה , )0(בוודאות לא הוא ייגש לזיכרון בו נמצא הקובץג.   
  יניב לידן 200878627 מגישים:
 דן אברהם 204736961             
  
  א.   .5
𝑀 ≥ 𝑝 ∗ 𝐶 + (1 − 𝑝) ∗ (𝐶 + 𝑀)  
𝑝 ∗ 𝑀 ≥ 𝐶  
𝑝 ≥   
הינו מבנה נתונים מתוחכם שיכול להגיד בוודאות אם קובץ אינו קיים ובסבירות  Bloom Filterב. 
שבוודאות לא מבנה נתונים זה יכול להועיל כך שנחסוך את כל הגישות לקבצים  גבוהה אם קיים.
  קיימים.
  
לאינטרנט ולכן ככל שהמטמון יהיה כיוון שאם המטמון אינו מעודכן בכל מקרה נאלץ לגשת ג. 
  יותר מעודכן יהיו פחות גישות לאינטרנט.
  
  רגיל. getלעומת  conditional get-על יעילות האינו משפיע  RTT-הא.   .6
כיוון שככל שהגודל יותר  רגיל getלעומת  conditional get-גודל הקובץ מוסיף ליעילות של הב. 
  .cacheאם הוא שמור ב conditional get-יותר יעיל להשתמש ב גדול
לעומת  conditional get-קצב שינוי הקבצים ב"זיכרון הראשי" בשרת המרוחק יוריד מיעילות הג. 
get  יותר, כך הכיוון שככל שהקבצים משתנים בתדירות גבוהה רגיל-cache  רלוונטי פחות ובכל
  מקרה יאלץ לגשת לאינטרנט.
  
7. DPI  עד החלקים הפנימיים זוהי שיטה לעיבוד מידע שעובר ברשת מחשבים ויכול לפקח אחר כל פקטה
 .של הפקטה למשל (ההדרים השונים, מאיפה היא הגיעה וכד')
 Wikipedia, youtubeמקורות: 
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגילי-בית\הגשת-תרגיל-בית-3\200878627_204736961.pdf </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
 מגישים: 200878627 יניב לידן
דן אברהם 204736961               
  3עבודה  –תקשורת 
  .15Bהוא  SYNאורך הודעת   .1
  .2GBגודל הזיכרון במחשב הוא   
  .sec 30זמן למילוי הזיכרון הוא   
𝑁 = = = 2 𝐵 , 𝑇 = =  
𝑇 ∗ 𝑁 = 30𝑠𝑒𝑐   ∗ = 30𝑠𝑒𝑐  
𝑅 = 2 𝐵𝑝𝑠 = 2 𝑏𝑝𝑠 = 256𝐾𝑏𝑝𝑠  
בכך  קבצים בין משתמשים ברשתשירותים ספציפיים של שיתוף מניעת  שימוש מסחרי:א.   .2
  הגורמות לשני הצדדים להאמין שהצד השני אינו מעוניין להמשיך  TCPשמזייפים חבילות 
  .session-ב
  .ע"י הממשל של סיןהרשת שימוש בפרוטוקול לשם צנזור  שימוש פוליטי:
"שתלה" חבילות מזויפות בתעבורה שבין  Comcastהצליחו לזהות שחברת  IEEהבודקים של ב.   
 -ממנויים ב Bittorentוניסו להוריד קבצי  Wireshark-באמצעות שימוש ב שני המשתמשים
Comcast.  בעזרתWireshark כיוון שהגיעו  .הם עקבו אחר תעבורת החבילות משני הצדדים
בפועל השולח מעולם לא שלח אותן, הם הסיקו כי עם חתימת השולח אך  לאחד הצדדים הודעות
  הייתה התערבות מגורם שלישי.
ע"י כך שהוא פוגע בעקרונות יסודיים של  end-to-endפוגע בעקרון ה  Comcastמה שביצעה ג.   
שמעשיה מאיימים פגיעה זו נעשית בכך  עליהם מושתת האינטרנט. חופש השימוש באינטרנט
על מנת להבטיח כי הפרוטוקולים  ISPליצור סיטואציה שבה ייאלצו להשיג הרשאות מחברת 
  שלהם יעבדו כמו שצריך.
יכולה לנתר חבילות של שירותים מתחרים  Comcastיכולה להיווצר בעיה כזו שחברה כמו ד.   
  פים.ובכך לחבל בתחרות בין שני הגו שלה ולפגוע בתעבורת הנתונים שלהם
האינטרנט של פרטנר עובד על התשתית של בזק, ושתיהן מתחרות בתחום ספקיות ה.   
בזק יכולה לנתר ולשבש תעבורה של חבילות של לקוחות פרטנר ובכך להבטיח  האינטרנט.
  לעצמה יתרון משמעותי ב"איכות השירות" בין המתחרות.
  א.   .3
𝑆𝑒𝑛𝑡𝐼𝑛𝑓𝑜 = 1 + 2 + 4 + 8 … + 𝑁 =
∗
= (2𝑁 − 1) ∗ 𝑀𝑆𝑆  
  השליחות עולות אקספוננציאלית, לכן הזמן יקטן לוגריתמית:ב.   
𝑇𝑖𝑚𝑒 =  log 𝑁 ∗ 𝜏   
  ג.   
𝑆𝑒𝑔𝑚𝑒𝑛𝑡𝑠 = 1 + 2 + 4 + 8 + ⋯ + 𝑁 + 2𝑁 =
∗
= 2 ∗ 2𝑁 − 1 = 4𝑁 − 1  
𝑇𝑖𝑚𝑒 = (log 2𝑁) ∗ 𝜏 = (1 + log 𝑁) ∗ 𝜏  
  
 מגישים: 200878627 יניב לידן
דן אברהם 204736961               
. כלומר הזמן בסעיף ב' לוקח N MSS) עד להעברת 3𝜏איטרציות ( 3בקשר של סעיף ב': ייקחו ד.   
= : פי = log ( ).  
. כלומר הזמן בסעיף ג' לוקח 2N MSS) עד להעברת 4𝜏איטרציות ( 4בקשר של סעיף ג': ייקחו 
=פי:   = log (2𝑁 − 16) = 1 + log ( ).  
כשנרצה להעביר מידע בכמה שפחות  1-כדאי להסתכן ולהשתמש בחלון בגודל גדול מה.   
. הסיכון יהיה יעיל רק אם נדע שאנחנו לא שולחים יותר סגמנטים בחלון מאשר מה שהצד חלונות
   השני יכול לקבל.
השני יכול כאשר אין לנו הרבה מידע להעביר, או כאשר אין לנו מידע על כמות הסגמנטים שהצד 
  לקבל אין תועלת בסיכון זה.
  
, Bytes 20 –, גודל רישא של שכבת הרשת TCP – 60 Bytesגודל רישא מקסימלי ב :נתונים א.  .4
  .Byte 1 –של המשתמש  Data-, גודל הBytes 20 –גודל הרישא של שכבת הקו 
𝑠𝑒𝑔𝑚𝑒𝑛𝑡 = 60 + 20 + 20 + 1 = 101 𝐵𝑦𝑡𝑒𝑠  
  =תקורה =   
נצבור את ההקלדות עד  ACKנייגל יישלח סגמנט ראשון ועד לקבלת של אלגוריתם העפ"י  ב.  
הרישות תעלה  התקורה שלובכך  שיגיע לגודל המקסימלי של הסגמנט ורק אז יישלח הסגמנט
  בכל הודעה.
  מקבל ההודעה יבקש מהשולח שיענה על הנוסחה הבאה:עפ"י האלגוריתם של קלארק 
𝑤𝑖𝑛𝑑𝑜𝑤 ≥ min {𝑀𝑆𝑆, עד שלמקבל לא  ACKל הנוסחה מבטיחה שהשולח לא יקב, {
הדבר מגדיל את כמות המידע שנשלח בכל  לקבל הודעה בגודל זה. Bufferיהיה מקום פנוי ב
  .בכל הודעה הודעה ולכן התקורה תעלה
גדול יכול להיווצר מצב שהשולח עלול לחכות זמן רב ובכך לגרום לסגמנט הבא  RTT-אם ה ג.  
   פנוי לקבלת ההודעה.למרות שמקבל ההודעה  לגדול ולעכב את משלוח ההודעה
  
   
 מגישים: 200878627 יניב לידן
דן אברהם 204736961               
5.   
 
 
 
 
  . א
 
  :דיים המשולשתת לחיצת היניתן לראות א
I .ה-IP 132.73.214.120 עם קטה שלח פSYN ל-IP 172.217.21.206. לקשר שה (בקTCP(.  
II .ה-IP 172.217.21.206 קטה עם החזיר פSYN ו-ACK ל חזרה-IP 132.73.214.120. ) אישור
  .ופתיחה חזרה)
III .ה-IP 132.73.214.120  השיבACK ל-IP 172.217.21.206 שן).(אישור סופי לפתיחת הס 
) SYN(כל פעם שנשלח  SYN ,ACKתיחת הסשן ובהחזרה של הכי בבקשה לפ ניתן לראותב. 
  .SACK-תומכים בת וגם המחשב כלומר גם השר .SACK_PERM=1ין ובו מצו flag נשלח איתו
  ן גודל החלון.ואחריו מצוי WINDOWעוד דגל שנשלח הינו  SYNת כי בכל שליחת ניתן לראוג.   
ניה) ובשרת (בקשה ש 64240גודל החלון המקסימלי במחשב שלי (בקשה ראשונה) הינו 
60720.  
  ד.   
  
 
  
 FIN, ACK, ששלח )IP 132.73.214.120( ר נעשתה ע"י המחשב שלירת הקשהיזימה של סגי  
  .לסיום הקשר)IP 172.217.18.3, ל האוניברסיטהראוטר שך הדר(לשרת 
  .גם הוא FIN, ACKהשרת החזיר 
בין המחשב שלי  Keep-Aliveאת הקשר חצי פתוח. (בקשות יר  תן לראות גם כי המחשב השאני
  לשרת)
  
  
 והןעובר במספר תחנות שאינן ידועות מראש  header-אינו רעיון יעיל כיוון שה headerרעיון הצפנת ה .6
  .כיצד לטפל בחבילהעל מנת לדעת  header-משתמשות ב
תאלץ שליחת מפתח להצפנה עבור כל התחנות בהן החבילה עלולה לעבור  header-הצפנת ה
  לכן רעיון זה אינו יעיל כלל. .ועל כן המפתח יהיה בכל אחת מהתחנות ברשת
  
  
 מגישים: 200878627 יניב לידן
דן אברהם 204736961               
  יישומים בהם תומכים מרכזי נתונים מודרניים הם:שלושה  א.  .7
I .Query traffic  
II .Short messages (דורש זמן השהייה נמוך)  
III .long flows (דורש תפוקה גדולה)  
לעומת . 250ms-פחות מבעקביות לוקחות  empty queue RTTבמרכזי נתונים . 1   ב.
  הבקשות לוקחות יותר.שם רשתות לטווחים גדולים 
  סטטיסטי. multiplexing, לעיתים תכופות יש מעט WANבמרכזי נתונים, לעומת . 2
ותחת יחידה הסביבה מאוד הומוגנית  ,WAN, לעומת . במרכזי נתונים3
  אדמיניסטרטיבית יחידה.
כך שאם השאילתה תחולק למספר חלקים  workers-ו aggregatorsהשאילתה תישלח להרבה  ג.  
 aggregator-חוזרת תשובה ללאחר מכן  חלק אחר של האינדקס.יהיה אחראי ל workerכל 
 האחראי אותה הוא יוכל לתקן ולשלוח מחדש על מנת לשפר את התשובות או להעבירן הלאה.
  כלל התשובות מתאחדות לתשובה אחת.
  .במידה ושרת לא מחזיר תשובה מתעלמים ממנו בשקלול ואיחוד התשובות לתשובה סופית
מעט את התשובה לשאילתה כיוון שעיכוב כזה יכול לגרור תשובה פחות איכותית לא ניתן לעכב 
לשאילתה או לגרור עיכוב גדול בהחזרת התשובה למשתמש הקצה, מה שיוריד מאיכות השירות 
על מנת למנוע מצב זה קובעים מראש זמן להחזרת  של המנוע ויגרום לאובדן משתמשים.
  .workers-וה aggregators-תשובות של ה
כדי להתגבר על הקושי הרב לעמוד ב"דדליינים" קפדניים  Facebookהפתרון בו השתמשה  ד.  
  משל עצמה. UDP-based congestion controlהיה פיתוח  TCPבקשרי 
  
  
חוק אמדל הוא חוק למציאת חסם עליון לשיפור הצפוי במערכת מחשב שחלקה מקבילי  .1  .8
בעיקר לחיזוי החסם העליון להאצה המקסימלית שהרצת מספר . חוק זה משמש סדרתי וחלקה
  הנוסחה לחוק אמדל: מעבדים על המערכת תספק.
𝑆 (𝑠) =
( )
  
  נתונים: א.  .2  
𝑓𝑖𝑙𝑒𝑆𝑖𝑧𝑒 = 99𝐾𝑏, ℎ𝑒𝑎𝑑𝑒𝑟𝑆𝑖𝑧𝑒 = 1𝐾𝐵, 𝑡 (𝑟𝑜𝑢𝑡𝑒𝑟) = 1𝑚𝑠, 𝑡 (𝑠𝑒𝑟𝑣𝑒𝑟) = 1𝑚𝑠,   
𝑡 = 0, 𝑑𝑖𝑠𝑡𝑎𝑛𝑐𝑒 = 10,000𝑘𝑚, 𝑏𝑎𝑛𝑑𝑤𝑖𝑑𝑡ℎ = 1𝐺𝑏𝑝𝑠,  
 𝑏𝑎𝑛𝑑𝑤𝑖𝑑𝑡ℎ = 1𝑀𝑏𝑝𝑠  
נזניח את הזמן בין הנתב ללקוח כיוון שהוא  פתוח עם השרת. TCPלמשתמש ישנו קשר 
  .1.5%קטן מ
𝐷 = 3𝑚𝑠 +
∗  
∗
+
 
= 3𝑚𝑠 + 100𝑚𝑠 + 100𝑚𝑠 = 203𝑚𝑠   
   ב.    
𝐷 = 3𝑚𝑠 + 100𝑚𝑠 +
 
+
 
= 105.1𝑚𝑠  
 מגישים: 200878627 יניב לידן
דן אברהם 204736961               
  החסכון היחסי:ג.     
( . )
= 1.5177 0.5177 
  3.   
𝐷 = 3𝑚𝑠 +
∗  
∗
+
 
= 3𝑚𝑠 + 100𝑚𝑠 + 200𝑚𝑠 = 303𝑚𝑠   
  4.  
𝐷 = 3𝑚𝑠 +
∗  
∗
+
 
= 3𝑚𝑠 + 100𝑚𝑠 + 109𝑚𝑠 = 212𝑚𝑠   
  5.  
𝐷 = 201𝑚𝑠 +
∗  
∗
+
 
= 201𝑚𝑠 + 100𝑚𝑠 + 100𝑚𝑠 = 401𝑚𝑠    
  6. 
𝐷 = 3𝑚𝑠 +
∗  
∗
+
 
= 3𝑚𝑠 + 200𝑚𝑠 + 100𝑚𝑠 = 303𝑚𝑠   
  7. 
𝐷 = 3𝑚𝑠 +
∗  
∗
+
 
= 3𝑚𝑠 + 100𝑚𝑠 + 10𝑚𝑠 = 113𝑚𝑠   
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגילי-בית\הגשת-תרגיל-בית-4\200878627_204736961.pdf </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
  יניב לידן 200878627 מגישים:
 דן אברהם 204736961             
  תקשורת – 4עבודה 
  :1שאלה 
עובר בין  fragment-ה .B-ל data-fragmentשולח  Aבמידה ומשתמש תרחיש כזה יכול להיות א. 
אז היא מפצלת אותו ושולחת אותו  fragment-ומגיע לנקודה שלא יכולה להעביר את כל הנתבים 
  .Bאך הגיעו למשתמש  Aכאשר אינן נשלחו במקור ממשתמש  בכמה חבילות
כך שתזהה את החבילות  IP Header-ב ECN-ו DSCPיכולה לנצל את השדות  ISPהספקית  ב.
בטיפול כך שהשירות שהמתחרים שנשלחות ע"י המתחרים שלה ותיתן להן עדיפות נמוכה יותר 
  למעבר של לקוחות מהמתחרים אליהם.שלהם יתנו יהיה פחות טוב, דבר שעלול לגרום 
  
  :2שאלה 
שפעלו בשנים האחרונות פעלו כך שהתוקף יצר רשת עם  prefix hijackמתקפות מסוג א. 
להיות מאין רשתות וכך התוקף שם את  routing tables-שגורם ל gateway-שונה לפרוטוקול 
ע"י יצירת טווח  longest prefix match-כך יכול התוקף לנצל את חוק ה הכתובת שלו ברשת זו.
  ברשת זו כך שתעבורת הנתונים ברשת תגיע אליו. קטן יותר של כתובות
-וכן ב certifications-מבטיח ניתוב בטוח ברשת ע"י שימוש ב Origin authenticationב. 
resource public key infrastructure  וכך מונע התקפות מסוגprefix hijack.  
לכתובת של התוקף  certificationלא יכול למנוע מתקפות בהן קיים  Origin authenticationג. 
  לא יהיה יעיל. Origin authenticationאז  והניתוב עובר דרך הרשת של התוקף
ה דרכה מצריך אישור של כל רשת חדשה, כך שהתוקף לא יכול ליצור רשת חדש BGPSECד. 
  רשת.יעברו הנתונים ללא אישור ספציפי של ה
  :רגיל BGP-ב Asesעפ"י של הניתובים סדר העדיפויות  ה.
I. לקוחות, שותפים, ספק.  
  II ..קצרים, ארוכים  
  III ..אזורים גיאוגרפים  
  :BGPSEC-ב Ases" במאמר, הניתובים הנקבעים ע"י 3ב"מקרה ו.   
I ..לקוחות, שותפים, ספק  
II ..מאובטח, לא מאובטח  
III גיאוגרפים.. אזורים  
   ,(client(: (3536, 3365, 174)(3491, 174), (21740, 174( 3491  ז.   
    02174)peer(: )21740, 174(  
    3356)peer(: , 174)(3356  
  .יםASבין  BGP wedgies -חסרון ראשון: התייחסות לניתובים מאובטחים עלולה לגרום לח.   
  .BGP-ניתן לבצע את ההתקפות בגלל השימוש בחסרון שני:   
   
  יניב לידן 200878627 מגישים:
 דן אברהם 204736961             
  .BGPים השכנים את הניתוב שלו כניתוב קצר בפרוטוקול AS-הזדוני מפרסם ל AS-הט.   
  יעדיף לשלוח  𝐴𝑆-מצב (בשרטוט) ש רוכך ייווצ .BGPSEC-ים השכנים לא יוודאו זו בגלל הAS-ה  
  .𝐴𝑆הזדוני מאשר דרך  AS-נתונים דרך ה  
  
  
  
  
  
  
  
  
  :3שאלה 
כיוון שבמידה וקישור מסוים כושל ניתן גבוה  over-provisioningמשתמשים ב  WAN-לרוב בא. 
  ).over-provisioningלהעביר אותו לקישור אחר ברשת (שקיים בעקבות ה 
גבוה הוא ששימוש בפס רחב גורר עלויות גבוהות  over-provisioningהחיסרון בשימוש ב ב. 
  אחזקות.יותר, מה שמייקר את ה
  אחרות: WANמאפיינים ייחודיים לרשת הפנימית של גוגל לעומת  4ג. 
I . אפליקציות שדורשות רוחב פס גבוה יותר ברשת הפנימית יקבלו אותו ויפנו אותו או
  יאטו בהתאמה את קצב השידור במידה וצריך.
II יישומים, ברשת. ברשת הפנימית של גוגל יש לחברה שליטה מלאה בכל המשאבים)
  שרתים וכד'). 
III ..יש שליטה ברוחב הפס  
IV ..יש שליטה מלאה בתעבורת הנתונים ברשת ממקום אחד ייחודי  
  יתרון ראשון: הקצאה דינמית של רוחב הפס.ד.   
  ).forwarding tableיתרון שני: שליטה ממקום אחד וייחודי (  
  
  :4שאלה 
מגביל את כמות החבילות בבקשה ולא מתייחסת לגודל  Round Robinא. חסרון ראשון: 
חבילות  Xחבילות קטנות יחסית תחכה הרבה לבקשה עם  Xובה החבילות, לכן ייתכן שבקשה 
  גדולות בהרבה.
לוקח בחשבון תלויות בין חבילות כלומר, אם בבקשה מסוימת יש לא  Round Robinחסרון שני: 
ת בבקשה אחרת ייתכן שהיא תשלח את החבילות חבילות שתלויות בחבילות אחרות שנמצאו
  שלה לפני שהחבילות שבהן היא תלויה יישלחו קודם.
וליצור את הבקשות היא למשקל  Round Robinלפתור את החסרונות של השיטה הנלמדה ב. 
  בקשות לפי גודל החבילות ולפי תלויות בניהן.כך שניתן לתת עדיפות ל priority queue מאין
 𝐴𝑆  
 𝐴𝑆  אב"ג  הספק  
 𝑏𝑎𝑑 𝐴𝑆 
  יניב לידן 200878627 מגישים:
 דן אברהם 204736961             
כך  E, ונוריד את העטיפה בנתב Bבנתב  IPv4בחבילה של  IPv6-נעטוף את חבילת הג. 
  יוכלו להעביר את החבילה. IPv6-שלא תומכים ב C, Dשהנתבים 
  
  :5שאלה 
ראוטר ברשת ובכל איטרציה כל , Bellman-Fordמתבסס על אלגוריתם  distance-vectorכיוון שאלגוריתם 
, הזמן שייקח (בהנחה שנגדיר כל ראוטר כקודקוד וכל distance-vectorמקבל ושולח לכל השכנים את ה 
DV  כקשת) הוא הזמן של אלגוריתםBellman-Ford  שהוא𝑂(𝑉𝐸) כלומר ,O  כפול של מספר הראוטרים
  בין הראוטרים. transitions-מספר ה
  
  :6שאלה 
  שני מחשבים. B-ו Aנגדיר א.   
  .A. אם אין תגובה, נבצע את התהליך מחדש עבור השכנים של B-ל A-מ tracertנבצע   
  נאתר את הנתב הראשון ממנו לא הייתה תגובה .packet lossאם עדיין אין תגובה נסיק שיש   
  ונעריך כי הוא הנתב הבעייתי.  
  שני מחשבים. B-ו Aנגדיר ב.   
  ובאופן דומה לסעיף א' נעריך את מיקומו של הנתב הבעייתי תוך חיסכון B-ל A-מ PINGנשלח   
  מירבי במספר החבילות שנשלחות.  
  ייתכן והנתב הבעייתי העביר חבילה שלא טופלה היטב במקום packet lossג. כיוון שאנו מוצאים   
  באחד  או שהוא לא העביר אותה, לכן אם העביר חבילה שלא טופלה היטב היא עלולה להיאבד  
  ב' אי אפשר להגיד בוודאות-בנתב שאינו בהכרח בעייתי ולכן בשיטות המצוינות בסעיפים א' ו  
  שהשרת שמצאנו הוא הבעייתי, אלא המיקום עצמו.    
  
  :7שאלה 
𝐷 𝐶 𝐵 𝐴 𝑁′ 
∞ ∞ 3, 𝐵 0   
∞ ∞ 3, 𝐵   𝐴 
11, 𝐵 13, 𝐵     𝐴𝐵 
  12, 𝐵     𝐴𝐵𝐷 
11, 𝐵 12, 𝐵 3, 𝐵 0 𝐴𝐵𝐷𝐶 
 
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגילי-בית\הנחיות-הגשה-לתרגילי-הבית\HWs_Submission_Insts.docx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
הנחיות הגשה לתרגילי הבית

יש להגיש את תרגילי הבית ביחידים או בזוגות. 
כל זוג שמגיש צריך להגיש את התרגיל פעם אחת בלבד. יש לתת לקובץ שם הכולל את תעודות הזהות של השותפים המגישים אותו, למשל: HW3_012345567_27282929.pdf.
יש להגיש את התרגילים בפורמט PDF. 
שרטוטים ניתן לשרטט בתוכנה (WORD, VISIO וכו'), או לשרטט בכתב יד ולהכניס לקובץ שרטוט סרוק, בתנאי שהוא ברור וקריא. על שרטוט שאינו ברור לחלוטין יופחת ניקוד.
ערעורים על ציוני התרגילים ניתן להגיש רק באמצעות מייל אל בודק התרגילים. 

מותר להיעזר בחברים ובמקורות חיצוניים לשם פתרון תרגילי הבית, אך לא להעתיק. סטודנטים שיגישו תרגילים זהים יקבלו שניהם 0, ויסתכנו להעמדה לדין משמעתי. כנ"ל לגבי העתקה מילה במילה ממקור אחר (ספר, אתר אינטרנט וכו'). אין להעתיק מילה במילה גם מהמצגות בקורס.

אם הגשת כבר את התרגיל, ולפני מועד ההגשה הסופי גילית טעות, ניתן להגיש גרסה מתוקנת – נא לציין בבירור שמדובר בהגשה חוזרת, ושיש להתעלם מההגשה הקודמת.

על שאלות "יבשות" יש לענות בעברית. תיעוד של קוד יש לבצע באנגלית.

נא לציין בכל הגשה שמות מלאים ומספרי ת.ז. של הסטודנטים המגישים (אם מגישים בזוג, יש להגיש פעם אחת בלבד).
לא יתקבלו הגשות באיחור. אם לא הספקת לסיים את התרגיל בזמן, ניתן להגיש באופן חלקי, ולקבל ציון בהתאם למה שהוגש.

כל תרגילי הבית הם חובה, ומהווים חלק מהציון הסופי. 

 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגילי-בית\מעבדה-1---הגשה\200878627_204736961.pdf </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
  יניב לידן 200878627 מגישים:
 דן אברהם 204736961             
  1מעבדה 
  :1שאלה 
    
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  132.73.214.120א. 
  132.72.140.46ב. 
  ) אינה כתובת אמיתית.URL )61.comכתובת הג. 
  ns1.dnsv5.comד. 
 .(UDP (17על גבי פרוטוקול ה. 
 
 
 
 
 
  
  יניב לידן 200878627 מגישים:
 דן אברהם 204736961             
  :2שאלה 
 
 
 
 
 
  
  
  
 208.70.196.104א. 
  IP ,208.70.196.104אותו ב. 
  https://www.riverbed.com/gb/products/steelcentral/opnet.html?redirect=opnetג. 
  שניות 0.291901ד. 
  שניות 0.203319ה. 
  ו. 
  
  
  
  
  
  שניות 0.353467ז. 
  
  
בקשות אחרונות וכך חוסך  Cache-ששומר ב DNSעל מנת לייעל את הגישה החוזרת ישנו שרת ח. 
  לשרת עבור כתובות ששמורות אצלו. DNSבקשות 
   
  יניב לידן 200878627 מגישים:
 דן אברהם 204736961             
3 .  
  
  
  .TCPהיישום משתמש בחבילות א.   
  יעיל יותר בהעברת UDP-הוא ש streaming-לצורך יישומי זמ"א ו UDP-הייתרון בשימוש בב.   
  כיוון שאינו שומר על כך שכל החבילות יעברו.חבילות    
אינו שומר על סדר החבילות ועל כך שכל החבילות יגיעו ולכן יכול להיות  UDP-פרוטוקול בג. 
  בפרוטוקול זה אם נרצה שכל המידע יגיע בצורה מדויקת.   בעייתי להשתמש
  
פעולות שהן  שרת.מצב הולות שלא מובילות לשינוי בפעולות המוגדרות כ"בטוחות" הן פעא.   .4
  כיוון שלא גורמות לשינוי כזה. הן פעולות המוגדרות כ"בטוחות"  "לקריאה בלבד"
לשרת אסור לבצע במקביל מספר גישות שאינן בטוחות שמבקש לקוח מסוים כיון שביצוע ב.   
לבצע חלקית את הפעולות או שרת המקור עלול יגרור מצב בוא  מקבילי של מספר גישות כאלה
  .לחילופין לבצע אותן בסדר כזה שיפגע בנתונים בשרת המקור ויגרום לסתירות בנתונים
כאשר מדובר בפעולות בטוחות, לשרת מותר לבצע באופן מקבילי את עיבוד הבקשות ג.   
ר לא כיוון שביצוע מקבילי של שליחת התגובות עלול לגרור שליחה של תשובות בסד .ותשובותיהן
  תואם להגעת הבקשות.
החלק מהטיפול שחייב להתבצע באופן טורי לכל בקשה (גם בטוחות) הוא שליחת התשובות ד.   
 לבקשות, וזאת על מנת שהתשובות לבקשות יחזרו בסדר תואם להגעת הבקשות.
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגילי-בית\מעבדה-1---הגשה\lab1.pdf </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
 HTTP & DNS: 1מעבדה 
 
 רקע
 (.קונפוציוס)מיוחס ל ומבין" –וזוכר. אני עושה  –ושוכח. אני רואה  -"אני שומע 
הוא כלי  Wireshark החומר הנלמד בקורס."לראות בעיניים" דוגמאות של מטרת המעבדות בקורס היא 
 כל החבילות שהמחשב שולח ומקבל.את לנטר  , שמאפשרחינמי ופשוט
אין צורך להגיש . " שבאתרWireshark-העזר "מבוא לבקובץ להיעזר , יש Wiresharkכהיכרות עם 
 ם.שאת המטלות המתוארות 
 
 : הערות
  ,מאחר שכאמורWireshark  בחבילות שיוצרות "רעש"י למעט אדהחבילות, ככל מנטר את 
עם לשונית אחת בעת ולפיכך מומלץ להשאיר רק דפדפן אחד פתוח  –ואינן רלבנטיות לתרגיל 
של תהליכי רקע חבילות שלא קשורות לתרגיל ב שינוטרוגם כך סביר  –בפועל  ביצוע התרגיל.
 Google)עדכוני תוכנה, סנכרון קבצים של שונים שרצים במחשב, ושולחים ומקבלים חבילות 
Drive / Dropbox וכיו"ב .) 
 יחיד. לסטודנטים שונים יכולות, ואף נכון בית ספר" פתרון לה "אין התרגיל הוא מעבדה ש
 . צריכות, להתקבל תוצאות שונות
  בכדי להעתיק ולהדביק נתונים מתוך החבילות-Wireshark  יש ללחוץ בלחיץ ימין של העכבר
  .Copy  Valuesעל השדה שרוצים להעתיק, ואז לבחור 
 בגלל השימוש בזכרונות מטמון יתכנו הבדלים בין הגישה הראשונה ל-URL  מסוים, לבין
באמצעות  Wiresharkלשמור את הנתונים שניטר עליך . לפיכך, URLהגישות הבאות לאותו 
File  Saveלגשת אליהם שוב בהמשך. י/, כדי שתוכל 
 יש לצרף צילום מסך מ-Wireshark  לכל . מספיק צילום יחיד 1,2,3אחת מהשאלות לכל
יש למזער את השדות שאינם במידת האפשר אך  –השאלה )אין צורך בצילום לכל סעיף בנפרד( 
 הנתונים הרלבנטיים יופיעו בצילום.ולסדר את המידע כך שמירב רלבנטיים, לגלול 
  להכין אותה אני מקווה שיהיה לכם מעניין לפתור את המעבדה, כפי שהיה לי מעניין
 .לכתוב את השאלות בעצמי ו
 
כדי למעט בחבילות כאשר אנו מנסים לגשת לאתרים שונים. במעבדה זו נבחן חלק מהחבילות הנשלחות 
 סדר הפעולות הבא:בכ"א מהשאלות "רעש" שאינן רלבנטיות לתרגיל, מומלץ 
קודם(, ובו לשונית אחת ריקה  יםפתוח ולא היהם דפדפן אינטרנט )אם ו Wiresharkאת לפתוח  .1
לפתוח  ניתן, , כגון דף הבית)ללא דף מסוים(. אם יש לשוניות פתוחות שמציגות אתרים מסוימים
 ת ריקה, ואז לסגור את כל הלשוניות האחרות.נוספלשונית 
מבלי ללחוץ לפניה, ו .wwwבלי להוסיף את הכתובת המתוארת בשאלה, בדפדפן להקליד  .2
ENTER .)כדי לא לטעון אותה, אלא רק להיות מוכנים לעשות זאת במהירות בהמשך( 
 כדי להתחיל ליירט חבילות. Wireshark-ב Startללחוץ  .3
 בדפדפן, כדי לטעון את הדף. ENTERללחוץ  .4
יש להמתין לעלייה או הודעת שגיאה, כגון "הדף לא נמצא".  -שיעלה הדף המתאים עד להמתין  .5
 (.Redirectingשל הדף, לאחר הודעות כגון "מפנה מחדש" ) הסופית
 . Wireshark-ב Stopללחוץ  .6
 
 שאלות
 
. יש להקליד בשורת הכתובת את שתי הספרות האחרונות בתעודת הזהות שלך )אם מגישים את התרגיל 1
   com.בזוג, ניתן לבחור מספר ת.ז. של אחד הסטודנטים(, ואז 
 .com.12ד יהקליש ל", 12"-לדוגמא, אם תעודת הזהות שלך מסתיימת ב
 של המחשב שלך? IP-א. מהי כתובת ה
 המקומי של המחשב שלך? DNS-ל שרת הש IP-ב. מהי כתובת ה
של השרת שמאחסן  IP-קיימת? אם כן, מהי כתובת ה URLג. האם הכתובת שהקלדת מציינת כתובת 
 אותה? 
 . שהקלדת URL-( של הauthoritative nameserver) שרת מורשהשל  IPוכתובת  םשצייני ד. 
 ?DNS-שלח המחשב שלך את בקשת ה( transportה. על גבי איזה פרוטוקול של שכבת התעבורה )
 
 www.opnet.com. יש להקליד בשורת הכתובת: 2
 המקומי?  DNS-של השרת שאליו הצביעה התשובה הראשונה שקיבלת משרת ה IP-א. מהי כתובת ה
 של השרת שעליו מאוחסן דף האינטרנט בפועל?  IP-ב. מהי כתובת ה
 ? URL-www.opnet.comהקנוני של האתר המשויך ל URL-הג. מהו 
עבור הכתובת הנ"ל ועד  הראשונה DNS-את בקשת ה שהמחשב שלך שלחמרגע . כמה זמן חלף ד
 שמכילה את הכתובת שבה מאוחסן הדף בפועל? DNS-תשובת השהתקבלה 
עבור הדף, עד שהתקבלה הראשונה  HTTP-שלח את בקשת ה. כמה זמן חלף מרגע שהמחשב שלך ה
 ?מהשרת שמאחסן את הדף בפועלהתשובה הראשונה 
(, וסגור את הלשונית הקודמת. ENTER)מבלי ללחוץ  com.123ו. פתח לשונית חדשה, הקלד בה שוב 
את החבילות הנשלחות עבור בקשה כדי ליירט כפי שתואר במבוא לתרגיל,  Wiresharkהפעל שוב את 
 החדשה. 
עבור הבקשה, ועד שהתקבלה  HTTPאו  DNSכמה זמן חלף הפעם מרגע שהמחשב שלך שלח בקשת ז. 
 מהשרת שמאחסן את הדף בפועל? HTTP-תשובת ה
 להעריך באיזה מהשיטות שנלמדו בהרצאה נעשה שימוש כדי לייעל את הגישה החוזרת לאתר יח. נס
 הסבירי בקצרה. .מוכר
 
 יש להקליד בשורת הכתובת . 3
https://www.youtube.com/watch?v=loncOoEbLQY 
 . מומלץ גם )אבל לא חובה...( לצפות בסרטון 
 ?UDP-או ב TCPא. האם היישום משתמש בחבילות 
 ?streaming-לצורך יישומי זמן אמת ו UDP-בב. מהם היתרונות בשימוש 
 .UDP-ג. ציינו חיסרון אחד, שמקשה על השימוש ב
 
למשל,  – 6.3.2, פרק RFC 7230-ב HTTP/1.1-ב( של בקשות pipelining)קרא על צינור . 4
 בכתובת:
6.3.2-http://tools.ietf.org/html/rfc7230#section 
 ?(safe methods)"בטוחות"  א. איזה פעולות מוגדרות כ
לנזק תן דוגמא  ?שמבקש לקוח מסוים שאינן בטוחותגישות מספר לבצע במקביל לשרת מדוע אסור ב. 
 שעלול להיגרם אם השרת יבצע פעולות במקביל פעולות שאינן בטוחות.
 , כאשר מדובר בפעולות בטוחות?חלק מהטיפול בבקשת הלקוח מותר לשרת לבצע באופן מקביליאיזה ג. 
 מדוע?
  ?גם כאשר מדובר בפעולות בטוחותבכל מקרה, באופן טורי להתבצע חייב הטיפול מאיזה חלק ד. 
 
 
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגילי-בית\מעבדה-2---הגשה\200878627_204736961.pdf </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
  יניב לידן 200878627 מגישים:
 דן אברהם 204736961             
  2מעבדה 
 
 
 
 
1. ip: 132.73.207.25, port: 52437 
2. ip: 128.119.245.12, port: 80 
3. ip: 132.73.207.25, port: 52437 
 
 
 
 
 
 
 
4. the sequence number is 0. The bit in the marked flag (..1. = Syn: Set) identifies the segment as 
SYN. 
 
 
 
 
 
 
 
 
5. Sequence number of the SYNACK segment is 0.                      Acknowledgment number: 1. 
gaia.cs.umass.edu determined that value considering our first SYN that we sent to the server 
(number 0) so the response was 1 (the relative ack number as it is being represented with 1 bit). 
The flags (..1. = SYN: Set) and the flags (…1 …. = Acknowledgment: Set) are the bits that identifies 
the segment as SYNACK. 
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגילי-בית\מעבדה-2---הגשה\lab2.pdf </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
Lab 2 
 
In this lab, we’ll investigate the behavior of TCP in detail. We’ll do so by analyzing a trace of 
the TCP segments sent and received in transferring a 150KB file (containing the text of 
Lewis Carrol’s Alice’s Adventures in Wonderland) from your computer to a remote server. 
We’ll study TCP’s use of sequence and acknowledgement numbers for providing reliable 
data transfer; we’ll see TCP’s congestion control algorithm – slow start and congestion 
avoidance – in action; and we’ll look at TCP’s receiver-advertised flow control mechanism. 
We’ll also briefly consider TCP connection setup and we’ll investigate the performance 
(throughput and round-trip time) of the TCP connection between your computer and the 
server. 
 
 
 
1. Capturing a bulk TCP transfer from your computer to a 
remote server 
 
Before beginning our exploration of TCP, we’ll need to use Wireshark to obtain a packet 
trace of the TCP transfer of a file from your computer to a remote server. You’ll do so by 
accessing a Web page that will allow you to enter the name of a file stored on your computer 
(which contains the ASCII text of Alice in Wonderland), and then transfer the file to a Web 
server using the HTTP POST method (see section 2.2.3 in the text). We’re using the POST 
method rather than the GET method as we’d like to transfer a large amount of data from your 
computer to another computer. Of course, we’ll be running Wireshark during this time to 
obtain the trace of the TCP segments sent and received from your computer. 
 
 
Do the following: 
 
• Start up your web browser. Go the http://gaia.cs.umass.edu/wiresharklabs/alice.txt 
and retrieve an ASCII copy of Alice in Wonderland. Store this file somewhere on 
your computer. 
• Next go to  http://gaia.cs.umass.edu/wireshark-labs/TCP-wireshark-file1.html. 
• You should see a screen that looks like: 
 
 
• Use the Browse button in this form to enter the name of the file (full path name) 
on your computer containing Alice in Wonderland (or do so manually). Don’t yet 
press the “Upload alice.txt file” button. 
• Now start up Wireshark and begin packet capture (Capture->Options) and then 
press OK on the Wireshark Packet Capture Options screen (we’ll not need to 
select any options here). 
• Returning to your browser, press the “Upload alice.txt file” button to upload the 
file to the gaia.cs.umass.edu server. Once the file has been uploaded, a short 
congratulations message will be displayed in your browser window. 
• Stop Wireshark packet capture. Your Wireshark window should look similar to 
the window shown below. 
 
 
 
2. A first look at the captured trace 
 
Before analyzing the behavior of the TCP connection in detail, let’s take a high level 
view of the trace. 
• First, filter the packets displayed in the Wireshark window by entering “tcp” 
(lowercase, no quotes, and don’t forget to press return after entering!) into 
the display filter specification window towards the top of the Wireshark window. 
 
What you should see is series of TCP and HTTP messages between your computer and 
gaia.cs.umass.edu. You should see the initial three-way handshake containing a SYN 
message. You should see an HTTP POST message and a series of “HTTP Continuation” 
messages being sent from your computer to gaia.cs.umass.edu. Recall from our discussion in 
the earlier HTTP Wireshark lab, that is no such thing as an HTTP Continuation message – 
this is Wireshark’s way of indicating that there are multiple TCP segments being used to 
carry a single HTTP message. You should also see TCP ACK segments being returned from 
gaia.cs.umass.edu to your computer. 
 
Whenever possible, when answering a question you should hand in a printout of the 
packet(s) within the trace that you used to answer the question asked. Annotate the 
printout to explain your answer. To copy a packet, right click and select copy>text. 
 
1. What is the IP address and TCP port number used by the client computer (source) 
that is transferring the file to gaia.cs.umass.edu? To answer this question, it’s 
probably easiest to select an HTTP message and explore the details of the TCP 
packet used to carry this HTTP message, using the “details of the selected packet 
header window”. 
2. What is the IP address of gaia.cs.umass.edu? On what port number is it sending 
and receiving TCP segments for this connection? 
3. What is the IP address and TCP port number used by your client computer 
(source) to transfer the file to gaia.cs.umass.edu? 
 
Since this lab is about TCP rather than HTTP, let’s change Wireshark’s “listing of 
captured packets” window so that it shows information about the TCP segments 
containing the HTTP messages, rather than about the HTTP messages. To have 
Wireshark do this, select Analyze->Enabled Protocols. Then uncheck the HTTP box 
and select OK.  You should now see an Wireshark window that looks like: 
 
 
This is what we’re looking for - a series of TCP segments sent between your computer 
and gaia.cs.umass.edu. We will use the packet trace that you have captured to study TCP 
behavior in the rest of this lab. 
 
Answer the following questions for the TCP segments: 
 
4. What is the sequence number of the TCP SYN segment that is used to initiate 
the TCP connection between the client computer and gaia.cs.umass.edu? What 
is it in the segment that identifies the segment as a SYN segment? 
5. What is the sequence number of the SYNACK segment sent by 
gaia.cs.umass.edu to the client computer in reply to the SYN? What is the 
value of the ACKnowledgement field in the SYNACK segment? How 
did gaia.cs.umass.edu determine that value? What is it in the segment that 
identifies the segment as a SYNACK segment 
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגילי-בית\מעבדה-3---הגשה\200878627_204736961.pdf </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
  יניב לידן 200878627 מגישים:
 דן אברהם 204736961             
  תקשורת נתונים – 3מעבדה 
1.  
 
 
 
 
 
 
 
 
  
  
  
  
  
  
  
  
  ).bgu.ac.il(השרת של   132.72.123.132  132.72.138.38 132.73.223.254א. 
מכיוון שבכל שאילתה כזו מתבצעת בדיקה האם הגענו לשרת היעד, ועד שלא מגיעים ב. 
  השאילתה תחזיר הודעת שגיאה.
של השאילתה ובעזרתו להתאים  sequence numberניתן לראות את ה Infoתחת הכותרת ג. 
  את התשובה.
   
  יניב לידן 200878627 מגישים:
 דן אברהם 204736961             
2 .  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
ייתכן והשרת של  .(ניתן לראות את ההודעה שלא ניתן להגיע ליד) MIT-לא הצלחנו למצוא את המסלול ל
MIT  חוסם שאילתותICMP .מטעמי אבטחה  
  
   
  יניב לידן 200878627 מגישים:
 דן אברהם 204736961             
4 .  
  
  
  
  
  
  
  
  
באוקטטה ביטים  256כלומר יש לנו  255.255.224.0הוא  Subnet Mask-ניתן לראות שהא. 
32כלומר , משמאלהאחת  באוקטטה יטיםב 32+ הימנית  ∗ 256 = 2 = 8192.  
  כמו שרואים בצילום מסך השמאלי. IPv6יש כתובת  Ethernet 2לב. 
  
  .UDPא. מועבר על גבי פרוטוקול   . 5
  
  
  
  
  
  
  
  
  
  .DHCPוקול בפרוטלשחרור ה קשלחה בנש IPבעת שחרור הב.   
  
  
   
  יניב לידן 200878627 מגישים:
 דן אברהם 204736961             
  .DHCPבפרוטוקול  IPת ת בקשות לקבלת כתובניתן לראות כי נשלחוג.   
  .DHCPה שרתמ IP 132.73.215.175לבסוף מתקבל ה  
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגילי-בית\מעבדה-3---הגשה\lab3.pdf </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
 שכבת הרשת: 3מעבדה 
 
 רקע
 (.קונפוציוס)מיוחס ל ומבין" –וזוכר. אני עושה  –ושוכח. אני רואה  -"אני שומע 
 בקורס. חלק מהפרוטוקולים שנלמדונתנסה בהרצה אמיתית של במעבדה זו 
 : הנחיות
  את התשובה , שממחיש של מה שהרצתם צילום מסךלכל שאלה בתשובה יש להדביק
 המילולית. אין צורך ביותר מצילום מסך יחיד לשאלה.
  מומלץ לבצע את התרגיל מתוך האוניברסיטה, מאחר שנתבים ושרתים עלולים לחסום שאילתות
 שנשלח ממחשבים אחרים.
  למשל, הבדל בין הרצה במחשב בחדר של  –גם בתוך האוניברסיטה יתכנו תוצאות שונות
נכון לכן, כרגיל, אין "פתרון בית ספר" מתרגל לבין הרצה במחשב בכיתת מחשבים או במעבדה. 
 לנסות להסביר את התוצאות שקיבלתם.למעבדה, ואתם נדרשים יחיד 
  להכין אותה אני מקווה שיהיה לכם מעניין לפתור את המעבדה, כפי שהיה לי מעניין
 .לכתוב את השאלות בעצמי ו
 
, ואז StartRunבאמצעות  Windowsשל  Command Promptפתח 
 .Wiresharkפתח את  .cmdהקלדת 
ליירט רק את החבילות הרלבנטיות מומלץ להקליד מראש את הפקודה כדי 
, לאחר מכן להתחיל ליירט חבילות Command Prompt-המבוקשת ב
 בשורת הפקודה. Enter, ואז ללחוץ Wiresharkבאמצעות 
 
 
 . tracert bgu.ac.ilהקלד . 1
 ?bgu.ac.ilהשרת של מהן כתובות הנתבים שעברה החבילה שלך, עד )וכולל( הגעתה אל א. 
 ?ICMPהן הודעות שגיאה של  ששולח המחשב שלך ICMP-שאילתות העל  ”מדוע ה"תשובותב. 
 את התשובה המתאימה לה?ששלח המחשב שלך  ICMP-המשאילתות ניתן להתאים לכל אחת כיצד ג. 
 
 tracert mit.eduהקלד . 2
הדבק צילום מסך של התוצאה ? אם כן, MIT-האם הצלחת למצוא את כל המסלול מהמחשב שלך עד ל
לא  tracertשמראה את המסלול. אם לא, נסה לשער מדוע הרצת  ,Command Prompt-בשהתקבלה 
 הצליחה למצוא את המסלול המבוקש.
 
 ipconfig, ובשורת הפקודה הקלד: Start  Run  cmd. בחר שוב  4
למשל, מספר חיבורים קוויים, וכן  –שים לב לכך, שלאותו מחשב עשויים להיות כמה וכמה ממשקים 
 במקרה הצורך, ניתן להתייחס בתשובה לאחד הממשקים בלבד. חיבורים אלחוטיים.
 כמה מחשבים, לכל היותר, יכולים להיות ברשת המקומית שלך? נמק בקצרה.א. 
 ?IPv6לאחד הממשקים שלך יש כתובת ב. האם 
 
תלחץ אל  שלך. IP-. פקודה זו גורמת ל"שחרור" כתובת הipconfig/releaseבשורת הפקודה:  הקלד. 5
 .ENTERעדיין 
, ולאחר מכן יירט את החבילות במשך כמה שניות .בשורת הפקודה enter. לחץ Wiresharkהרץ את 
 (. Wireshark (.pcapngשמור את הפלט של  .הפסק את היירוט
 .ENTERתלחץ עדיין אל . ipconfig/renewהקלד בשורת הפקודה: 
בשורת הפקודה. יירט את החבילות במשך כמה שניות, ולאחר מכן  enter. לחץ Wiresharkהרץ את 
 (. Wireshark (.pcapngהפסק את היירוט. שמור את הפלט של 
, שהוא שמו של פרוטוקול bootpבאמצעות המסנן  DHCPניתן לסנן כדי לראות רק את החבילות של 
 .DHCP"עתיק", שעליו מתבסס 
; אך כתובות המקור והיעד DHCPידיים" שעליה נשען בהרצה, סביר שתראה את "לחיצת ה הערה:
. מאידך, עשויות broadcastעשויות להיות שונות מהתאוריה, שנלמדה בכיתה. למשל, לא תמיד תראה 
 .כאןמסוגים שונים, שעליהם ניתן לקרוא  DHCPלהתווסף חבילות 
 ?DHCPרץ  4-ו 3א. על גבי איזה פרוטוקולים בשכבות 
 .IP-בעת "שחרור" כתובת ה בקצרה את מה שקרה יתארב. 
. האם למחשב שלך ענה שרת IPג. תארי בקצרה את "לחיצות הידיים" בעת ה"רכישה מחדש" של כתובת 
DHCP  ?יחיד, או יותר 
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגילי-בית\עבודות-1-2\assignment1-2.pdf </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
 1תרגיל בית 
 
 . נתונה הרשת הבאה:1
 
2מהירות ההתפשטות על הקו היא  .מטר 40הוא כל לינק אורך  × 108𝑚/𝑠. . 5רוחב הפס של כל אחד מהלינקיםGbps .
 . 5µsבתים. זמן עיבוד החבילה בכל נתב הוא  1000א וגודל המסגרת המשודרת ה
 ?Bל מגיעה במלואה, ועד שהיא Aמסגרת אחת מ לשדרשמתחילים שעובר מהרגע . מהו הזמן הכולל א
לקבל את המידע  תתחיל B. מה צריך להיות רוחב הפס כדי שתחנה Bחבילות לתחנה  5מעוניינת לשלוח  A. תחנה ב
 .לשדר? רמז: ציירו את דיאגרמת הזמנים של מקרה זה תסיים Aבדיוק כאשר תחנה 
 
 . R Mbpsערוצי שידור, שבכ"א מהם ניתן להעביר מידע בקצב של  Q-נתונות שתי תחנות קצה, שמחוברות ביניהן ב. 2
 .Fמעוניינים להעביר ביניהן קובץ בגודל 
 H-סיביות מידע ו L(, כאשר בכל חבילה יש packet switchingא. משדרים את הקובץ בשיטת "מיתוג חבילות" )
 .Dזמן (. כל חבילה מעובדת בנתב שבין תחנות הקצה במשך headerסיביות רישא )
 ניתן להזניח את זמן ההתפשטות ואת זמן העמידה בתור. 
 חבילות במקביל; אך אינו יכול לטפל בחבילות ולשדר בו זמנית. Q-ניתן להניח כי הנתב יכול לטפל ב
 ?בשיטת "מיתוג חבילות"כמה זמן לוקח לשדר את כל הקובץ 
 כדי לפשט, בכל מקום שבו יש חלוקה של פרמטרים, ניתן להניח שהתוצאה היא מספר שלם, ללא שארית. 
 . כמה זמן לוקח לשדר את הקובץ C זמן הקמת הרשת הוא . circuit switchingמשדרים את הקובץ ברשת בשיטת ב. 
 בשיטה זו?
תגדיל י שכדאי יהיה להשתמש ב"מיתוג חבילות"; את הסיכו תגדילג. עבור כ"א מהפרמטרים לשאלה ציין האם הגדלתו 
 או שמא הגדלת הפרמטר לא משנה / לא ניתן לקבוע.; circuit switching-את הסיכוי שנרצה להשתמש ב
 
X (𝑋אחרי זמן  Dשולח חבילה גם כן למחשב  B. מחשב Dשולח חבילה למחשב  A. מחשב 3 < 𝑇) 
 . זמן עיבוד חבילה בנתב זניח.Cשתי החבילות בגודל זהה והן עוברות דרך נתב 
 חשב את הזמן שלוקח להעביר את שתי החבילות ליעד.
 נתונים
  גודל חבילהU .בתים 
  קצב שידור בכל קוR ביטים לשנייה 
  זמן התפשטות בכל לינק קבוע והואT שניות 
  תוספת תקורה על כל הודעהH בתים 
 זמן עיבוד של החבילה בתוך הנתב זניח  
 
. בשאלה זו בלבד, יש לציין את Denial of Service attackאת המושג  במלים שלך. לימוד עצמי: יש להסביר 4
 המקורות שהשתמשת בהם.
 
 
 
 
 
 
 
 
 2תרגיל בית 
 
 250Kbyte בגודל , תמונות nבתוכו , ש50Kbyte, והורדת דף בגודל אינטרנטדפדפן אינטרנט לאתר . ניגשת באמצעות 1
. מהירות הקו היא 400msecהוא שבו מאוחסנים התמונות והדף שהורדת לשרת  ךהמחשב שלמ  RTT -. הכ"א
100Mbps .אפשר להזניח את זמן שידור הודעת ה- GET ולהניח כי כתובת השרת של ,Google .כבר ידועה 
ל הדף כולזמן יידרש לצורך הורדת כמה שלמטה, יש לשרטט דיאגרמת זמנים, ולחשב כל אחד מהמקרים עבור  .א
 . שבחהתמונות למ
A .HTTP non-persistent.  נסמן את זמן ההורדה בשיטה זוTa. 
B .HTTP persistent. 
C .HTTP persistent with piplining.  נסמן את זמן ההורדה בשיטה זוTc. 
 לאור תשובותיך לשני הסעיפים הקודמים, השלימי את המשפטים שלמטה, והסבירי בקצרה: .ב
A. ככל שה-RTT  יותר, היתרון של השימוש בקשר עקבי עם צינור ___ יותר.גדול 
B. ככל שTxmt .גדול יותר, היתרון של השימוש בקשר עקבי עם צינור ___ יותר 
 
 עומדות בפניו שתי אפשרויות:  .חברים( 30עם חבריו ברשת )סה"כ שנמצא ברשותו דן מעוניין לשתף קובץ . 2
  .100MByte/sec שימוש בשרת חזק בעל קצב העלאת נתונים של* 
 , ללא שימוש בשרת כלל.P2Pהתחברות עם המחשב האישי שלו לרשת * 
 תונים הבאים:נהתאם לחבריו, בלדן להחליט איזה מהפתרונות יביא להעברת הקובץ במהירות המירבית לכל עיזרו א. 
 ם הן:מהירויות החיבור לרשת של המחשבים השוני. 1GByteגודל הקובץ 
 קצב הורדת נתונים וניםקצב העלאת נת המחשב
 10MByte/sec 10MByte/sec דן
 5MByte/sec 10MByte/sec מחבריו של דן 10
 5MByte/sec 8MByte/sec חברים נוספים 10
 2MByte/sec 4MByte/sec חברים נוספים 10
 
, מה בכל אפשרותפרמטר אחד בלבד ב. מהו הגורם המשפיע על הזמן הסופי בכל אחת מהאפשרויות? אילו יכולת לשפר 
 היתה התוצאה לאחר השיפור?
 
 נתונה הרשת הבאה )בציור( וכן נתונים הפרטים הבאים: .3
  ההסתברות של שרת הפרוקסי לפגיעה(hit)  :בקובץ היאPℎ𝑖𝑡 =
0.35 
  השהיית האינטרנט היא𝐷𝑤𝑎𝑛 = 2𝑠 בממוצע 
 השהיית ה-access וה-LAN  :מחושבת באופן הבאה𝐷𝑒𝑙𝑎𝑦 =
10𝑋2  כאשרX  מייצג את אחוז השימוש ברשת )לדוגמה עבורה
𝑋 =   ([𝑚𝑠]4000יה הינה ההשה 20%
קבצים בדקה,  10כל אחד מארבעת המשתמשים ברשת מבקש לקבל 
 .MB2גודל כל קובץ הוא בממוצע 
 ניתן להניח שאין עוד צרכנים ברשת.
 
 מהי ההשהיה הכוללת כאשר עובדים ללא שרת פרוקסי? .א
 ללת כאשר עובדים עם שרת פרוקסי?מהי ההשהיה הכו .ב
אם היינו משקיעים עוד כסף וקונים שרת חזק יותר, אשר נותן  .ג
 הסתברות פגיעה גבוהה יותר, האם ההשהיה הכוללת הייתה גדלה או קטנה ביחס לשרת הנתון? הסבירו
קיות ללא קשר לנתונים בשאלה, במידה והקבצים בכל האינטרנט היו מהירים מאוד, האם היה כדאי לספ .ד
 האינטרנט למקם שרת פרוקסי קרוב ללקוחותיהם?
 
 שלמטה.וענה על השאלות , גישה לזיכרונות מטמון ברשתעל במאמר  II-ו I. קרא את פרקים 4
 (.CDN) משתמש נעזר באינדיקטורים כדי לחפש קובץ ברשת להפצת מידע
 נותנים תשובה חיובית )כלומר, מעריכים, שהקובץ נמצא אצלם(. nעד  0האינדיקטורים של זיכרונות 
 .2היא  nעד  1, ועלות הגישה לכ"א מהזיכרונות 1היא  0עלות הגישה לזיכרון מס' 
 .0בזיכרון מס'  ; וכן, שהקובץ לא נמצאnעד  1ידוע לנו )אך לא למשתמש!(, שהקובץ נמצא בפועל בחלק מהזכרונות 
. אל איזה מהזכרונות הוא ייגש? מה תהיה עלות הגישה CPIנתון שהמשתמש ניגש אל הזכרונות בשיטת  .א
 לזכרונות? האם הוא ימצא את הקובץ?
 .EPIחזור על סעיף א', כאשר המשתמש ניגש אל הזכרונות בשיטת  .ב
 רונות הקובץ נמצא באמת.חזור על סעיף א', כאשר למשתמש יש "אורקל", שיודע תמיד באיזה מהזכ .ג
 
. קרוב יותר למחשב המקומי נמצא זיכרון מטמון M. עלות ההורדה של נתון מסוים משרת מרוחק למחשב המקומי היא 5
 (. C (C < M, שעלות הגישה אליו היא web cache -רשת 
צריך להביאו מהשרת  –מה טוב. אם לא  –כאשר מעוניינים לקרוא נתון, ניגשים קודם למטמון. אם הנתון נמצא במטמון 
 (.Mהמרוחק )בעלות של 
 כדי לפשט, נניח שהנתון במטמון הוא תמיד המעודכן ביותר.
 המינימלי שצריך שיהיה לגישות למטמון, כדי שיהיה משתלם להשתמש במטמון? פרט את החישוב. hit rate-א. מהו ה
 להועיל ליעול הגישות לנתונים., וכיצד הוא יכול Bloom Filterב. הסבר בקצרה מהו 
 ג. מה חשיבות ההנחה, שהנתון במטמון תמיד מעודכן?
 
יחסית  – HTTP-ב conditional GET-. כיצד משפיעה הגדלה של כל אחד מהפרמטרים הבאים על יעילות השימוש ב6
 רגיל? GET-ל
 .RTTא. 
 ב. גודל הקובץ שצריך להעביר.
 ראשי", בשרת המרוחק.ג. קצב השינוי של הקבצים ב"זיכרון ה
 
. בשאלה זו בלבד, יש לציין (DPI (Deep Packet Inspectionאת המושג  במלים שלך. לימוד עצמי: יש להסביר 7
 את המקורות שהשתמשת בהם.
 
 
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגילי-בית\עבודות-3-4\assignment3-4.pdf </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
 3בית תרגיל 
 
אחת  SYNאורך הודעת  בזיכרון של המחשב לכל חיבור, KB32 תופס TCP שלהנח שמבנה נתונים . 1
מה צריך להיות קצב השידור המינימלי  זיכרון,  2GB  כ יש במחשב”בתים וסה 15היא  TCPחיבור  של
 שניות ? 30המחשב המותקף תוך כרון של ימנת שיצליח למלא את כל הז על תוקף של
 .הזואת הכתבה  י. קרא2
 .TCP Rst-א. צייני שני שימושים, מסחרי ופוליטי, שנעשו לכאורה ב
"שתלה" חבילות מזויפות בתעבורה שבין  Comcastהות, שחברת לז IEEב. כיצד הצליחו הבודקים של 
 שני המשתמשים?
 What Is So Bad About Comcast's. ניתן לגלול ישירות לכותרת: כאןעבור הסעיפים הבאים, קראו 
Actions?. 
 , ומה הבעיה בכך?end-to-end principle-פוגע ב Comcastשביצעה  ג. כיצד מה
 ד. איזו בעיה עלולה להיווצר מבחינת התחרותיות ההוגנת והנחיות הממונה על ההגבלים העסקיים?
 הוגן במתחרות שלה.-ה. תני דוגמא לצעד דומה שבזק יכולה לנקוט כדי לפגוע באופן לא
 .ה כלשהי על צעד שבזק נקטה בפועל * למותר לציין, שהשאלה לא מעלה טענ
 
 .  2הוא חזקה של  N, כאשר SSThresh=N MSS. נתונים:    3
את הזמן מרגע המשלוח של החבילה הראשונה בחלון עד לקבלת החיוויים על כל החבילות בחלון.  τ-נסמן ב
גם מזמני ההקמה הוא קבוע, ולא תלוי במספר החבילות בחלון. כדי לפשט, נתעלם  τ-כדי לפשט, נניח ש
 והסגירה של הקשר. 
 
)כולל הפעם שבה גודל החלון הוא  SSThresh-מתחילתו ועד להגעה ל TCPא. כמה מידע נשלח בקשר 
SSThresh?) 
  יקח לשלוח את המידע? τ. כמה B-ל A-סגמנטים בלבד מ N-1ב. בקשר מסויים יש צורך בשליחת 
, בלי לאבד אף חבילה ואף 2Nהוא ה שבה גודל החלון ג. בקשר מסויים, מצליחים לשלוח מידע עד לנקוד
Ack . 2כמה סגמנטים נשלחו סה"כ )כולל המשלוח שלN  סגמנטים בחלון יחיד(? כמהτ  יקח לשלוח את
 המידע?
. פי כמה קטן הזמן הנדרש לשליחת N/4 MSS-יחיד ל MSS -ד. מוצע להגדיל את החלון ההתחלתי מ
 טן הזמן הנדרש לשליחת המידע בקשר של סעיף ג'?המידע בקשר של סעיף ב'? פי כמה ק
עבור איזה סוג של קשרים ויישומים כדאי במיוחד "להסתכן" ולהשתמש  –ה. לאור תשובתך לסעיף הקודם 
 ? עבור איזה סוג של קשרים אין הרבה תועלת בנטילת סיכון כזה?1בחלון בגודל התחלתי < 
 
 TCPצאה מכך, בכל פעם שהוא מקליד תו אחד במקלדת, , וכתוtelnet. לקוח מתחבר לשרת בפרוטוקול 4
שולח מהלקוח אל השרת סגמנט ובו בית מידע יחיד )התו שהוקלד(, ומקבל בתגובה סגמנט, וגם בו תו מידע 
 יחיד. 
. כמו כן, נניח שגודל הרישא של TCPנתון שלשני הסגמנטים הנ"ל יש את גודל הרישא המקסימלי של 
 בתים.  20בתים; ושגודל הרישא של שכבת הקו שלהם הוא  20שכבת הרשת שלהם הוא 
כלומר, היחס בין הגודל הכולל של  החבילה, כולל כל התחיליות, לבין  –א. מהי התקורה של התחיליות 
 גודל המידע?
 ב. הסבר, כיצד שימוש באלגוריתמים של נייגל ושל קלארק יכול להקטין את התקורה שחישבנו בסעיף א'.
שנוצרת בשימוש באלגוריתמים הנ"ל במקרה של יישום אינטראקטיבי בין שתי תחנות עם  ג. מהי הבעיה
RTT ?מאוד גדול 
 
 . הקלד את שורת הכתובת:5
https://www.youtube.com/watch?v=IU54pW8KiIY 
 שנשלחו לשם כך, כפי שלמדנו במעבדה הקודמת.  TCP-את חבילות ה Wiresharkויירט באמצעות 
 . Wiresharkצילום מסך של הדבק 
מציג את הערך ההתחלתי שהוגרל  Wiresharkמוגרל, כפי שנלמד בהרצאה,  # Initial Seq-הערה: אף שה
 כ"אפס", כדי להקל על ספירת הבתים שעברו מאז תחילת הקשר.
 .TCP" שהתבצעה ביצירת הקשר של א. תאר בקצרה את "לחיצת הידיים המשולשת
 ?Sack-? האם השרת שניגשת אליו תומך בSack-ב. האם המחשב שלך תומך ב
? מהו גודל חלון הקבלה המקסימלי האפשרי Window Scale-ג. האם המחשב שלך הציע להשתמש ב
 במחשב שלך? מהו גודל חלון הקבלה המקסימלי אצל השרת, שבו מאוחסנת הכתבה?
(. התבונן Pause. ואז עצור את הסרטון )youtube-ט חבילות תוך כדי הרצה של ה"סרטון" בד. התחל לייר
עם  TCP-, ועצור את היירוט לאחר שזיהית, שהדפדפן שלך סגר את קשר הWireshark-בחבילות ב
Youtube הדבק צילום מסך של הסגירה. תאר בקצרה את תהליך הסגירה: מי יזם את הסגירה, האם הצד .
 שאיר את הקשר "חצי פתוח" או סגר גם הוא, איזה דגל הודלק כדי להודיע על בקשת הסגירה וכו'.השני ה
, התשובה עלולה להשתנות ממחשב למחשב, או אף מדפדפן WIRESHARKהערה: כרגיל בשאלות 
 לדפדפן.
 
בחבילות  header. בכדי להעביר מידע רגיש ברשת נהוג להצפין אותו. האם לדעתכם ניתן להצפין את ה 6
 המועברות ברשת? נמקו.
 
 . 2.1, עד סוף החלק DCTCP. קרא את תחילת המאמר על 7
א. ציין שלושה יישומים שבהם תומכי מרכזי נתונים מודרניים, ואת דרישות התעבורה של כל אחד 
 מהיישומים האלה מבחינת השהיה ותפוקה.
 (.Wide Area Networksהבדלים בין רשתות במרכזי נתונים לבין רשתות לטווחים גדולים ) 3ב. ציין 
. מה קורה כאשר Bingאו  Googleג. תאר בקצרה כיצד מטפל מרכז נתונים בשאילתה למנוע חיפוש כגון 
 אחד השרתים לא עונה בזמן על השאילתה? מדוע לא ניתן לעכב מעט את התשובה לשאילתה?
דניים בקשרי כדי להתגבר על הקושי הרב לעמוד ב"דדליינים" קפ Facebookד. באיזו שיטה השתמשה 
TCP? 
 הערה:
SLA = Service Level Agreement   הוא הסכם איכות שירות, המגדיר מחוייבות להשהיה ולתפוקה
( לבין חברות וארגונים )למשל, אב"ג, בנק לאומי, AT&T)למשל, בזק,  ISPsברשת. הסכם כזה נחתם בין 
 דע(.חברות ששוכרות את השימוש במרכז המי –מה שרלבנטי למאמר  –וגם 
   Incast למשל  –היא "פקק התנועה" שנוצר כאשר הרבה מאוד תעבורה מופנית באופן פתאומי ליעד אחד
 ( שמאחה את תוצאות החיפוש בשרתים אחרים לכדי תשובה אחת ללקוח.aggregatorצובר )
 
 8  שאלה
 במילים שלך, ובעברית. , והסבר אותו בקצרהחוק אמדל קרא על .1
  
 מרוחק. הקובץ נכנס בחבילה אחת גדולה. Web משתמש מוריד קובץ משרת
 בין המשתמש לבין השרת יש נתב יחיד.
 פתוח עם השרת. TCP למשתמש יש כבר קשר
 נתוני הבסיס הם:
         :99 גודל הקובץkb 
         ( גודל הרישאheader) :1 של כל חבילהkb. 
         + רישא. בחבילה שאין בה נתונים )קובץ( יש רק רישא. בחבילה שנושאת את הקובץ, יש הקובץ 
         :1 זמן העיבוד בנתבms 
         :1 זמן עיבוד הבקשות בשרתms 
         .זמני ההמתנה בתורים זניחים 
         :ק"מ.  10,000 המרחק מהלקוח לשרת 
         :1 –לנתב  מהלקוח רוחבי הפסGbps 1 –. מהנתב לשרתMbps. 
  
, ועד שהחבילה עם הקובץ מגיעה HTTP את ההמתנה הכוללת מהרגע שבו הלקוח מתחיל לשלוח בקשת D-נציין ב
 אליו במלואה.
 לתוצאה הסופית. 1.5%-בחישובים ניתן להזניח כל גורם שתורם פחות מ
 .k=10^3, M=10^6, G=10^9 כדי להקל, נניח גם ש:
  
2. 
 .D א. חשבי את
. נתון כי הקובץ Conditional Get-(, שמשתמש בproxy web serverב. הנתב משמש מעתה גם כשרת עזר )
 כעת.  D המעודכן ביותר כבר נמצא בשרת העזר )אך עליו לבדוק זאת, כמובן(. מצא את
 ?cond. Get-ג. מהו החיסכון היחסי בהשהיה שנגרם בזכות השימוש ב
  
 ים הבאים נשנה רק פרמטר אחד. יתר הפרמטרים הם כמו בנתוני הבסיס שלמעלה.בכל אחד מהסעיפ
  
 .1. חזור על 199kb . גודל הקובץ הוא כעת3
  
 .10kb-, אך גודל הרישא עלה ל99kb . גודל הקובץ הוחזר להיות4
  
 .ms 100 -. זמן העיבוד בנתב עלה ל5
  
 ק"מ. 20,000-. המרחק מהלקוח לשרת עלה ל6
  
 .Mbps 10-ב הפס מהנתב לשרת שודרג ל. רוח7
 
 
 4בית תרגיל 
 
 , שדנו בה גם בתרגיל הבית הקודם.הזוקרא את הכתבה . 1
, B-ו Aא. בכוכבית )*( בתחתית הכתבה מצוין תרחיש, שבו עשויות להיווצר בקשר בין שני משתמשים, 
התרחיש מהו . ככתובת השולח Aעם הכתובת של  B-לאבל הגיעו  Aשלא נשלחו במקור ע"י חבילות, 
 הזה? 
שהיא גם ספקית טלפוניה קווית או טלויזיה בכבלים יכולה לנצל לרעה את  ISPב. הסבירי בקצרה כיצד 
 , כדי לפגוע במתחרים שלה.IP Header-ב ECN-ו DSCPהשדות 
 
. 18:00עד דקה  הזו; וצפו במצגת 6.1.1, וכן את פרק 3עד סוף פרק  האבטחה באינטרנטפגמי . קראו על 2
 ענו בקצרה.
, שאירעו בשנים האחרונות? כיצד ניצלו התוקפים את הכלל prefix hijackא. כיצד פעלו המתקפות מסוג 
Longest Prefix Match ? 
 ?prefix hijackמונע מתקפות מסוג  origin authenticationב. כיצד 
 לא יכול למנוע? תאר בקצרה את המתקפה.  origin authenticationג. איזו מתקפה 
 מונע את המתקפה שתיארת בסעיף הקודם? BGPSECד. כיצד 
 סדר העדיפויות המדוייק.רגיל? ציין את  BGP-מחליטות על מסלול הניתוב המועדף ב ASesה. כיצד 
" 3במקרה הנפוץ ביותר )"מקרה  BGPSEC-מחליטות על מסלול הניתוב המועדף ב ASesו. כיצד 
 במאמר(?
לכל אחד מהשכנים  AS 174ז. ברשת שבשרטוט משמאל, איזה מסלולים תפרסם 
 שלה?
קישורים ללא חץ מסמנים קשר בין רשתות עמיתות, כלומר, רשתות שים לב לכך ש
לקוח; וקישורים עם חץ מסמנים קשר בין ספק ללקוח.  –שאין ביניהן קשר של ספק 
כמו כן, שים לב הן לאופן הבחירה של מסלולים )ראה הסעיף הקודם(, והן לאופן 
 הבחירה של איזה מסלולים לפרסם.
 
משתמשות  ASes-באינטרנט, כאשר חלק / כל ה BGPSECפרישה חלקית של  ח. ציין שני חסרונות של
 המתואר במאמר. 3או  2במודל האבטחה 
; ואילו הספק של אב"ג החליט לשפר את אבטחת הרשת שלו, BGPSEC-משתמשת בלא ט. נניח כי אב"ג 
דה . שרטט ותאר בקצרה תרחיש שבו, דווקא בעקבות העובBGPSEC-להשתמש ב התחילולשם כך 
 , אב"ג חשופה לאיום חדש, שלא היתה חשופה לו קודם. BGPSEC-שהספק התחיל להשתמש ב
 
 בכתובת: הרשת הפנימית של גוגל. קראי את המאמר על 3
sigcomm13.pdf-http://cseweb.ucsd.edu/~vahdat/papers/b4 
 30למשל, אם משתמשים בכבל של  –היא ליתרות של הרשת  over-provisioning -הערה: הכוונה ב
Gbps  10לצורך העברת תעבורה שברוב הזמן היא רק Gbps יש ,over-provisioning  3של פי. 
 גבוה? over-provisioning-ב WAN-א. מדוע לרוב משתמשים ב
 גבוה? over-provisioning-בב. מהו החיסרון של שימוש 
 אחרות. WAN-מאפיינים יחודיים לרשת הפנימית של גוגל, יחסית ל 4ג. ציין 
 .Software Defined Networksד. ציין שני יתרונות של 
 
4 . 
בין כל הזרמים  Round Robinבשיטת א. נתב מטפל בחבילות שממתינות לצאת מפורט מוצא מסויים 
(flows.שחבילה שלהם צריכה לצאת מהמוצא הנ"ל. ציין והסבר בקצרה שני חסרונות של שיטה זו ,) 
 .Round Robinב. ציין והסבר בקצרה שיטה מעשית שנלמדה בהרצאה, ופותרת את החסרונות של 
ג. ברשת 
שבשרטוט, 
כיצד ניתן 
לשלוח חבילת 
IPv6  מ-A 
 , אףFאל 
שהנתבים 
C,D  בדרך לא
-תומכים ב
IPv6? 
 
 
 5שאלה 
. בהינתן גרסא אי אפשר להניח דבר על מבנה הרשת(כלשהיא )כלומר, כללית נסתכל על טופלוגיית רשת 
( ברשת מקבל nodeכך שבכל איטרציה כל ראוטר ) (distance-vector (DVסינכרונית של אלגוריתם 
 שלו אל כל השכנים שלו. DVשל כל השכנים שלו ושולח את ה  DVאת ה 
את המרחקים לראוטרים השכנים  יתם כשהוא יודע אך ורקראוטר מתחיל את ריצת האלגורבהנחה שכל 
 הסבר בקצרה את תשובתך. ?כנסהמירבי שייקח לאלגוריתם להת שלו, מה מספר האיטרציות
 
 6שאלה 
קרי, מקומות,  –אחת הבעיות העכשוויות הקשות ברשתות תקשורת היא קיומם של "חורים שחורים" ברשת 
ג שגוי של נתבים. הבעיה היא, שבהם חבילות "הולכות לאיבוד". זאת, כתוצאה מכשלים בחומרה או מקינפו
שכאשר חבילה לא מגיעה ליעדה, קשה לנו מאוד לדעת איזה נתב בדרך הפיל את החבילה. כמו כן, התנהגות 
הנתב הפגום היא לאו דווקא זהה לכל החבילות, כלומר: נתב פגום עלול לזרוק את כל החבילות של חלק 
 ימות אחרות. מהזרימות העוברות דרכו, אך להעביר באופן תקין זר
, ולא זורקים אותן; וכן ICMPנניח לצורך השאלה, שכל הנתבים התקינים מטפלים כראוי בחבילות 
 שהכשלים האפשריים הם בנתבים בלבד, ולא בקישורים ביניהם.
זורק את כל החבילות שמנותבות במסלול זה. הצע דרך,  T-ל S-( א. חושדים שאחד הנתבים במסלול מ5)
 , לקבלת הערכה של מקומו של הנתב הפגום. tracerouteהמבוססת על 
, אבל תשתמש בשיטה דומה traceroute( ב. הצע והסבר בקצרה דרך שלא תשתמש בפונקציה הקיימת 8)
 במספר החבילות שנשלחות. מירבי לקבלת הערכה על מקומו של הנתב הפגום, תוך חיסכון 
רכה על מקומו של הנתב הפגום, אך לא את כתובתו ניתן לקבל רק הע( ג. מדוע בשיטות שבסעיף א' וב' 3)
 המדויקת?
 
 7שאלה 
מלאי את הטבלה שלמטה עבור הרצה של אלג' מסוג 
Link State  ברשת שבתמונה עם צומתA .כמקור 
 
 
D C B A N’ 
     
     
     
     
     
 
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגילי-בית\פתרונות-ת-ב-1-3\‏‏HWs_19_Sol_1-3_for_publish.docx </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
פתרון תרגיל בית 1 



 
 
 
























 [Mbps]
























א. ניתוב חבילות: כדי לשלוח את כל המידע צריך F/L חבילות. 
המקור משדר בכל פעם קבוצה של Q חבילות יחד. זמן השידור של הקבוצה הראשונה (Q החבילות הראשונות) הוא (L+H)/R, כי לכל חבילה צריך להוסיף רישא בגודל H.
זמן העיבוד. מאחר שהנתב מטפל בכל פעם ב-Q חבילות במקביל, ומאידך – לא יכול לשדר באותו זמן, נדרש זמן עיבוד כולל של D כפול מס' החבילות חלקי Q, כלומר: DF/(LQ).
זמן השידור הכולל. יש שני מקטעים (מהמקור אל הנתב; ומהנתב אל היעד). אבל המקור יכול לשלוח את כל קבוצות החבילות, מהשנייה והלאה, במקביל לזמן שבו הנתב משדר את קבוצות החבילות שהוא כבר קיבל, מהראשונה והלאה, אל היעד. לפיכך, לשם קבלת זמן השידור הכולל, יש לכפול את זמן השידור של קבוצה אחת במספר הקבוצות + 1. כלומר: [F/(LQ) + 1] [(L+H)/R]
לפיכך, הזמן הכולל הוא: [F/(LQ) + 1] [(L+H)/R] + DF/(LQ).

ב. יש להקים את הרשת (לוקח זמן C), ולאחר מכן לשדר את כל המידע ברצף, ללא תקורה של רישות (headers) – אך על ערוץ יחיד. מכיוון שהמעגל מתפקד כ"צינור" יחיד, מספיק זמן שידור יחיד של הקובץ כולו, ללא כל השהייה של שידור מחדש ו/או של עיבוד בנתב בדרך. 
לפיכך, הזמן הכולל הוא: C +F/R.

ג. ניתן לראות אריתמטית, כי הגדלה של: D,H תגדיל את העדיפות של circ. switch.. ניתן להבין זאת אינטואיטיבית, שכן ככל שלכל חבילה יש תקורה של רישא יותר גדולה או זמן עיבוד ארוך יותר בנתב, יורדת המוטיבציה לשימוש בחבילות.
ניתן לראות אריתמטית, כי הגדלה של L,C תגדיל את העדיפות של "מיתוג חבילות". ניתן להבין זאת אינטואיטיבית, שכן ככל שמגדילים את כמות המידע בחבילה, התקורה היחסית של  הרישא של החבילה הופכת קטנה יותר. כמו כן, ככל שזמן הקמת המעגל ב-circ.switch גדול יותר, שיטה זו הופכת פחות יעילה – מה שמגדיל את העדיפות ל"מיתוג חבילות".
ההשפעה של  R,F מורכבת יותר, ותלויה ביחסי הפרמטרים האחרים. באופן כללי, שינוי גודל הקובץ ו/או קצב השידור בערוץ לא אמור לשנות דרמטית את העדיפות שיש לאחת השיטות על פני רעותה.

פתרון תרגיל בית 2

1.
א. עבור כל אחד מהסעיפים תחילה יש  2RTT לחיבור + לבקשה הראשונה(GET) + זמן הורדת הדף. ההבדל בין הסעיפים הוא באופן שבו התמונות יורדות. 

 
 
Ta = 2RTT +  + n*(2RTT +).
Tb= 2RTT +  + n*(RTT +).
Tc = 2RTT + + RTT + n*().

ב.  
A. גדול יותר. הסבר: במקרה הראשון, שבו הזמן הלו"ש גדול מאוד ביחס לזמן השידור, השימוש בקשר עקבי עם צינור הרבה יותר יעיל; אם גם n גדול מאוד, זמן ההורדה בשיטה זו קטן פי 2n/3 בערך מאשר בשיטה הנאיבית, של קשר לא עקבי.
B. קטן יותר. הסבר: כאשר זמן ההתפשטות הלו"ש זניח ביחס לזמן שידור הקובץ, התועלת היחסית שבשימוש בקשר עקבי עם צינור היא זניחה, כי אין תקורה משמעותית לבקשה חדשה של הלקוח מהשרת עבור כל אובייקט נוסף: מה שחשוב הוא זמן שידור הקובץ, שהוא זהה בשתי השיטות.


2.
א. 
שרת-לקוח:
T = MAX{ 1G * 30 / 100M , 1G/4M } = MAX { 300 sec, 250 sec} = 300sec 
P2P:
T = MAX{ 1G * 30 / (10M + 50M + 50M + 20M ), 1G/4M , 1G/10M } = MAX {231 sec, 250 sec , 100sec } = 250 sec

ב. 
שרת-לקוח: צוואר הבקבוק הוא קצב ההעלאה של השרת. שיפור הפרמטר הנ"ל בלבד יקצר את זמן ההורדה הכולל ל-250 שניות – זמן הנובע מקצב ההורדה של הלקוחות האיטיים ביותר.
P2P: צוואר הבקבוק הוא קצב ההורדה של הלקוחות האיטי ביותר. שיפור מהירות ההורדה של לקוחות אלה תקצר את זמן ההורדה ל-230sec – זמן הנובע מקצבי העלאת הנתונים ברשת.

4. 
המשתמש ייגש רק אל זיכרון מס' 0, שהוא הזול ביותר. הוא ישלם עלות גישה מינימלית של 1, אך לא ימצא את הקובץ הדרוש.
המשתמש ייגש אל כל הזיכרונות 0 עד n. הוא ימצא את הקובץ, אך ישלם על כך בעלות גישה כוללת גבוהה של 2n+1.
המשתמש ייגש אל אחד הזכרונות שבהם הקובץ נמצא באמת, ויימצא את הקובץ המבוקש, בעלות נמוכה של 2.


5. 
א. עלות הגישה דרך המטמון היא: C לכל גישה; ובנוסף, M עבור כל נתון שלא נמצא במטמון. אם נסמן את ה-hit rate ב-h, תוחלת העלות של גישה דרך המטמון היא C+(1-h)M.
עלות גישה ישירות לשרת המרוחק היא M.
כדי שיהיה יעיל יותר לחפש קודם כל במטמון נדרוש: C+(1-h)M < M, שניתן לבטא גם כ: 
h > C/M.

ב. מסנן בלום הוא מבנה נתונים, שעונה על שאילתות של שייכות לקבוצה. בהקשר של מערכת עם זיכרון מטמון, מסנן בלום יכול לענות במהירות גבוהה וברמת דיוק גבוהה מאוד על השאלה האם נתון מסויים נמצא במטמון, כך שקודם כל נשאל את מסנן הבלום, ורק על פי תשובתו נחליט האם לגשת קודם לזיכרון המטמון, או שמא לגשת ישירות לשרת המרוחק.

ג. ללא ההנחה הנ"ל, ניאלץ לגשת לשרת המרוחק בכל מקרה, כדי לוודא שהנתון שנמצא במטמון הוא המעודכן ביותר – דבר שמשנה את החישוב, ובאופן כללי מקטין את התועלת שבשימוש בזיכרון מטמון.

6. 
א. הגדלת RTT תקטין את יעילות השימוש ב-Cond. Get, כי היא גורמת לכך שהחלק היחסי של זמן ההתפשטות בהבאת הנתון (שאותו יש לשלם בכל מקרה – הן ב-Cond. Get והן ב-Get רגיל) נהיה משמעותי יותר.
ב. הגדלת הקובץ שצריך להעביר מגדילה את יעילות השימוש ב-Cond Get יחסית ל-Get רגיל, כי זה הופך את זמן השידור של הקובץ – שנחסך ע"י Cond Get במקרה שהקובץ לא השתנה מאז שהובא למטמון - למשמעותי יותר.
ג. ככל שקצב השינויים של הקבצים איטי יותר, קיים סיכוי גדול יותר, שהקובץ לא השתנה מאז שהורד אל המטמון, ואז התועלת שבשימוש ב-Cond Get, שחוסך את הורדת הקובץ מחדש במקרים אלה, תהיה גדולה יותר. 

פתרון תרגיל בית 3

3.
א. 
1+2+ … + N = N (1 + ½ + ¼ + … + 1/N) = 2N-1

ב.
 1 + 2 + … + N/2 = N-1

גודל החלון בפעם ה-m הוא 2^m.  במשלוח האחרון מתקיים :
2^m = N/2  m = lg(N) – 1
כאשר לאחר כל "מחזור" עם משלוח ממתינים  לקבלת החיוויים.

הספירה מתחילה מ- m=0, כי בפעם הראשונה גודל החלון הוא 1 = 2^0, ומסתיימת ב-lg(N)-1. לפיכך, יש בסה"כ lg(N)-1 המתנות של , כלומר: הזמן המבוקש הוא lg(N)-1]  ].

ג. מס' הסגמנטים שנשלחים סה"כ הוא:
1 + 2 + 4 + … + N + (N+1) + (N+2) + … + 2N = ?

1 + 2 + 4 + … + N/2 = N-1

1 + 2 + 3 + 4 + … + 2N = 2N (2N+1) / 2 = N(2N+1) = 2N^2 + N
1 + 2 + 3 + 4 + … + (N-1) = N(N-1)/2 = ½ N^2 - ½ N
N + (N+1) + (N+2) + … + 2N = 1.5N^2 + 1.5 N 
1 + 2 + 4 + … + N + (N+1) + (N+2) + … + 2N = 1.5N^2 + 2.5N -1

זמן המשלוח עד שגודל החלון הוא N/2 הוא lg(N)-1.
זמן המשלוח עד שגודל החלון הוא N הוא lg(N).

זמן המשלוח לאחר מכן הוא כמס' האיברים בסדרה N, (N+1), (N+2), …, 2N, פחות אחד (לא סופרים את ההמתנה לאחר המשלוח האחרון) - כלומר, N.
לפיכך, זמן המשלוח הכולל הוא N + lg(N).

ד. בסעיף ב' נשלח בתחילה N/4 סגמנטים; אחרי  עוד N/2 סגמנטים; ואחרי עוד  את היתר. בסה"כ 
המתנו 2.
הגדלת החלון ההתחלתי הקטינה את זמן המשלוח של הקובץ של סעיף ב' פי O(lg(N)).

בסעיף ג' שולחים: 
N/4 + N/2 + N + (N+1) + (N+2) + … + 2N
זה לוקח כמעט אותו מס' מחזורים כמו קודם, פרט לכך שהפעם הורדנו מההתחלה lg(N/8) = lg(N)-3  מחזורים, שבהם נשלחו N/4 – 1 הסגמנטים הראשונים; וכדי להשלים את המשלוח החסר הנ"ל, יש להוסיף בסוף, אחרי שליחת 2N סגמנטים, שליחה נוספת, יחידה (גודל החלון הוא 2N+1, וזה די והותר עבור שליחת כל המידע החסר הנ"ל). 
הגדלת החלון ההתחלתי הקטינה את זמן המשלוח של הקובץ של סעיף ג' ב lg(N) -2. הקיטון בזמן המשלוח במקרה זה הוא זניח – הקטנו מ-O(N + lg(N)) ל-O(N).

ה. כדאי להסתכן ולהתחיל עם חלון גדול יותר רק במקרה של משלוח מידע קטן למשל, מחרוזת חיפוש, או מייל קצר, ללא צרופות. במקרה של משלוח נתונים גדולים מאוד – למשל, הורדת קובץ גדול - השיפור הנובע מהגדלת החלון ההתחלתי הוא זניח.

4. 
א. בכ"א משני הכיוונים ישלח מידע בגודל בית יחיד כשהוא עטוף ברישות / תחיליות בגודל 100 – כלומר, תקורה של כ-10,000%!
ב. במקרה זה ישלחו 1kByte נתונים עם 100 Byte  רישות – כלומר, התקורה היא בערך 10%.
ג. בתקשורת אינטראקטיבית כגון telnet המשתמש מעוניין לקבל חיווי מהיר. עיכוב העברת הנתונים ייצור הצטברות של נתונים רבים אצל השולח לפני שליחתם – בדומה לתופעה ה"מעצבנת" של הקלדת מספר אותיות מבלי שהן מופיעות על הצג – שלאחר מכן "מדפיס" בבת אחת את כולן יחד.

Question 8
A.
The total Tprop is: 20,000 [km] / 2*10^8[m/sec] = 0.1 sec.
Server  router Dxmt: 100kb/1mbps = 0.1s.
The rest of the values are negligible.
D~= 0.2 s 

B.
The total Tprop is: 20,000 [km] / 2*10^8[m/sec] = 0.1 sec.
Router  Client Dxmt: 100kb / 1Gbps = 0.1ms
The rest of the values are negligible.
D=0.1 s

C.
~50%.

3. A.
Server  router Dxmt: 200kb/1mbps = 0.2s.
The rest of the calculation is unchanged  D=0.3s.

B
No change from the baseline: D=0.1s.

C. 
(0.3-0.1)/0.3 = 67%.
 
</TEXT>
</DOC>
<DOC>
<DOCNO> C:\Dan\UNI\Jarta.Projects\Hackathon\searchEngine\corpus\MoodleFiles\מבוא-לתקשורת-נתונים-סמ-2\תרגילי-בית\תרגיל-בונוס---הגשה\assignment5.pdf </DOCNO>
<F P=104> מבוא-לתקשורת-נתונים-סמ-2 </F>
<TEXT>
 בונוס - 5תרגיל 
 
לשימוש בערוץ תקשורת משותף מחלקים את הזמן   (TDM (Time Division Multiplexingבפרוטוקול  :תזכורת. 1
(. נסמן את מספר Round Robinל"חריצים", כאשר לכל משתמש מותר לשדר על הערוץ רק בתור הקבוע שלו )
. A-ב -כלומר, אלה שיש להם מה לשדר  -הפעילים מתוכם , ואת המספר הממוצע של המשתמשים N-המשתמשים ב
, כאשר L. הגודל הממוצע של חבילה הוא 1KByteנניח כי האורך של חריץ נקבע כזמן המספיק לשליחת חבילה בגודל 
L< 1KByte. 
 א. מהי הנצילות של ערוץ התקשורת?
( לכל אחד Round Robinר ניתן, ע"פ סבב ), שבה יש בקר מרכזי. בתחילת כל מחזוTaking turnב.   עוברים לשיטת 
, שמציינת כמה בתים ברצונו לשלוח. מותר לכל משתמש X Bytesהמשתמשים זמן לשלוח אל הבקר בקשה בגודל  N-מ
במחזור. לאחר מכן, הבקר המרכזי שולח, ע"פ סבב, לכל אחד מהמשתמשים הפעילים  1KByteלבקש לשלוח לכל היותר 
Y Bytes בדיוק יהיה תורו. הבקר המרכזי מקצה לכל משתמש פעיל זמן המתאים לגודל שהוא ביקש. , שמציינים מתי
 לאחר מכן, כל אחד מהמשתמשים שולח את החבילה בזמן שהוקצה לו, והמחזור מסתיים.
, מידעבחישוב הנצילות יש להתחשב רק בזמן המוקצה להעברת  –מהי הנצילות של ערוץ התקשורת בשיטה זו? שים לב 
 זמן המוקצה להודעות בקרה.ולא ב
 שיטה א' תשיג נצילות גבוהה יותר משיטה ב'. Aג. מצא עבור איזה ערכים של 
-שיטות שונות: השיטה מסעיף א'; השיטה מסעיף ב'; ו 3-ד. כעת נשווה את המאמץ שנדרש לסינכרון בין היחידות ב
Carrier Sense Multiple Access with Collision Detection 
שלוש השיטות הנ"ל נדרש הכי הרבה מאמץ לסנכרון בין היחידות? באיזו מהן המאמץ הנדרש לסנכרון הוא הכי באיזו מ
 קטן? הסבר בקצרה.
כלומר, העמידות בפני תקלות?  –ה. איזו משלוש השיטות שצויינו בסעיף הקודם, היא הגרועה ביותר מבחינת היציבות 
 הסבירי בקצרה.
 
 .Rדרך נתב  Bלמחשב  Aמעבירים קובץ ממחשב . 2
. m/sec 8^10*2ומהירות פעפוע הנתונים בכבל ביניהם היא   4,000kmהוא  B-ל R-זניח. המרחק מ R-ל A-ק מהמרח
 . 10Mbits/secרוחב הפס הוא בכל החוטים הוא 
R  מטפל במשך זמןD=3.9ms ר מספ ותבכל חבילה )סגמנט או חיווי(, לפני שהוא שולח אותה הלאה. במקרה שמגיע
בין זמני הטיפול בחבילות לזמני  pipelineמצליח לייעל את הטיפול )למשל, באמצעות  Rחבילות עוקבות "גב אל גב", 
 יחיד עבור כל הסגמנטים / החיוויים העוקבים יחד. Dהמשלוח של החבילות הקודמות(, כך שיש השהיה של 
של השכבות השונות. גודל  headersוספים לו , שמתוL=1125Bytesמועבר מידע בגודל  B-ל A-בכל סגמנט שנשלח מ
 , ללא מידע.headersחיווי על כל סגמנט. בחיווי יש רק  A-שולח ל H=125Bytes .Bיחד הוא  headers-כל ה
 .~=הערה: במקרה שהחישובים לא נותנים מספרים עגולים, מותר לעגל, אך יש לציין זאת באמצעות הסימן 
הסגמנטים הבאים ברצף,  5מתחיל לשדר את  Aסגמנטים. כלומר,  בכל פעם,  5לוח הוא ( א. נתון, כי גודל חלון המש5)
 .B-ו A ,Rעל הסגמנט הראשון של החלון הקודם. שרטט דיאגרמת זמנים הכוללת את  Ack-מיד לאחר שהגיע ה
משלוח, ועד ( ב. חשב בעזרת הדיאגרמה ששרטטת בא' כמה זמן לוקח מחזור משלוח מתחילת השידור של חלון 3)
 לתחילת השידור של החלון הבא.
  ?R-ל A-מ ( של הקוthroughput( ב. מהי התפוקה )2)
 ?B-ל A-( ג. מהי הנצילות של הקו מ1)
 ? תן דוגמא.Inbandלשיטת  Out-of-band. מהו ההבדל בין שיטת ד( 2)
 ?Inbandלעומת שיטת  Out-of-band. מהו היתרון והחיסרון של שיטת ה( 4)
 
לאחר כל  Backoff Timeלבחירת ה  Binary Exponential Backoffמשתמשים ב  CSMA/CDבפרוטוקול . 3
, מה Binary Exponential Backoffלפי מה שמגודר ב . Kברצף מגרילים חמישית התנגשות. לאחר ההתנגשות ה
 ? K=5ההסתברות לקבל 
 
 
4. 
  
 
 .SWITCHמחשבים מחוברים דרך  5ניתן לראות בשרטוט 
 נניח שטבלת המיתוג במתג ריקה.
 .Bעם מחשב  TCPפותח חיבור  Aמחשב 
 ברשת. Broadcastשולח הודעת  Cמחשב 
 .Eלמחשב  UDPשולח הודעת  Dמחשב 
 מה היא טבלת המיתוג כעת ?
 
5.  
 -ו Source MACמה ה  .ARP Request (who has?) ,ARP Replyי סוגי הודעות: יש שת ARPא. בפרוטוקול 
Destination MAC ? בכל אחת משתי סוגי ההודעות 
 
 ? ARP Replyלהודעת  ARP Requestב. איך מבדילים בין הודעת 
 
</TEXT>
</DOC>
